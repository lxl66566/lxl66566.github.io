<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://absx.pages.dev/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://absx.pages.dev/rss.xml" rel="self" type="application/rss+xml"/>
    <title>绝对值_x 的博客</title>
    <link>https://absx.pages.dev/</link>
    <description>没什么有价值的内容的，真的！</description>
    <language>zh-CN</language>
    <pubDate>Tue, 21 Oct 2025 15:07:23 GMT</pubDate>
    <lastBuildDate>Tue, 21 Oct 2025 15:07:23 GMT</lastBuildDate>
    <generator>@vuepress/plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>推荐</category>
    <category>编程</category>
    <category>原理</category>
    <category>经历</category>
    <category>教程</category>
    <category>评价</category>
    <category>随笔</category>
    <category>学习</category>
    <category>爱好</category>
    <item>
      <title>snipets</title>
      <link>https://absx.pages.dev/coding/snipets.html</link>
      <guid>https://absx.pages.dev/coding/snipets.html</guid>
      <source url="https://absx.pages.dev/rss.xml">snipets</source>
      <description>snipets 我在不同系统上使用的不同 shell 的小脚本记录。 虽然 AI 时代这些 snipets 可能已经变得一文不值，但我还是想纪念一下。 gfixup 我最常用的脚本，没有之一。约等于一个 git-absorb，即将当前的 git 已追踪修改“吸收”到任意 commit（默认为最近的 commit，即 HEAD）。 用法：gfixup [...</description>
      <category>推荐</category>
      <pubDate>Fri, 05 Sep 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>我在不同系统上使用的不同 shell 的小脚本记录。</p>
<p>虽然 AI 时代这些 snipets 可能已经变得一文不值，但我还是想纪念一下。</p>
<h2>gfixup</h2>
<p>我最常用的脚本，没有之一。约等于一个 git-absorb，即将当前的 git 已追踪修改“吸收”到任意 commit（默认为最近的 commit，即 HEAD）。</p>
<p>用法：<code>gfixup [git_commit]</code></p>

<h2>revertversion</h2>
<p>将当前 git 仓库指定 tag 移动到 HEAD（本地 + remote）</p>
<p>用法：<code>rv &lt;tag&gt;</code>，rv 是 revertversion 的 alias</p>

<h2>repeat</h2>
<p>重复执行一条命令多次，主要用于暴力测试。它帮我发现了一些运行上千次才会崩溃一次的 bug。</p>
<p>用法：<code>repeat &lt;...&gt;</code></p>

]]></content:encoded>
    </item>
    <item>
      <title>lua</title>
      <link>https://absx.pages.dev/coding/lua.html</link>
      <guid>https://absx.pages.dev/coding/lua.html</guid>
      <source url="https://absx.pages.dev/rss.xml">lua</source>
      <description>lua 其实我一直都不喜欢 lua，感觉很多设计都是一坨屎，参见 。但是现在是工作，不得不学了。 安装 解释器：lua 或 luajit Vscode 插件： lsp: Lua - sumneko Formatter: Lua - sumneko 或 Stylua。lua 没有好用的 formatter，详见 。 包管理器：luarocks，用法和 s...</description>
      <category>编程</category>
      <pubDate>Mon, 07 Jul 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>其实我一直都不喜欢 lua，感觉很多设计都是一坨屎，参见 <a href="/gossip/fuckxxx.html#lua-%E6%9C%89%E5%A4%9A%E9%9A%BE%E7%94%A8" target="_blank">lua 有多难用</a>。但是现在是工作，不得不学了。</p>
<h2>安装</h2>
<ul>
<li>解释器：lua 或 luajit</li>
<li>Vscode 插件：
<ul>
<li>lsp: <em>Lua - sumneko</em></li>
<li>Formatter: <em>Lua - sumneko</em> 或 <em>Stylua</em>。lua 没有好用的 formatter，详见 <a href="/gossip/fuckxxx.html#lua-%E6%9C%89%E5%A4%9A%E9%9A%BE%E7%94%A8" target="_blank">fuckxxx</a>。</li>
</ul>
</li>
<li>包管理器：luarocks，用法和 scoop 相似，不过也挺难用。</li>
</ul>
<p>配置：</p>
<ul>
<li>luarocks 默认将包安装到全局。想要使用其安装的 lua 包，你还需要额外设置一些环境变量：执行 <code>luarocks path --bin</code>，并将 <code>LUA_PATH</code>, <code>LUA_CPATH</code>, <code>PATH</code> 三个环境变量设为输出的值。</li>
<li><em>Lua - sumneko</em>：sumneko 是神。
<ul>
<li>开启所有能开的 type/hint：<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.hint.enable"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.hint.arrayIndex"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Enable"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.hint.await"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.hint.setType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.hint.paramName"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"All"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.hint.paramType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.hint.awaitPropagate"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.type.checkTableShape"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.type.inferParamType"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.type.weakNilCheck"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Lua.type.weakUnionCheck"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>可惜的是这里面不支持 if 语句的表达式进行 inlay hint，我觉得这还是比较重要的，因为 lua 比较算符会执行隐式转换。</li>
<li>如果你在用其他提供 lua 库的框架（例如 OpenResty），可以<a href="https://github.com/LuaLS/lua-language-server/wiki/Addons" target="_blank" rel="noopener noreferrer">安装插件</a>，以提供更好的 type hint。最简单的插件安装是 <code>Ctrl + P</code> 打开 <code>Lua: Open Addon Manager</code>，然后点点点即可。</li>
</ul>
</li>
<li><em>Stylua</em> 默认使用 tab 作为缩进。要把它改成空格，<a href="https://github.com/JohnnyMorganz/StyLua#configuring-runtime-syntax-selection" target="_blank" rel="noopener noreferrer">需要</a>在项目下创建 <code>.stylua.toml</code>，并写入 <code>indent_type = "Spaces"</code>。</li>
</ul>
<p>其他：</p>
<ul>
<li><a href="https://github.com/EmmyLuaLs/emmylua-analyzer-rust/" target="_blank" rel="noopener noreferrer">emmylua</a> 是一个 rust 写的 lua lsp，如果你不使用 openresty 等三方 addons，可以尝试。</li>
</ul>
<h2>基础</h2>
<ul>
<li>array table 下标从 1 开始！！！</li>
<li>不等：<code>~=</code></li>
<li>数据定义：不加 local 默认是全局变量。</li>
<li>数据优先级：后面覆盖前面，局部覆盖全局</li>
<li>条件 if-then-elseif-else-end</li>
<li>循环：<code>for i = 1,5 do ... end</code>，<code>for i, v in xxx do ... end</code>，<code>repeat ... until xxx</code>，<code>while do ... end</code></li>
<li>goto：通过 <code>::somelabel::</code> 打标签，然后 <code>goto somelabel</code>。</li>
<li>作用域：local 是局部变量关键字。创建的变量的生命周期和作用域仅限于它所在的那个代码块。
<ul>
<li>在交互式 lua 环境中，每一行语句（&gt; 开头）都是一个代码块。也就是说在这些交互式环境中使用 local 定义的变量在后续是访问不了的，因为其生命周期已经结束。</li>
</ul>
</li>
<li>模块化：在某个 lua 文件里最后使用 <code>return xxx</code> 即可暴露变量（可以暴露 local）。然后在其他文件里 <code>local mod = require("folder.filename")</code> 即可，不要包含 <code>.lua</code> 后缀。
<ul>
<li>一般常用的模块写法习惯如下（主要取决于团队）：<div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _M</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> _M</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">xxx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  ...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _M</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
</li>
<li>赋值：lua 默认使用引用赋值。所以就不得不提浅拷贝和深拷贝的概念，在 lua 中要怎么做呢？答：没有这些函数，要自己写。</li>
<li>lua 里没有三元运算符，并且<a href="https://www.runoob.com/w3cnote/trinocular-operators-in-lua.html" target="_blank" rel="noopener noreferrer">不能使用 <code>and .. or</code> 当成三元运算符</a>！！！</li>
</ul>
<h3>数据类型</h3>
<p>string, function, boolean, number, nil, table</p>
<ul>
<li>string：
<ul>
<li>lua string 包含了长度信息，获取长度是 O1 的。</li>
<li>字符串不可变。</li>
<li><code>[[ xxx ]]</code> 为 raw string，更高级的还有 <code>[=[ [[ xxx ]] ]=]</code></li>
<li>split:<div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic">sep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> sep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> == </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">nil</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    sep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"%s" </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 默认以空白字符分割</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = {}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  -- 模式 '[^'..sep..']+' 匹配一个或多个非分隔符的字符</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> part</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> string.gmatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"([^" </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.. </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> .. </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"]+)"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">do</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    table.insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">part</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">end</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>当然，如果需要更进一步控制 split 的次数，那就需要手动 find 了。</li>
<li>slice: <code>string.sub</code></li>
</ul>
</li>
<li>table 就是 key-value pairs，里面的值可以没有 key，没 key 的默认从 number 1 开始，类似 Object + Array 结合体。后续将 kv 的 table 称为 map table，数组称为 array table。
<ul>
<li>正因为底层是 table，所以下标越界不会报错而是给出 nil。</li>
<li>table 初始化可以使用 <code>local a = { b = 5, }</code>，但是如果 key 不是一个合法的变量字符串就需要用 <code>["asd,123"]</code> 这种形式，中括号 + 引号。</li>
<li><code>ipairs(x)</code> 和 <code>pairs(x)</code> 用于取 table 的迭代器。<code>ipairs</code> 专用于迭代数组 table，会忽略所有非 number 的 key。而 <code>pairs</code> 是迭代所有 kv，顺序不定，而且比较慢。</li>
<li><code>table.unpack(some_table, start, end)</code> 用于解包一个 array table，可以给函数参数或变量赋值。start, end 是 optional，如果不指定就到碰到的第一个 nil 为止。而 <code>table.pack</code> 是反向，还会多加一个 <code>n=length</code> 的 kv。</li>
<li><code>table.insert(x, [pos ,] value)</code> 用于插入，<code>table.remove(x [, pos])</code> 用于删除， <code>table.concat(x, " ")</code> 用于字符串连接（只拼值，跳过 kv 对）。
<ul>
<li>lua 的 string 是 immutable 的，通过这样可以动态构造 string。</li>
</ul>
</li>
<li>slice：lua 没有 table 取 slice 的方法，需要自己循环 insert。</li>
<li>通过 <code>#</code> 获取 table/string 长度。对于含有 nil 的 table，获取的长度是<a href="https://www.runoob.com/w3cnote/lua-table-length.html" target="_blank" rel="noopener noreferrer">未定义的</a>！
<ul>
<li>所以不要在 lua 的 array table 中使用 nil 值！因为 map table 需要用 <code>tab.key = nil</code> 来删除一个 kv 对，所以经常在 array table 也这样做了，这是不行的！</li>
</ul>
</li>
<li>判断是否为空：<code>t == nil or next(t) == nil</code>。注意一般来说都要先检查 nil。</li>
</ul>
</li>
<li>function：
<ul>
<li>默认除了 table 以外都是值传递</li>
<li>传入参数过多忽略，过少用 nil 填</li>
<li>可以用 ... 传不定长参数，用 <code>local x = {...}</code> 拿到一个 array table。</li>
<li>函数必须放在调用的代码之前</li>
</ul>
</li>
<li>显式类型转换只有 <code>tostring(x)</code> 和 <code>tonumber(x)</code>。如果要转为 bool 需要用 <code>not not x</code>。
<ul>
<li>除了 nil（和 false 本身）转为 bool 会被转为 false，其他值都会转为 true。</li>
<li>table 调用 <code>tostring(x)</code> 的结果是它的地址</li>
</ul>
</li>
<li>隐式转换：
<ol>
<li>算数运算中，字符串，bool 和 nil 会转为数字</li>
<li>字符串连接符 <code>..</code>，数字和 nil 会转为字符串</li>
</ol>
</li>
<li>迭代器：请使用 <a href="https://github.com/luafun/luafun" target="_blank" rel="noopener noreferrer">luafun</a> 三方库。luafun 提供了函数式和对象式的迭代器类型，方便使用。</li>
</ul>
<h3>fs 与文件操作</h3>
<p>文件 io：</p>
<div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">io.open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"input.txt"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"r"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> line</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lines</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">do</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">   print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">end</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">infile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> outfile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">io.open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"output.txt"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"w"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- 可以加错误处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> not </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outfile</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> then</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">  outfile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">end</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">outfile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fs：使用 luafilesystem 库。</p>
<h2>高级</h2>
<ul>
<li><code>setmetatable(var1, {__add = myfunc})</code> 可以重写内置的方法
<ul>
<li>在所有方法里，<code>__index</code> 又是最常用的一个，这就相当于用 <code>var1.xxx</code> 时就会拿到 key 为 xxx 的 value。</li>
<li>让 table 变为 readonly 可以加一个 <code>__newindex = function() error("no modification allowed") end</code>。</li>
</ul>
</li>
<li>面向对象：高级的 table<div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> MyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> mt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">__index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">MyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">deposit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  ...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">withdraw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  ...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic">balance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  balance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">balance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> or </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> setmetatable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">balance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">balance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">end</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>对于实例，使用 <code>.</code> 则只是获取 static 的函数本身，而可以用 <code>:</code> 代表调用其成员函数，这是一个语法糖。
<ul>
<li>但是内置类型的函数，例如 <code>table.remove</code> 不能直接用 <code>t:remove</code> 这样调用！究其原因，table 不是类，而是一个内置库。如果需要用 <code>:</code>，要设置元表：<code>setmetatable(t, { __index = table })</code>。</li>
</ul>
</li>
</ul>
</li>
<li>反射：用 debug 库，不过会影响性能。</li>
<li>协程：lua 的协程依赖于 <code>coroutine.create</code>, <code>coroutine.resume</code>, <code>coroutine.yield</code>，yield 就相当于是 await 点交出控制权一样。
<ul>
<li>协程是单线程的，任何时候不会有两个协程同时执行。</li>
<li>lua 5.2 支持 yield C 函数，5.4 引入协程取消机制。</li>
<li>没有自带的一个 async 运行时，需要自己手写调度器。如果在用 openresty 等，也可以使用这些框架里的成熟调度器，<code>ngx.thread.spawn</code> 和 <code>ngx.thread.wait</code> 好用多了。</li>
</ul>
</li>
<li>没有 RAII，所以各种 cosocket 都要手动关，否则就泄漏。</li>
<li>错误处理：正常来说使用 <code>pcall(func, ...args)</code> 进行包装，相当于一个 try-catch。或者直接使用 safe 库，不要抛出错误而是正常返回错误，例如 <code>cjson.safe</code>。</li>
<li>很多实践中会在 lua 文件最上方声明很多 local 函数，这个做法的目的是将 _G 表中的函数变为局部变量，以达到更快的调用，也可以防止不小心修改了全局变量。</li>
<li>lua 支持尾递归，只要是 <code>return func(...);</code> 的形式。</li>
</ul>
<h3>gc</h3>
<p>lua 5.4 之前使用的是增量 gc，使用较为细化的标记-清除过程。5.4 添加了分代特性，减少了老年代的扫描频次。</p>
<p>释放数据的标准做法是将其设为 nil，以便在下一次 gc 将其清理。</p>
<p>lua 可以通过下面的方式设置弱引用表，弱引用的部分不持有所有权：</p>
<div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">-- __mode = "k", "v" 或 "kv"，代表哪部份是弱引用</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> weakTable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">setmetatable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({}, {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">__mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"k"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><p>根据这些 gc 机制，可以针对性注意，提升性能：</p>
<ul>
<li>避免在循环或频繁调用的函数中创建闭包或表</li>
<li>及时释放</li>
</ul>
<h3>ffi</h3>
<p>lua 的 ffi 开销比想象的要小。lua 不同类型的开销如下：</p>
<ul>
<li>number：几乎为 0</li>
<li>string：传入几乎为 0，接收需要一次拷贝</li>
<li>table：不能直接传，需要手动构建成 C struct。该构建阶段有开销。</li>
</ul>
<h2>typing</h2>
<p>lua 的一大缺点是没有 type system。类似 js 的 typed 加强版 ts，lua 也有 typed 加强版，不过比较杂，从早期已经久不维护的 <a href="https://github.com/andremm/typedlua" target="_blank" rel="noopener noreferrer">typedlua</a> 和一些 fork 到新的 <a href="https://github.com/teal-language/tl" target="_blank" rel="noopener noreferrer">teal</a> 都有。这些 typed 版本都受 ts 启发，语法比较相似。</p>
<h2>external</h2>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/494191824" target="_blank" rel="noopener noreferrer">理解 Lua 的闭包机制</a></li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>音频处理</title>
      <link>https://absx.pages.dev/coding/audio.html</link>
      <guid>https://absx.pages.dev/coding/audio.html</guid>
      <source url="https://absx.pages.dev/rss.xml">音频处理</source>
      <description>音频处理 音频处理是编程界的几大天坑之一。 容器 类似 7z，音频文件大多数情况下只是容器，一般由元数据和各种编码的音频数据组成，而编码才是音频文件的本质。 有的容器只支持一种编码格式（容器名就是编码名），例如 MP3 和 FLAC。而有的容器支持多种，例如 OGG 支持 Vorbis、Opus、FLAC。 编码 最原始的 raw 音频也就是一串 f3...</description>
      <category>原理</category>
      <pubDate>Tue, 24 Jun 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>音频处理是编程界的几大天坑之一。</p>
<h2>容器</h2>
<p>类似 7z，音频文件大多数情况下只是容器，一般由元数据和<strong>各种编码的音频数据</strong>组成，而编码才是音频文件的本质。</p>
<p>有的容器只支持一种编码格式（容器名就是编码名），例如 MP3 和 FLAC。而有的容器支持多种，例如 OGG 支持 Vorbis、Opus、FLAC。</p>
<h2>编码</h2>
<p>最原始的 raw 音频也就是一串 f32 的序列（根据计算方式也有可能是 i32, i24 等），编码就是将这串序列进行有损/无损压缩后塞到容器里的过程。</p>
<p>最简单的编码就是 WAV 容器使用的 “PCM 编码”。实际上 PCM 本身是脉冲编码调制（Pulse Code Modulation），目的是将模拟信号转换为数字信号，这其中经过了采样、量化、编码的步骤。而 WAV 就直接将 PCM 后的数字信号塞到容器里，不做任何压缩，所以 WAV 一般都挺大的。因为容易处理，编码器好写，经常作为音频处理教学使用。</p>
<p>生活中最常见的 MP3 本身就是一种有损编码方式，MP3 容器只是对该编码的包装。它主要做了两件事，（1）舍弃 PCM 音频中人耳不敏感部分（FFT 到频域处理）（2）通过 Huffman 编码、动态比特率<strong>等</strong>各种手段减小音频数据大小。MP3 具有相当大的<a href="https://zh.wikipedia.org/zh-cn/MP3#MP3%E7%9A%84%E8%AE%BE%E8%AE%A1%E9%99%90%E5%88%B6" target="_blank" rel="noopener noreferrer">技术限制</a>，并且放在今天 MP3 编码算法也算不上多先进，因此还是尽量少用。</p>
<p>Vorbis 编码被称为 Open-source alternative to MP3，是 OGG 容器中占有最主要地位的编码，常用于游戏中。我在 <a href="/articles/speedup.html" target="_blank">galgame 音频处理</a>时跟 Vorbis 打了很多交道。Vorbis 基于 MDCT 和熵编码，能达到比 MP3 更高的压缩率。</p>
<p>MP3 和 Vorbis 都是有损编码，而在高品质音乐中最常用的无损编码是 FLAC。它在无损界基本是唯一选择，因为它有许多很棒的特性，例如快速解码、流式、可定位、可调压缩等级(<a href="https://zh.wikipedia.org/zh-cn/FLAC#%E6%8A%80%E8%A1%93" target="_blank" rel="noopener noreferrer">ref</a>)等。</p>
<h2>响度与均衡</h2>
<p><em>峰值电平</em> 并不严格等同于 <em>响度</em>：响度是人耳对声音强度的主观感知，会受到多种因素影响。</p>
<p>ITU-R BS.1770-4 (2015) 定义了 LUFS 作为响度单位。LUFS 综合考虑了电信号强度与人类感知，已经得到了广泛的使用。</p>
<h3>EBU R.128</h3>
<p>EBU R.128 是 EBU (European Broadcasting Union) 提出的关于响度标准化的<strong>建议</strong>和一套<strong>测量方法</strong>。其一般实现支持测量音频信息片段或音频流的 LUFS。</p>
<p>EBU R.128 基于三种不同长度区间内的响度进行截尾综合决策：Momentary loudness（400ms），Short-Term loudness（3s）和 Integrated loudness（长期）。更具体的可以阅读<a href="https://www.bilibili.com/opus/437135530799763720" target="_blank" rel="noopener noreferrer">这篇文章</a>。</p>
<p>EBU R.128 本身并不具备响度标准化的能力；一般的响度标准化会用 EBU R.128 测出 LUFS 后，为音频叠加一种增益模式使其达到 target LUFS。这一点将在后文展开。</p>
<h3>增益</h3>
<p>最简单的增益模式就是全局增益。然而经过我的一些原型验证，这样的处理具有较为显著的缺点：</p>
<ul>
<li><a href="https://github.com/lxl66566/Loudness-Normalization-tauri-app" target="_blank" rel="noopener noreferrer">Loudness-Normalization-tauri-app</a> 是<strong>流式场景</strong>下的响度标准化应用。在人声占据主导地位的场合下，人声的第一个字会爆音，因为基于之前的非人声音频流计算出的增益过高。</li>
<li><a href="https://github.com/lxl66566/audio-loudness-batch-normalize" target="_blank" rel="noopener noreferrer">audio-loudness-batch-normalize</a> 是<strong>音频片段</strong>下的响度标准化应用。在片段上应用时不会出现爆音问题，在一定程度上可以改善用户体验；但是由于简单的全局增益不会改变动态范围（即高音量与低音量之间的差值），这并不能使人声更加清晰可辨，没有达到我做响度均衡的期望。</li>
</ul>
<p>对于长音频片段来说，<strong>分段增益</strong>可能可以改善音频片段的响度标准化体验。分段增益的切分点较为关键，应该尽可能避免在高音量时切分导致响度割裂。继续改进，我们可以将分段的增益进行平滑处理，使其成为连续的增益曲线。</p>
<h3>实例</h3>
<p>Bilibili 在 2024 年实装了 <em>音量动态均衡</em> 功能，具体算法未公开，猜测是基于 EBU R.128 的检测，全局增益或分段增益均有可能。不过，文章 <a href="https://www.bilibili.com/opus/951243597171130370" target="_blank" rel="noopener noreferrer">ASMR 类的 UP 主和听众, 可以帮我一起向客服反馈下音量均衡爆音的问题吗?</a> 表明，正常音频的 target LUFS 并不适合 ASMR 的 target LUFS。</p>
<p>Youtube 会对高于 -14 LUFS 的音频进行负增益调至 -14 LUFS，对小于 -14 LUFS 的音频不作处理（来源请求）。不过也有<a href="https://gearspace.com/board/mastering-forum/1374443-chasing-after-12-lufs-youtube.html" target="_blank" rel="noopener noreferrer">一些帖子</a>认为 Youtube 的增益算法有一些问题，其调整并不严格。</p>
<p><a href="https://apu.software/optimizer/" target="_blank" rel="noopener noreferrer">APU Dynamics Optimizer</a> 是一款专业的高级调音软件，它可以让用户预设一条“动态范围曲线”，曲线规定了音频中不同 LUFS 的时长“占比”，超出该比例的音频片段则会被 <a href="https://apu.software/compressor/" target="_blank" rel="noopener noreferrer">APU Loudness Compressor</a> 进行压缩/扩展。这种方式可以看成一种特殊的、更加自由的分段增益，具体效果取决于 APU Loudness Compressor 的检测与压缩方式：貌似其结合了 EBU R.128 与 RMS 进行连续的 LUFS 检测，而 Limiter 的压缩较为复杂，原理暂时未知。（描述可能存在错误，欢迎指出） 根据 APU Dynamics Optimizer 首页给出的视频演示，这个软件在高动态范围的纯音乐上效果非常好。可惜软件本身是付费的。</p>
]]></content:encoded>
    </item>
    <item>
      <title>装机</title>
      <link>https://absx.pages.dev/gossip/pc_hardware.html</link>
      <guid>https://absx.pages.dev/gossip/pc_hardware.html</guid>
      <source url="https://absx.pages.dev/rss.xml">装机</source>
      <description>装机 背景 DIY 一台属于自己的电脑，可以说是大多数男生的梦想。我从高中开始混图拉丁吧，作为纯理论学家，一直梦想着配一台自己的主机，也陆陆续续给老家的电脑换了 CPU、内存、显卡、硬盘等，但是一直都没有真正经历一次完整的装机。终于在大四下学期，由于一些契机，我开始了我的首装。 工具 装机涉及对硬件的安装测试等，如果你主要是通过闲鱼购买配件进行装机，有...</description>
      <category>经历</category>
      <category>教程</category>
      <pubDate>Sun, 16 Mar 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>背景</h2>
<p>DIY 一台属于自己的电脑，可以说是大多数男生的梦想。我从高中开始混图拉丁吧，作为纯理论学家，一直梦想着配一台自己的主机，也陆陆续续给老家的电脑换了 CPU、内存、显卡、硬盘等，但是一直都没有真正经历一次完整的装机。终于在大四下学期，由于一些契机，我开始了我的首装。</p>
<h2>工具</h2>
<p>装机涉及对硬件的安装测试等，如果你主要是通过闲鱼购买配件进行装机，有一些好用的工具是很有必要的。这里推荐一些，必要的我会标出 <code>必备</code>。（虽然有些工具我目前还没有，但是作为男人的梦想，总有一天我会集齐，成为一个合格的装机佬的！）（现在我可以理解有些装机瘾犯了的装机佬上门装机只收路费的精神状态了）</p>
<h3>硬件类</h3>
<p>这里默认机子外设都齐全。</p>
<ul>
<li>螺丝刀（必备），大把 &amp; 小把都要，一般十字即可。为避免滑丝，务必选择合适的刀头。其实拧螺丝有点学问在的，可以看看 <a href="https://www.bilibili.com/video/BV1zMqsYNERc/" target="_blank" rel="noopener noreferrer">这么多年螺丝都拧错了！ - 4AM 居士</a>补充知识。</li>
<li>装机 U 盘（必备）带系统 ISO（和 PE，可选），这个不多说了。我用 ventoy，它的兼容性很不错，并且可以在一个 U 盘里装多个系统。</li>
<li>橡皮（必备）：用来擦金手指的，非常建议备一块。</li>
<li>万用表：弱电工程师王道工具，可以测主板，测显卡等。</li>
<li>电源测试器：专门测电脑电源的。带屏的 25CNY 左右可以显示实时电压，不带屏的 15CNY 左右只能显示是否正常。</li>
<li>亮机卡：万一客户显卡出问题了，没有核显和板载……</li>
<li>硅脂：消耗品。</li>
<li>铝制散热鳍片：CPU/GPU 的核心升温是非常快的，基本上进个 bios 就能突破 80 度，再拖几秒就过热死机了。亮机测试时肯定不想装砖头散热器吧，而且不涂硅脂会刮花散热头，所以自己带个散热鳍片放上，并且注意测试时的时间比较明智。</li>
</ul>
<h3>软件类</h3>
<ul>
<li><a href="https://www.tbtool.cn/" target="_blank" rel="noopener noreferrer">图吧工具箱</a>（必备）：一堆有用小工具的集合。之后不会再赘述图吧工具箱里已有的工具了。</li>
<li>鲁大师绿色版（必备）：综合跑分的。吾爱破解里有。</li>
<li><a href="https://github.com/zbezj/HEU_KMS_Activator/releases" target="_blank" rel="noopener noreferrer">HEU_KMS_Activator</a>（必备）：客户要激活 windows，很正常的需求。</li>
<li><a href="/articles/proxy/proxy_software.html" target="_blank">代理工具</a>：至少不会被下载速度和可访问性拦住，遇到事也能问问 google。</li>
<li>驱动精灵绿色版：一键打驱动的。也可以换成其他的驱动工具，例如 360 驱动大师。</li>
</ul>
<h2>玩转闲鱼</h2>
<p>国内最大二手交易平台，水挺深，购物需谨慎。</p>
<ol start="0">
<li><strong>不要场外交易</strong>，诱导去场外的一律视为骗子，不要侥幸。</li>
<li>作为买家，一定要记得<strong>拍开箱视频</strong>；作为卖家，尽可能在发货前拍装箱视频，可以证明商品完好性和当前时间的。</li>
<li>看到满意的货，先点对方头像看是个人还是贩子，评价如何。不是说一定要避开贩子，只是心理要有个底。</li>
<li>交流时:
<ul>
<li>隐瞒瑕疵是商家的常用小计俩，如果有在意的地方一定要问清楚。</li>
<li>如果对方避而不答，要注意。</li>
<li>尽量把己方的诉求在聊天里写明白。</li>
</ul>
</li>
</ol>
<ul>
<li>也可以多玩玩小法庭，一个是确实优质下饭材料，另一个是可以看别人的判例，来规范自身的行为，增加警惕性和谈判技巧。</li>
</ul>
<h2>装机经历</h2>

]]></content:encoded>
      <enclosure url="https://absx.pages.dev/images/gossip/pc_hardware/corsair_power.png" type="image/png"/>
    </item>
    <item>
      <title>Android 音乐播放器横评</title>
      <link>https://absx.pages.dev/articles/android_player.html</link>
      <guid>https://absx.pages.dev/articles/android_player.html</guid>
      <source url="https://absx.pages.dev/rss.xml">Android 音乐播放器横评</source>
      <description>Android 音乐播放器横评 播放器这个赛道虽然已经卷得要死，但各种产品看起来总是大同小异，并且总有些我不满意的地方。 许多 material 风格，许多产品只注重外观，而不注重用户交互体验。 每个播放器都会扫描全局音频，然后在播放器首页把我的音乐和录音和其他奇奇怪怪的音频全部混在一起。 因此，听音乐需要划定一个范围，一般使用文件夹模式。然而有的播放...</description>
      <category>推荐</category>
      <pubDate>Fri, 07 Feb 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>播放器这个赛道虽然已经卷得要死，但各种产品看起来总是大同小异，并且总有些我不满意的地方。</p>
<ol>
<li>许多 material 风格，许多产品只注重外观，而不注重用户交互体验。</li>
<li>每个播放器都会扫描全局音频，然后在播放器首页把我的音乐和录音和其他奇奇怪怪的音频全部混在一起。</li>
<li>因此，听音乐需要划定一个范围，一般使用文件夹模式。然而有的播放器进入文件夹模式需要的点击数太多了，我打开软件后还需要多次点击才能听音乐。</li>
<li>Android 设备上进行快速导航的最佳实践就是侧边滑动首字母。这个在任何 OS 的联系人软件里都能看到的、让 Niagara Launcher 成功的核心设计，却很难在音乐播放器里见到。</li>
</ol>
<h2>一表流</h2>
<!-- prettier-ignore -->
<p>| 名称 | 开源? | 随机播放? | 播放点击数 | 内存占用 | 备注 |
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>理财，加密货币与区块链</title>
      <link>https://absx.pages.dev/articles/money.html</link>
      <guid>https://absx.pages.dev/articles/money.html</guid>
      <source url="https://absx.pages.dev/rss.xml">理财，加密货币与区块链</source>
      <description>理财，加密货币与区块链 或许跟我的教育有一些关系，我一直很重视金钱观念。这里将会放一些我的理财记录和加密货币心得。 历史 早期回忆 小时候的我还挺悲惨的，压岁钱被大人拿去“保管”，零花钱也要做家务赚。不过这也促进了我的金钱观的形成。 最早接触理财是小学的时候，那时候还在用存折。一段时间后去银行存取钱，上面会打印一项“利息”，虽然只有几分钱，但是至少让我...</description>
      <category>教程</category>
      <category>经历</category>
      <pubDate>Fri, 31 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>或许跟我的教育有一些关系，我一直很重视金钱观念。这里将会放一些我的理财记录和加密货币心得。</p>
<h2>历史</h2>
<details class="hint-container details"><summary>早期回忆</summary>
<p>小时候的我还挺悲惨的，压岁钱被大人拿去“保管”，零花钱也要做家务赚。不过这也促进了我的金钱观的形成。</p>
<p>最早接触理财是小学的时候，那时候还在用存折。一段时间后去银行存取钱，上面会打印一项“利息”，虽然只有几分钱，但是至少让我知道，钱是会增值的。基于此现象，我也去了解了通货膨胀等概念。</p>
<p>过了一阵子，小学开始搞“爱心账户”，鼓励家长存一笔钱到邮政银行，把利息当成捐款捐给有需要的人。家长给我存了 100，然后学校给捐款的小朋友在公众场合发了证书。现在想起来自己也太善良了，而且小学这样的举动是隐式强迫，因为没有捐款的家庭和孩子会无意识间被差别对待。</p>
<p>然后就知道了活期存款利率很低，定期存款利率高，所以把自己平常存的钱存入了定期。小学的理财方式也就只有这些了。</p>
<p>对了，想起来小学有一次校外活动，去郊区的中国银行参加了一个认识理财模拟投资的活动。就是那一次活动，让我认识到活期，定期，基金，股票，保险这五种理财名词及其特点。</p>
</details>
<h3>余额宝/零钱通</h3>
<p>初中的时候让我爸给我开了一个支付宝帐号，然后钱存在余额宝。当时的中国经济正是飞速发展的时代，余额宝给的利率也高。</p>
<p>从初中到现在大学毕业，我的余额宝里都有一笔不算多的钱，用作活期资金。支付宝开通了自动转入余额宝，我根本就不需要去管，非常自在。</p>
<p>不过在大学期间，余额宝的收益率变化很大。我有几次更换产品，换到了其他利率更高的基金，结果发现每一个基金都不能长期维持高利率，一段时间后利率都会下跌。并且更换产品会丢失几天的利息，算下来甚至亏得更多，我很讨厌。</p>
<p>并且这段时间余额宝的利率一直在降低。到了 2025 年，余额宝的利率已经降到了年化 1.2%，实在是太低了。因此我不再将余额宝作为一个理财方式。</p>
<p>微信零钱通是后来模仿余额宝的同性质的产品。利率也都差不多，这里不再多说。</p>
<h3>黄金</h3>
<p>高中毕业的暑假，我使用支付宝购买黄金理财。支付宝啥都能买，确实方便。当时的金价才 366/g。之后俄乌战争时又加仓了一次，现在已经涨到 679/g 了，我还是打算再多留一留。</p>
<h3>基金</h3>
<p>买入黄金的同时我也在尝试基金。凭着高中那点贫乏的认知和信息量，我买了一些“感觉有看头”的基金板块，然后没有任何悬念地亏了。于是我再也不碰基金。</p>
<h3>债券</h3>
<p>还是高中暑假，去开了个证券账户，专门用于认购新债和国债。因为收益和风险综合因素我并没有从事正常的债券交易。新债就是抽签认购，正式发行后卖掉，平均能拿到 20% 收益。不过抽签看概率，这玩意概率不算大，并且一次限量 1000 元，因此赚得不多。</p>
<p>国债逆回购是我的处理“新债未中签的剩余资金”的手段，0 风险的债券，收益比余额宝高一点，高出不到年化 1%。节假日前国债的收益会增多一些。</p>
<p>然而后来疫情期间及其后，新债就变得非常少。同时，与余额宝利率下降相同，2025 年国债的利率也降低了许多；并且这玩意不像余额宝那样放着不用管：国债必须每个周期去手动买，也不能当活钱花。因此我退出。</p>
<h2>加密货币交易</h2>
<p>2025 年年初，因为国内环境利率下降得过于厉害，以 v2ex 一个帖子作为契机，我入坑了加密货币。</p>
<p>从过往的投资经历来看，我个人还是非常保守的 。因此在加密货币投资初期我也使用了非常保守的策略。</p>
<h3>前置知识</h3>
<ul>
<li>由于<a href="https://www.gov.cn/zhengce/zhengceku/2021-10/08/content_5641404.htm" target="_blank" rel="noopener noreferrer">中国将加密货币交易定为非法</a>，加密货币的兑换有一些困难。加密货币的充值与提现一般使用 C2C 交易，也就是找到一个和你意愿相反的人（你买他卖或反之）进行两手交易。一般情况下这是够的，但是数额过大时可能需要肉身出国，去香港/日本这些加密货币合法的国家或地区进行提现。网上有很多攻略，这里不再赘述。
<ul>
<li>虽然 C2C 理论上可以绕过监管，但是支付宝和微信在遇到疑似这样的 C2C 交易时会警告。因此尽量减少交易频率，极端的话应该将加密货币交易隐藏在多单普通转账之中。</li>
</ul>
</li>
<li>USDT 是最广泛使用的稳定币，1:1 兑换美元，常常用来做加密货币交易的中间币种与合约本位。USDC 是另一家机构的稳定币，监管更好，安全性更高，但是推出时间靠后，市场流动性较低。</li>
<li>加密货币价值来源于共识。因此不要投山寨币，因为他们的共识不够稳定，风险太大。包括感兴趣的话可以了解一下 Luna “算法稳定币”的暴雷历史。</li>
<li>加密货币交易是零和博弈，本质与赌博相近。要做理智的投资者，<a href="https://zhuanlan.zhihu.com/p/614267699" target="_blank" rel="noopener noreferrer">不要做赌徒</a>。</li>
<li>股市和加密货币的相关性：正相关，如果加密货币投资者受到股市惊吓，也会选择抛售。例如 Deepseek 爆火当天，NVIDIA 暴跌带动加密货币小跌。（不过恢复得也很快）</li>
</ul>
<h3>交易所</h3>
<p>使用中心化交易所是必须的，只有中心化交易所才可以在法币（人民币）和加密货币中进行交换。在获得加密货币资产后，玩家就可以任意选择中心化（CEX）或去中心化（DEX）交易所了。</p>
<p>所有交易所在中国一般需要使用<a href="/articles/proxy/" target="_blank">科学上网</a>访问，这是没办法的。</p>
<ul>
<li>关于 DEX 的对比：<a href="https://www.coinglass.com/zh/dex" target="_blank" rel="noopener noreferrer">顶级加密货币去中心化衍生品交易所</a>，一般就选 Hyperliquid 和新兴的 Aster 两个。</li>
</ul>

<h4>奖励与活动</h4>
<p>交易所会经常发关于新币和活动的公告，可以关注一下：</p>
<ul>
<li><a href="https://www.okx.com/zh-hans/help/section/announcements-latest-announcements" target="_blank" rel="noopener noreferrer">OKX 公告</a>
<ul>
<li>我自己用 RSSHub 做了 <a href="https://docs.rsshub.app/zh/routes/finance#%E6%AC%A7%E6%98%93-okx" target="_blank" rel="noopener noreferrer">OKX 的公告订阅</a>，欢迎使用。</li>
</ul>
</li>
</ul>
<h3>出金</h3>
<p>指的是将加密货币换成法币。交易所 C2C 出金有风险，首先支付宝/微信容易被盯上，其次可能涉及洗钱。一般大额是最好不要走 C2C 出金的。</p>
<p>最好最安全的方法是开一些好用的银行卡，然后直接使用加密货币消费。例如 bybit 卡，SafePal 卡等。国内消费机会少点，国外消费还是不错的，例如购买 vps。</p>
<ul>
<li>SafePal 开卡可以参考<a href="https://zhuanlan.zhihu.com/p/14025369553" target="_blank" rel="noopener noreferrer">这篇教程</a>。熟人可以用我的邀请码 736387 赞助我一下。
<ul>
<li>SafePal 虽然兑换 USD 法币只有 1% 手续费，但是若想在国内支付，需要兑换 RMB，而这上面的 RMB 汇率很不好看，大致等于还要扣掉 2% 的换汇折损。。。</li>
</ul>
</li>
</ul>
<h3>开始交易</h3>
<p>交易前有一些基础知识，建议搜索学习。<a href="#external">external</a> 里有一些我的推荐文章。</p>
<ul>
<li>区块链与挖矿相关知识</li>
<li>现货，合约与期权 概念+原理</li>
<li>买入和卖出，杠杆、做多和做空</li>
<li>术语：仓位相关</li>
</ul>
<p>新手建议：</p>
<ul>
<li><strong>每一个合约仓位都需要设置<a href="#%E6%AD%A2%E7%9B%88%E6%AD%A2%E6%8D%9F">止盈止损</a>。</strong> 没有经历过历史性暴跌时刻的新手很容易忽视爆仓的危险和痛苦。</li>
<li>不要开全仓。连环爆仓的威力不容小觑。</li>
<li>先玩小额小杠杆，摸一摸交易所的操作。别搞太大，并且要有亏的心理预期（一下亏好多还是有点难受的），保持理性。</li>
<li>先玩 BTC, ETH, SOL 三大币，小币种之后再说。
<ul>
<li>主要小币种的涨势/跌势是没有道理、没有极限、没有稳定性的。</li>
<li>即使是三大币种也有相当高的稳定性差距，BTC 的稳定性和后面那两个不是同一个等级的，更不容易爆仓。</li>
</ul>
</li>
<li>关注币圈资讯，了解最新动向。
<ul>
<li><a href="https://t.me/ChannelPANews" target="_blank" rel="noopener noreferrer">ChannelPANews</a></li>
</ul>
</li>
</ul>
<h4>我的资金配置</h4>
<p>截至 2025 年，我的资金配置为：</p>
<ul>
<li>薅交易所的羊毛，OKX 有限额 1000USDC 的 10% APY 赚币，htx 也是限额 1000USDC，15% APY，这些我都买满了。</li>
<li>扣掉上面的固定赚币，剩余的一半资产在链上 USDC 借贷/质押，例如 Morpho。</li>
<li>留 500U 玩合约，并且需要保持手上有 200U 以上备用，以便随时抓机会。</li>
<li>剩下的钱买现货，马丁格尔或者指标定投屯币。配置大约是 SOL = BTC &gt;&gt; OKB。</li>
</ul>
<h4>现货 vs 合约</h4>
<p>现货与合约都可以使用杠杆，但是现货不能做空（除非交易所有借币功能，有利息的），</p>
<p>现货的优势：</p>
<ul>
<li>当你需要货币本身时可以玩现货。比如你可能需要 ETH 来进行质押，或者需要 SOL 来购买 meme 币。</li>
<li>现货没有资金费率。合约的资金费有时候很恐怖，一次结算吃掉 1.5% 的情况不在少数。</li>
</ul>
<p>合约的优势：</p>
<ul>
<li>合约交易的手续费通常是现货的一半以下。</li>
</ul>
<h4>做多 vs 做空</h4>
<p>做空和做多看起来平等，但是做空的性价比实际上是不如做多的。</p>
<ol>
<li>理论（不考虑杠杆）：做空最大盈利一倍，而做多最大盈利为正无穷。
<ul>
<li>做空就是向交易所借货币而立即卖成钱，然后在币价下降时买入等量货币还给交易所。极限一点，币价跌到 0，无需还币给交易所，但是盈利也就只有借来的那么多钱。</li>
</ul>
</li>
<li>大部分的资金都在现货交易，而交易所不允许普通用户现货做空。</li>
</ol>
<p>不过理论是理论，实际是实际，也不要被理论限制了做空的步伐。</p>
<h3>手动交易</h3>
<p>手动交易的策略一搜一大把，网上太多高人指点了，自行分辨正确与否。一般人用得比较多的有：</p>
<ul>
<li>各种均线的组合：比较简单的有 MACD、三重移动平均，复杂的有看 6、7 条均线的关系的。</li>
<li>机构数据
<ul>
<li><a href="https://www.coinglass.com/zh" target="_blank" rel="noopener noreferrer">coinglass</a></li>
</ul>
</li>
<li>新闻：美国公布的数据、政策会影响币价。</li>
</ul>
<p>但是我就比较随性，我主要看市场情绪。</p>
<h4>止盈止损</h4>
<p>手动交易里，为自己的每一笔订单设置止盈止损是很重要的 <s>（你也不想在呼呼大睡的时候爆仓吧）</s>。具体的止盈止损怎么划定，一般是看压力位 + 经验与手感 + 你想做长线还是短线。前期多投小额试水是有用的，可以积攒很多止盈止损的手感。</p>
<p>我习惯 OKX 里直接在下单 K 线图上拖出止盈止损线，这样比较直观，也是我说“手感”的由来。</p>
<h3>策略交易</h3>
<p>如果你的风险承受能力很低，或者平常没有时间一直盯盘，一定要试试策略交易。一般交易所会提供一些开箱即用的免费策略。</p>
<h4>网格</h4>
<p>交易所策略里，我最喜欢的就是合约网格了。合约网格简直是永远的神，用最简单的算法捞到最强的收益/风险比。网格的原理很简单，向上突破则做空，向下跌破则做多，所以只要货币价格在一定范围内振荡，网格策略就一定会赚。</p>
<ul>
<li>根据网格的原理，我们需要投价格变动较大的币种。（但是要小心爆仓）</li>
<li>OKX 的网格可以选择 <em>做空网格</em>，<em>做多网格</em> 和 <em>中性网格</em>。区别是入场时是否持有空仓/多仓。一般来说，短期网格选中性即可；长期网格需要自行判断做多和做空，它们带有明确的倾向性，风险与下场做空/做多差别不大，需要注意。</li>
<li>网格区间的设置：
<ul>
<li>短期网格一般设为日 k 线穿过挂单线 20 次以上，一日套利 10 次以上的值。OKX 可以打开挂单线进行估算，其实它给的 AI 参数就挺好的。</li>
</ul>
</li>
<li>关于减小风险：
<ul>
<li>玩策略不用太纠结于两三天的得失，至少也得等 10 天后再看收益。当然，如果策略的杠杆开比较高（10x-20x），可以经常看看 <em>预估强平价</em>，跟币价波动做个对比，如果感觉怕了就补点保证金。</li>
<li>如果做小币种网格，还可以把等差网格换成等比网格，进一步降低风险。</li>
<li>
<blockquote>
<p>20250203 ETH 暴跌 30%，把我爆了。所以之后我更加注意杠杆倍率和网格区间，更愿意做小倍率宽区间网格，并且配合马丁格尔预设兜底回血。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p>我现在已经把普通做多/做空单换成对应趋势的网格挂单。这样做的优点有：</p>
<ul>
<li>能够吃到波动收益。</li>
<li>手动交易经常出现 <em>抄底后币价还在狂跌，暂时止损想要再次抄底时，又发现币价又已经回升</em> 的现象。换成做多网格策略可以避免这样不理智的行为，因为接下来跌得越多就意味着套利次数越多，赚得也越多。</li>
<li>仓位增加和释放是缓慢的，减少了一次性挂单的风险。</li>
<li>OKX 的网格策略会自己进行仓位管理，接近强平价时还会停止挂单，并发出警告，能够略微减小爆仓风险。</li>
<li>虽然赚得更少，但不会少于直接挂单的 1/2；并且如上所述，风险降低了多于 1/2，综合收益/风险比是更高的。</li>
</ul>
<p>缺点有：</p>
<ul>
<li>网格的最大缺点是收益有上限，只要币价突破了网格边界，之后就没有任何收益。</li>
<li>稀释你的持仓。由于网格需要预留资金进行买入，因此网格创建时开的仓位小于你的投入资金。</li>
<li>填写参数需要时间，可能会错过最佳抄底/抄顶时机。（完美 timing 只有几秒钟，但是 OKX 切换币种后，填写好的参数会消失）</li>
<li>如果网格密度计算错误，可能造成大量手续费支出。</li>
<li>交易所提供的网格工具配置项不够多并且不够智能。例如不能同时设置止盈止损，只能设置一个网格停止条件。</li>
</ul>
<h4>马丁格尔</h4>
<p>马丁格尔策略是一种资金管理策略，其会在输时不断加仓，而在赢时一次性卖出。由于交易市场波动，赢的概率总是存在的，因此马丁格尔被人称为“必胜”（除非爆仓或缺少加仓资金）。</p>
<p>根据原理，马丁格尔策略更适合用于赌球、赌马等胜率较为平等的场合（在这些离散场合也称为倍投）。币圈的马丁格尔泛用性比前者会弱一些，因为币价可能永远也无法回到盈利段，被套牢。因此币圈使用马丁格尔策略需要对当前大走势有着正确的判断，一旦判断正确，盈利能力将会非常强。</p>
<p>马丁格尔属于高风险高回报，在杠杆下的爆仓概率相对来说很高，因此我比较推荐玩现货马丁格尔，用来定投或者屯币很不错。</p>
<h4>自定义策略</h4>
<p>许多人脑子里可能都有一些未经测试的交易策略，写出并实现这些策略算是幻想家的浪漫。这时候可以考虑自定义策略。</p>
<p>OKX 里不能自定义策略，我们需要借助第三方平台：<em>OKX - 更多 - 使用 TradingView 交易</em>。<a href="https://cn.tradingview.com/" target="_blank" rel="noopener noreferrer">TradingView</a> 是另一个公司的平台，提供了 pinescript 脚本的编写、运行和一键回测，我们可以编写并测试自己的策略的利率。</p>
<p>我们也可以通过 webhook 将 TradingView 接入交易所以自动触发交易。不过，webhook 自动交易是要购买订阅的，$12.95/month。所以如果没有好策略 + 足够的本金，还是见仁见智吧。</p>
<h3>炒新币</h3>
<blockquote>
<p>Trump 币发行时，我是第一次接触新币，亏了一点钱。之后又摸了几次新币，有了点经验。</p>
</blockquote>
<p>炒新币有着较高的风险；关于新币资质，能上大型 CEX 交易所的新币一般都不会太差（并非绝对），不像 pump.fun 的土狗 meme 币，那个<a href="https://www.panewslab.com/zh/sqarticledetails/8sih61h5.html" target="_blank" rel="noopener noreferrer">纯纯庞氏骗局</a>，千万别碰。</p>
<ol>
<li>集合竞价阶段就可以出价买入新币，但是我不建议此时买入。有一些人在其他交易所拥有此币种现货，他们可以在开放前将币转到 CEX 交易所，趁机在交易所上新买入需求多时高价出掉自己的货币，所以新币刚开盘的几秒钟价格一般是会跌很多的。</li>
<li>接着可能是一段上涨期，此时 CEX 交易所尚未开启合约交易，现货只能买不能卖，会导致币价短时间内上涨，然后开始波动。币的吸金程度不同，上涨的峰值来得也有快慢，例如 Trump 用了几个小时，其他小币种用的时间更短。（但是后面的长跌基本都是一致的）
<ul>
<li>OKX 新币现货不能同时挂全仓止盈和全仓止损单，没法自动设置高赔率单，还是挺难受的，我不倾向于参加此次交易。</li>
</ul>
</li>
<li>新币合约上线后，就开始了长跌流程。所以此时做空是较好的选择。
<ul>
<li>新币合约刚上线时，下的单很可能被吞掉，甚至包括止损单，至少我在 OKX 里有被吞过，所以合约初期需要非常谨慎。</li>
</ul>
</li>
</ol>
<p>至于合约期过了顶点后要不要参加投机交易，我玩了一段时间后只能说，量化大舞台，有胆你就来。</p>
<ol>
<li>这时候交易都是以秒为单位的，基本上都是 bot 1s 内完成判断 + 交易，我拉下单线和止盈止损线的速度完全不够。
<ul>
<li>不过现在的目的是打过 bot，而 bot 遵循算法，一定程度上是有迹可循的。</li>
</ul>
</li>
<li>主导币价走向的一般是大单，当你看到大单的瞬间基本上就失去了机会，只有连着的几个大单中间手快插进去交易可能还能赚点。</li>
<li>手操即使遵守高赔率的策略，也很容易亏，需要时刻注意自己的收支。</li>
<li>还有，别忘了使用低延迟的代理。</li>
</ol>
<p>即使不做短期高频交易而是直接做大空，赚得也不算太多，因为币价波动太大，为了防止爆仓，杠杆不能开太高。那这时候要怎么办呢？还记得前面说网格策略适合交易波动性大的币种吗？刚好新币的波动性大，这时候狠狠上做空网格就行了。我一般会把 2x, 3x, 5x, 10x 的网格都套上，也算是分摊一些风险。</p>
<p>当然也并不是每个新币都必定会长跌，一些有潜力的 layer1 链可能会不跌反涨，把你的网格和马丁顶爆仓，比如 IP 和 KAITO。</p>
<h3>借贷</h3>
<p>由于加密市场的匿名性，加密货币借贷必须使用抵押品，并且必须在任何时刻都保证抵押品价值大于借入资金，这一点和传统的信用借贷有一些区别。</p>
<p>加密借贷有一定吸引力，这是把手上囤积的现货活用的一种方法。</p>
<p>但是千万不要碰循环贷，否则遇上死亡螺旋都不知道怎么死的。</p>
<h2>挖矿</h2>
<p>不一定亲自挖，但至少得对挖矿有一定了解。这里主要是关于 PoW 的，其他形式的我不太喜欢。像 SOL 那种靠质押赚钱的风险还是有点高。即使 OKSOL/Jito 年利率能到 8%，但是 SOL 本身的币价也在波动，搞不好可能还会亏<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>。</p>
<p>挖矿前的调研：</p>
<ol>
<li>能赚吗，能赚多少？<a href="https://minerstat.com/coins?lang=zh" target="_blank" rel="noopener noreferrer">挖矿收益计算器</a></li>
<li>用什么矿池？<a href="https://miningpoolstats.stream/" target="_blank" rel="noopener noreferrer">MiningPoolStats</a></li>
</ol>
<p>我的一些尝试：</p>
<ol>
<li>挖矿的人越多，挖矿难度越大，收益越低。因此老牌币种挖矿收益可能不如新兴币种。</li>
<li>GPU 挖矿不可取。BTC/ETC 等曾今的 GPU 热门币种现在已经是 ASIC 的天下了，用 GPU 完全没有优势，连电费都赚不回来。</li>
<li>CPU 挖矿门槛低，可以尝试。
<ul>
<li>我现在用 7950x 挖 XMR。</li>
<li>有尝试过一下 Qubic，是一个训练 AI 的项目，不过当前发展还是太早期了，前端页面都做不好，收益计算也很迷，没啥意义，玩了一晚上不玩了。</li>
</ul>
</li>
<li>带宽/流量挖矿：
<ul>
<li>在尝试挖 <a href="https://app.getgrass.io/register/?referralCode=O_g4T-ohcn5w9fj" target="_blank" rel="noopener noreferrer">grass</a>，通俗来说就是做 AI 公司的爬虫代理池。不过 grass desktop 做得挺烂，经常断连，并且并没有一个官方的 CLI 导致我无法在 VPS 上用。尝试了许多第三方 CLI 全部用不了。</li>
</ul>
</li>
</ol>
<h3>XMR</h3>
<p>现在挖 XMR 还是能跑赢电费的，在一众币种里已经是比较好的了。而且 XMR 是 CPU 工作的，即使退坑了也可以继续用硬件，不像 ASIC 矿机就只能便宜卖。由于挖 XMR 会让 CPU FAN 满速运转，比较吵，我都是在舍友不在的时候挖，赚的是少了点。后来开始工作以后就买了 local server 在家里挖。由于租房电费有分峰谷，因此晚上最好活用谷电。</p>
<p>我本身也喜欢折腾硬件，所以用多个设备跑过 XMR hash，现在（202508）做个总结：</p>
<ul>
<li>暂时不考虑服务器 U，因为服务器 U 市场流动性差，各个部件溢价较高，而且容易遇到坑。</li>
<li>挖矿最重要的是能效平衡而不是超频。因此对 CPU 的体质要求没有非常高，并且需要去 curve optimizer 降压，然后 PBO 调整一下功耗。</li>
<li>7950x 算是比较平衡的设备。会手动调频的话还可以用 7950x ES，是相当便宜的。</li>
<li>性价比最高的设备是用移动端 CPU 组 modt，比如我的一块天邦 7945hx 二手只要 1900，但是可以在整机 150W，CPU 100W 功耗下跑出 18000 的 hash rate！移动端设备优秀的能耗比绝对是挖矿的理想设备。</li>
<li>9950x 别买，价格几乎是 7950x ES 的两倍，但是 hash rate 提升太小了基本可以忽略。9950x 强在单核性能而不是多核，对挖矿没啥帮助。</li>
<li>5950x 的话性价比太低了。而且 DDR4 的内存带宽太低了，跑 XMR 完全没有优势，能上 DDR5 还是上 DDR5 比较好。
<ul>
<li>而且 2025 年后期 DDR4 内存还暴涨，性价比还不如 DDR5 呢。</li>
</ul>
</li>
<li>可以把挖矿当成爱好随便玩玩，但不要想着能赚大钱。现在 XMR 回本周期都是两年起步，民电还是不够便宜；而且一台设备已经挺极限了，如果你想多加设备，又会让阶梯电价上升一级，反而不划算。</li>
</ul>
<p>其他的 XMR 必知：</p>
<ul>
<li>XMR 的变现可以使用 htx 交易所，其他的例如 binance, okx 都不支持 XMR 交易。</li>
<li>XMR 有官方的钱包应用 <a href="https://www.getmonero.org/downloads/" target="_blank" rel="noopener noreferrer">Monero GUI Wallet</a>。注意 htx 当前的 XMR 充币最小金额是 0.01 XMR。
<ul>
<li><strong>血的教训</strong>：不要直接用 CEX 充币地址用来挖矿！！！某次 <a href="https://www.htx.com.de/zh-cn/support/84999701653073" target="_blank" rel="noopener noreferrer">htx 悄悄改了地址</a>（我不知道），结果提现未到账。在此 fuck htx。</li>
</ul>
</li>
<li>矿池我选择使用 <a href="https://c3pool.com/" target="_blank" rel="noopener noreferrer">c3pool</a>，对中国用户的支持还不错，可以直连挖矿。地址：<code>auto.c3pool.org:19999</code>
<ul>
<li>拒绝 qubic 矿池。qubic 在 202507 对 Monero 发起过 51% 攻击，我对其没有任何好感。</li>
</ul>
</li>
<li>挖矿软件用 <a href="https://github.com/xmrig/xmrig" target="_blank" rel="noopener noreferrer">xmrig</a>。软件本身的预编译包会有 1% 的抽成，我选择自己改源码编译以避免抽成。改源码<a href="https://github.com/xmrig/xmrig/blob/f9e990d0f0167c92d09334213ac6950033bbbba1/src/donate.h#L40-L41" target="_blank" rel="noopener noreferrer">很简单</a>，编译也有<a href="https://xmrig.com/docs/miner/build/windows" target="_blank" rel="noopener noreferrer">教程</a>，不难。
<ul>
<li>如果 xmrig 启动有报什么 warnings，记得去解决，说不定可以提高挖矿效率。</li>
<li>内存频率会小幅度影响挖矿效率，我开启了内存 XMP 后 hashrate 提升了 6%。</li>
<li>如果真的不断全核工作，CPU 占用 100%，对日常使用影响挺大的，所以建议留几个线程自己用。</li>
<li>Windows 因为不能开启 1GB pages，挖矿效率比 Linux 稍差，大概差 3% 左右。主要问题是 Windows 挖矿受影响太大了，比如开过 Android 模拟器、跑过本地 AI，都会对之后的挖矿产生影响。如果你的设备只用来挖矿，一定要上 Linux。</li>
<li>如果你使用 NixOS，官方的 xmrig 就是 patch 过的就支持 0 donate，无需修改。</li>
</ul>
</li>
</ul>
<h2>链上保本理财</h2>
<p>在炒币亏了一些钱后，重新审视自身，发现我已经忘了我的初心：我本意就是理财，追求的应该是更高的稳定年化收益。因此我应该将重心放在保本理财上而不是去想炒币策略啥的。</p>
<p>推荐看看 <a href="#external">external 5.</a>，还是有点用的。</p>
<ul>
<li>Morpho：链上顶流借贷平台，风险低，可以随时赎回跳车。赚取的 morpho 代币可以在各大交易所交易为 USDT，有深度和流动性。年化利率 8% 左右。</li>
<li>katana：新的基建链，当前增长期的年化据说能接近 50%，非常恐怖；但是目前的 reward 还是 KATTOKEN 不能方便地 swap，还需要等发展。</li>
<li>Aave：你是什么勾八。看了眼表，年利率就这啊。</li>
</ul>
<h2>区块链与合约</h2>
<p>接下来的内容就不是关于如何赚钱的了，而是关于加密货币底层原理与技术的讨论。不过我也是新手，难免遇到错漏，还望指正。</p>
<h3>学习资料</h3>
<ul>
<li><a href="https://yeasy.gitbook.io/blockchain_guide" target="_blank" rel="noopener noreferrer">yeasy/区块链技术指南</a></li>
<li><a href="https://www.helius.dev/blog/the-solana-programming-model-an-introduction-to-developing-on-solana" target="_blank" rel="noopener noreferrer">The Solana Programming Model: An Introduction to Developing on Solana</a></li>
</ul>
<h2>external</h2>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/512615005" target="_blank" rel="noopener noreferrer">孙哥的「算稳梦」：波联储与 USDD</a></li>
<li><a href="https://www.panewslab.com/zh/articledetails/r1mr2jc4.html" target="_blank" rel="noopener noreferrer">只用“稳定币”，能参与哪些项目的空投？</a></li>
<li><a href="https://www.panewslab.com/zh/articles/tubnlzao" target="_blank" rel="noopener noreferrer">CEX 与 DEX 的合约算法之战</a></li>
<li><a href="https://www.panewslab.com/zh/articles/jd80of15" target="_blank" rel="noopener noreferrer">你以为的盈亏，可能都是永续合约算法制造的幻觉</a></li>
<li><a href="https://www.panewslab.com/zh/articles/ee13100b-a06f-4e1b-99b9-a456da475d0d" target="_blank" rel="noopener noreferrer">月入 50 万美元，平均年化 78%，我的稳定币收益策略全解析 ​​</a></li>
<li><a href="https://pawelurbanek.com/rust-mev-bot" target="_blank" rel="noopener noreferrer">How I've built an unprofitable Crypto MEV Bot in Rust</a></li>
<li>关于做市商的科普：<a href="https://www.theblockbeats.info/news/59850" target="_blank" rel="noopener noreferrer">为什么散户总被「收割」？一文看懂做市商是怎么操作的</a></li>
</ol>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p>比如我在 202502 做了 SOL 质押，结果 202502-03 币价暴跌大家都知道，SOL 价格直接对半砍了。不管年化多高，在巨额浮亏面前都不好受。 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>远控方案</title>
      <link>https://absx.pages.dev/articles/control.html</link>
      <guid>https://absx.pages.dev/articles/control.html</guid>
      <source url="https://absx.pages.dev/rss.xml">远控方案</source>
      <description>远控方案 上学/出差在外，总有远程控制电脑的需求。我折腾过一些，将经验写于此处。 我的刚需：Android 控制电脑；P2P 低延迟。 一体化方案 这里主要是企业级一体化的解决方案，一个方案包揽了全平台的服务端与客户端，并且不需要涉及公网等，一般具有容易上手的 GUI。 向日葵远程控制 老牌远程控制软件了，以前我用了很久。其拥有优秀的客户端界面交互和无...</description>
      <category>推荐</category>
      <category>评价</category>
      <pubDate>Sat, 18 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>上学/出差在外，总有远程控制电脑的需求。我折腾过一些，将经验写于此处。</p>
<p>我的刚需：Android 控制电脑；P2P 低延迟。</p>
<h2>一体化方案</h2>
<p>这里主要是企业级一体化的解决方案，一个方案包揽了全平台的服务端与客户端，并且不需要涉及公网等，一般具有容易上手的 GUI。</p>
<h3>向日葵远程控制</h3>
<p>老牌远程控制软件了，以前我用了很久。其拥有优秀的客户端界面交互和无人值守。可惜的是免费版流量会经过官方服务器，无法做到 P2P，延迟还是比较高的。</p>
<h3><a class="header-anchor" href="#parsec"><span></span></a><a href="https://parsec.app/downloads" target="_blank" rel="noopener noreferrer">Parsec</a></h3>
<p>也是之前我很喜欢的远控软件，用来 Android 控制 Windows 非常好用。它主打 P2P 的低延迟。与向日葵相比：</p>
<ul>
<li>优点：
<ul>
<li>低延迟</li>
<li>性能占用极低</li>
</ul>
</li>
<li>缺点：
<ul>
<li>全英文</li>
<li>需要自己解决驱动兼容性问题（如果有的话）</li>
<li>手机端控制电脑不够友好（无法右击；无法像向日葵一样调出鼠标），建议自带轻便键鼠</li>
<li>早期版本可能会有音频撕裂问题</li>
</ul>
</li>
</ul>
<p>不过后来 Parsec 进行了商业化，现在我在 Windows 上甚至一直无法登录（重装系统后也不行，所以是服务端问题），显示连接到 <code>/v2/auth</code> 啥啥啥的超时，所以只能尝试其他的远控方案。</p>
<h3>RustDesk</h3>
<p>一个开源的服务端/客户端软件，需要自己用服务器搭建。本质上还是需要让流量走中转服务器，延迟与丢包取决于中转的质量。</p>
<p>我从不买国内服务器，于是否决了。而且即使这玩意是 Rust 写的，它也有爆出过安全漏洞。</p>
<h3>ToDesk</h3>
<p>跟向日葵差不多，都是中心化连接。UI 会好看一点，但是我感觉没有向日葵好用。</p>
<h3>TeamViewer</h3>
<p>很早之前试过一次，感觉难用，不用了。这玩意国外用得应该更广泛一些。</p>
<h3><a class="header-anchor" href="#连连控"><span></span></a><a href="https://www.asklink.com/download" target="_blank" rel="noopener noreferrer">连连控</a></h3>
<p>一个相对的国产方案，免费版也支持 4k 传输。控制是通过国内线路中转的，不是 P2P，不过国内的延迟应该也不算高。</p>
<h2>分离式方案</h2>
<p>由于企业级一体化方案基本没有 P2P（有也不能用），因此我将重心放到了分离式方案上。分离式指用户需要自己部署客户端、服务端、内网穿透等模块，具有复杂与高度自定义化的特点。</p>
<h3>内网穿透</h3>
<p>分离式方案要想实现 P2P，关键就在内网穿透这一步。如果我们使用支持 P2P 的虚拟组网内网穿透，就可以享受低延迟的快感。</p>
<p>具体使用哪个，请前往<a href="/articles/frp.html" target="_blank">内网穿透</a>页面。</p>
<h4>皎月连</h4>
<p>是一个国内的免费（需要每日签到）内网穿透服务，支持 P2P 和虚拟组网。一般国内教程里都跟 sunshine + moonlight 配套出现。试了一下还行。</p>
<ul>
<li>在受控端上安装皎月连，建立帐号并登录；然后在服务端里开启组网模式，开启服务并设为自动开启。最后再让系统开机自启皎月连即可。</li>
<li>在控制端安装皎月连，使用已有帐号登录，然后选中网络，连接即可。</li>
</ul>
<h3>VNC</h3>
<p>VNC 也是 Linux 乃至许多系统上的成熟远控方案。严格来说这是一套协议，服务端和客户端都可以任选。</p>
<p>VNC 的缺点是传输的是屏幕图像的变化部分而不是视频流，因此不支持修改码率，可能会对带宽造成压力。</p>
<ul>
<li><a href="https://sourceforge.net/projects/tigervnc/files/stable/" target="_blank" rel="noopener noreferrer">TigerVNC</a>：用作 Windows 服务端还算合格，默认配置即可。</li>
<li><a href="https://github.com/gujjwal00/avnc" target="_blank" rel="noopener noreferrer">avnc</a>：Android VNC 客户端。界面中看不中用，首先默认手势卡手，需要改设置；其次是有发现鼠标偏移的情况。</li>
<li><a href="https://github.com/FreeRDP/" target="_blank" rel="noopener noreferrer">Remmina</a>：Linux GTK VNC 客户端。</li>
</ul>
<h3>sunshine + moonlight</h3>
<p>这是一个广泛使用的游戏串流方案，也可以用到远控上。其中 sunshine 是被控端，moonlight 是主控端。二者之间还需要一个虚拟组网的内网穿透进行连接。（需要虚拟组网的原因是，sunshine 用了很多端口，写映射的话比较麻烦）</p>
<ul>
<li>sunshine 安装可以用 <a href="/farraginous/recommend_packages.html#scoop" target="_blank">scoop</a> (extras bucket)：<code>scoop install sunshine</code>。
<ul>
<li>安装完后，记得在安装目录下 scripts 里<strong>以管理员权限</strong>执行 <em>install-service.bat</em>, <em>autostart-service.bat</em> 等脚本，以便开机自启。</li>
<li>打开网页面板，设置里可以改中文语言，然后要在 Network 里把 UPnP 打开。</li>
</ul>
</li>
<li>moonlight 官方 APP 并不好用，例如无法发送特殊按键。所以这里建议使用<a href="https://github.com/qiin2333/moonlight-android" target="_blank" rel="noopener noreferrer">第三方 fork</a>，对键盘有增强。
<ul>
<li>打开 APP，点击右上角加号，将组网里的受控端 IP 填写进去即可。</li>
<li>实际上也可以将特殊按键的职责交给输入法，使用例如 <a href="https://github.com/Julow/Unexpected-Keyboard" target="_blank" rel="noopener noreferrer">Unexpected Keyboard</a> 可以比较轻松地发送特殊键。</li>
<li>官方 APP 是拖动指针鼠标，第三方是触摸鼠标，但是我两种鼠标都要用，而它们并没有一个切换鼠标样式的选项。因此我是不满意的。</li>
</ul>
</li>
</ul>
<details class="hint-container details"><summary>其他不采纳方案</summary>
<h3>SSH</h3>
<p>最著名的命令行远程连接方案，可以在任何客户端连上任何服务器。坏处是只有命令行黑窗口，显然不方便操作。Windows 很多 GUI 的东西不能用 CLI 代替，例如最常见的远控浏览器，即使 Linuxer 能驾驭命令行，遇到这种需求也没辙。</p>
<h3>NoMachine</h3>
<p>国外的局域网远控软件，需要内网穿透。全英文，具有非常古老的 UI，并且连接质量也不咋样。然后 windows 受控端卸载程序还卡死了。纯纯的垃圾。</p>
</details>
]]></content:encoded>
    </item>
    <item>
      <title>2025</title>
      <link>https://absx.pages.dev/essay/2025.html</link>
      <guid>https://absx.pages.dev/essay/2025.html</guid>
      <source url="https://absx.pages.dev/rss.xml">2025</source>
      <description>2025 20250924 走得慢不那么可怕，可怕的是走得慢 + 蛇行不确定性走位 20250921 我一向很讨厌软件对文件扩展名做出的假设。比如我用 gcc xxx.go，它会给我报一个 gcc.exe: error: 1.go: Go compiler not installed on this system。你凭什么说我的源码就不是 C 源码？还...</description>
      <category>随笔</category>
      <pubDate>Tue, 07 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>20250924</h2>
<p>走得慢不那么可怕，可怕的是走得慢 + 蛇行不确定性走位</p>
<h2>20250921</h2>
<p>我一向很讨厌软件对文件扩展名做出的假设。比如我用 <code>gcc xxx.go</code>，它会给我报一个 <code>gcc.exe: error: 1.go: Go compiler not installed on this system</code>。你凭什么说我的源码就不是 C 源码？还不如 python 呢，至少 <code>python xxx.go</code> 真的可以执行。</p>
<h2>20250913</h2>
<p>为什么上海闪电的雷声都很小或者没有？</p>
<h2>20250911</h2>
<p>如果你想要合法发泄自己的控制欲，你可以去捐一所中学。</p>
<h2>20250902</h2>
<p>越是疯狂内推的公司，越要谨慎其潜在的压榨事件。</p>
]]></content:encoded>
    </item>
    <item>
      <title>React</title>
      <link>https://absx.pages.dev/coding/react.html</link>
      <guid>https://absx.pages.dev/coding/react.html</guid>
      <source url="https://absx.pages.dev/rss.xml">React</source>
      <description>React 初学，包含的东西较少。等到我真正用 React 开发一个项目的时候，这一页的东西才会变多起来。 JSX 基础 JSX 是 React 的核心，JSX 将一个 html 标签也视为一个 js object。 多行 JSX 需要用括号包围；每个 JSX 只能是单标签，如果多标签则需要用 &amp;lt;&amp;gt;&amp;lt;/&amp;gt; 空标签包围。 JSX 内插值（插表达式）使用单...</description>
      <category>编程</category>
      <pubDate>Sat, 04 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>初学，包含的东西较少。等到我真正用 React 开发一个项目的时候，这一页的东西才会变多起来。</p>
<h2>JSX 基础</h2>
<p>JSX 是 React 的核心，JSX 将一个 html 标签也视为一个 js object。</p>
<ul>
<li>多行 JSX 需要用括号包围；每个 JSX 只能是单标签，如果多标签则需要用 <code>&lt;&gt;&lt;/&gt;</code> 空标签包围。</li>
<li>JSX 内插值（插表达式）使用单大括号。</li>
<li>JSX 里的 class 要改为 className。</li>
<li>JSX 里可以写内联 style，接受一个类似 CSS 的对象。</li>
<li>JSX 里可以直接用 <code>&lt;div {...object} /&gt;</code> 进行 props 传入的解构，非常方便。</li>
</ul>
<p>JSX 能够非常灵活地组织组件，比 Vue 灵活太多了。</p>
<h2>组件</h2>
<p>一般来说只需要使用基于函数的 API。现在所有现代前端都在使用基于函数的 API，例如 Kotlin Compose UI，因为组合优于继承，灵活性非常强。</p>
<ul>
<li>React 每一个返回 JSX 对象的函数都是一个组件。</li>
<li>函数的第一个入参是 props。</li>
<li>如果要传递 JSX 给组件，默认传到 <code>props.children</code>。</li>
<li>组件间传值：
<ul>
<li>父向子，props，没问题。</li>
<li>子向父，回调函数。</li>
</ul>
</li>
</ul>
<h2><a class="header-anchor" href="#react-hooks"><span></span></a><a href="https://zh-hans.react.dev/reference/react/hooks" target="_blank" rel="noopener noreferrer">React Hooks</a></h2>
<p>Hooks 是响应式的基础。React 内置了许多 Hooks，但是平常最常用的也就 useState，useRef，useEffect。</p>
<h3>useState</h3>
<p>React 里最常用的响应式就是 useState 了。其返回两个值，<code>content</code> 是内容的引用 (getter)，<code>setContent</code> 是一个函数，用于改变内容 (setter)。这样可以比较明确地控制如何渲染 DOM 树。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">setContent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"default content"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>和 SolidJS 不同，setContent 只有在实际值发生改变（<code>Object.is</code> 比较）时才会重新渲染。这或许在性能方面有优势，但对框架来说算是增加了（需要关注的）隐藏复杂度。</p>
<h3>useContext</h3>
<p>用于跨任意层组件向子组件方向传数据。随便看一个 <a href="https://zh-hans.react.dev/reference/react/useContext#usage" target="_blank" rel="noopener noreferrer">usage</a> 就会了。</p>
<p>React 19 后，可以用简化写法 <code>&lt;Context&gt;</code> 替代 <code>&lt;Context.Provider&gt;</code>。</p>
<h3>useRef</h3>
<p>跟 Vue 的 ref 有很大区别，useRef 这里的 ref 是不会触发渲染的。</p>
<p>有一点跟 Vue 一样的就是 Vue 的 ref 需要 <code>.value</code> 获取内部值，而 useRef 需要 <code>.current</code> 获取。</p>
<h3>useCallback</h3>
<p>包装函数，让组件重新渲染时，该函数不会重新创建，也就是保持同一个对象。可以用于 <code>memo</code>。</p>
<h3>useReducer</h3>
<p>useReducer 和 useState 很像，只不过可以把状态更新逻辑从事件处理函数中移动到组件外部。<a href="https://zh-hans.react.dev/reference/react/useReducer#adding-a-reducer-to-a-component" target="_blank" rel="noopener noreferrer">src</a></p>
<h2>Router</h2>
<ul>
<li>React 最常用的 router 是 <a href="https://github.com/remix-run/react-router" target="_blank" rel="noopener noreferrer">React Router</a>。</li>
<li>如果你不使用高级功能，只是进行简单切换，也可以使用 <a href="https://github.com/molefrog/wouter" target="_blank" rel="noopener noreferrer">wouter</a>，更精简。</li>
</ul>
<h2>external</h2>
<ul>
<li><a href="https://juejin.cn/post/7195513281228898363" target="_blank" rel="noopener noreferrer">2023 再看 React 状态管理库</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>SolidJS</title>
      <link>https://absx.pages.dev/coding/solidjs.html</link>
      <guid>https://absx.pages.dev/coding/solidjs.html</guid>
      <source url="https://absx.pages.dev/rss.xml">SolidJS</source>
      <description>SolidJS SolidJS 是一个轻量级前端框架，其以 JSX 为核心，为 React 做了许多减法，少了很多难记的 Hooks，所以学起来非常快（不论有无 React 基础）。不过本文假设读者已经熟悉了 React 基础。 SolidJS 的哲学就是 small and simple。所以 React 高手用起来肯定没有那么方便舒服，很多地方需要...</description>
      <category>编程</category>
      <pubDate>Sat, 04 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>SolidJS 是一个轻量级前端框架，其以 JSX 为核心，为 React 做了许多减法，少了很多难记的 Hooks，所以学起来非常快（不论有无 React 基础）。不过本文假设读者已经熟悉了 React 基础。</p>
<p>SolidJS 的哲学就是 small and simple。所以 React 高手用起来肯定没有那么方便舒服，很多地方需要自己手操低级逻辑。但是对新手来说是一件好事，SolidJS 的隐含条件少，不容易被框架坑。要说它的唯一缺点可能就是生态了，SolidJS 的包数量和可用性都要比 React 差上许多 (<a href="https://t.me/withabsolutex/2343" target="_blank" rel="noopener noreferrer">ref</a>)。</p>
<h2>props</h2>
<p>在 React 中，有一个核心理念：<code>UI = f(state)</code>。这意味着整个组件的输出（UI）被看作是其当前 state 和 props 的一个函数。当 state 或 props 改变时，React 的做法不是去找到是哪个具体的值变了，而是重新执行整个组件函数，生成一个新的 Virtual DOM，然后通过比对新旧 VDOM，最后只把差异部分更新到真实的 DOM 上。</p>
<p>然而，<strong>SolidJS 的组件函数本身永远只运行一次</strong>。要让子组件随父组件的 signal 改变而重新渲染，需要传入 <code>Accessor&lt;T&gt;</code> 保持响应性。但是在任何一层子组件使用 <code>const { ... } = props</code> 解构，都会丢失 props 的响应性，导致子组件无法正确重新渲染。</p>
<p>要在保证响应性的同时结构 props，需要使用 SolidJS 提供的 <code>splitProps</code>。举个例子：</p>
<div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ButtonProps</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B"> JSX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ButtonHTMLAttributes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">HTMLButtonElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  children</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B"> JSX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  variant</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "primary"</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "secondary"</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "square"</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "operator"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Button</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Component</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ButtonProps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">props</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 'local' 对象会包含这些 props，并且它们仍然是响应式的</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // 'rest' 对象会包含所有剩余的 props</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">local</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">rest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> splitProps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">props</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"children"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"variant"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">  ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你在调试 SolidJS 项目时发现子组件没有正确渲染，请优先检查 props 解构。</p>
<h2>Hooks</h2>
<h3>createSignal</h3>
<p>就是 useState，最基本的响应式组成部分。</p>
<p>每一次调用 <code>setState</code> 都会触发重新渲染。如果需要像 React 那样在值变化时才渲染，需要配合 <code>createMemo</code>。</p>
<h3>createContext</h3>
<p>可以用来跨组件传输数据，不需要通过 props。</p>
<h3>createResource</h3>
<p>可以用来执行 async 函数。SolidJS 对 async 支持算不上好，这可能是唯一的 async 执行器。</p>
<p>createResource 可以跟 Suspence 组件<a href="https://docs.solidjs.com/reference/components/suspense" target="_blank" rel="noopener noreferrer">配合使用</a>。其实就是包装了一下 <code>res.loading</code> 的判断而已。</p>
<h3>onMount</h3>
<p>因为每个组件函数只会执行一次，你可以直接将相关逻辑放在组件里；当然 SolidJS 也提供了 onMount hook 用于分离逻辑。</p>
<h2>杂</h2>
<ul>
<li>SolidJS 的组件导出必须使用大写字母开头，否则 tsx 不会将其识别为组件。</li>
</ul>
<h2>components</h2>
<p>SolidJS 也提供了一些内置组件，让写 Vue 的人倍感熟悉。</p>
<ul>
<li><code>&lt;Show when={...} fallback={...}&gt;&lt;/Show&gt;</code>，v-if + v-else</li>
<li><code>&lt;For each={...}&gt;&lt;/For&gt;</code>，v-for</li>
</ul>
<h2>配套设施</h2>
<p>SolidJS 虽然相对小众，但仍有着完善的生态系统。</p>
<ul>
<li>组件库：<a href="https://github.com/stefan-karger/solid-ui" target="_blank" rel="noopener noreferrer">SolidUI</a></li>
<li>Router：<a href="https://github.com/solidjs/solid-router" target="_blank" rel="noopener noreferrer">solid-router</a></li>
<li>图标库：<a href="https://solid-icons.vercel.app/" target="_blank" rel="noopener noreferrer">Solid Icons</a></li>
<li>Markdown 渲染：<a href="https://github.com/andi23rosca/solid-markdown" target="_blank" rel="noopener noreferrer">solid-markdown</a></li>
</ul>
<p>但是很可惜，solid 用的人较少，导致很多库的 bug 都<a href="https://t.me/withabsolutex/2343" target="_blank" rel="noopener noreferrer">没人修</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>域名</title>
      <link>https://absx.pages.dev/articles/proxy/domain.html</link>
      <guid>https://absx.pages.dev/articles/proxy/domain.html</guid>
      <source url="https://absx.pages.dev/rss.xml">域名</source>
      <description>域名 很多时候你需要一个域名用来部署代理服务，因为基于 SSL 的代理（trojan 等）都需要域名来签发 https 证书。即使你不使用代理，也有可能需要部署自己的网站，用域名作为 IP 的助记。 一般域名的续费是很贵的，卖域名的就好这一口。所以如果是为了部署代理，完全没有必要续费域名，每年一换即可。 免费域名一般是二级域名，也就是到手至少是 xxx...</description>
      <category>教程</category>
      <category>经历</category>
      <pubDate>Fri, 03 Jan 2025 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>很多时候你需要一个域名用来部署代理服务，因为基于 SSL 的代理（trojan 等）都需要域名来签发 https 证书。即使你不使用代理，也有可能需要部署自己的网站，用域名作为 IP 的助记。</p>
<ul>
<li>一般域名的续费是很贵的，卖域名的就好这一口。所以如果是为了部署代理，完全没有必要续费域名，每年一换即可。</li>
<li>免费域名一般是二级域名，也就是到手至少是 xxx.xx.xx 形式。（世界上真的存在一级免费域名大善人吗）</li>
</ul>
<h2>域名服务器</h2>
<p>付费购买的域名一般都会提供域名服务器。而免费域名一般需要自己准备，这里就不得不提到赛博菩萨 cloudflare，它的域名服务器很稳定，添加也方便。</p>
<p>一般来说，使用 cloudflare 的域名服务器需要以下步骤：</p>
<ol>
<li>在 cloudflare 里添加域</li>
<li>点点点，所有步骤做完以后会给两个（或几个）dns 服务器地址，填写到域名提供商那里并 update。</li>
<li>等待几个小时</li>
</ol>
<p>然后用 nslookup 就能查到了。</p>
<h2>免费</h2>
<ul>
<li><a href="https://register.us.kg" target="_blank" rel="noopener noreferrer">us.kg</a>：可以托管到 cloudflare，注册还算不难。
<ul>
<li>2025.03，us.kg 两次被停止解析，稳定性挺差的，还是别用了吧。</li>
</ul>
</li>
</ul>
<h2>付费</h2>
<ul>
<li><a href="https://www.namecheap.com/" target="_blank" rel="noopener noreferrer">namecheap</a>：买了两次，还算便宜。
<ul>
<li>6 位数字 xyz 真牛逼啊，几块钱一年 续费同价，我可以用到死。</li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>找工作经历</title>
      <link>https://absx.pages.dev/gossip/job.html</link>
      <guid>https://absx.pages.dev/gossip/job.html</guid>
      <source url="https://absx.pages.dev/rss.xml">找工作经历</source>
      <description>找工作经历 首先本精神自由人的定位非常清楚：不考研，不考公。因此找工作是我的唯一选择。 感想 经历了一次春招一次秋招，有一点感想。 谨慎投招聘网站上经常刷到的小公司。这么多毕业生，小公司又没有多少招人需求，那为什么一直都在招人呢？因为真的难过它们的面试，恨不得招的都是 ACM 金。 而大厂面试也没有那么难，非常公式化。多看面经，多背八股，刷点基础算法即...</description>
      <category>评价</category>
      <category>经历</category>
      <pubDate>Mon, 25 Mar 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>首先本精神自由人的定位非常清楚：不考研，不考公。因此找工作是我的唯一选择。</p>
<h2>感想</h2>
<p>经历了一次春招一次秋招，有一点感想。</p>
<ul>
<li>谨慎投招聘网站上经常刷到的小公司。这么多毕业生，小公司又没有多少招人需求，那为什么一直都在招人呢？因为真的难过它们的面试，恨不得招的都是 ACM 金。
<ul>
<li>而大厂面试也没有那么难，非常公式化。多看面经，多背八股，刷点基础算法即可。</li>
</ul>
</li>
<li>学校招聘会都是垃圾。给的少，大多要实习，这就是纯纯压榨，如果你会点技术还是去网上投吧。</li>
</ul>
<h2>关于我</h2>
<h3>方向</h3>
<p>我喜欢的是新技术，做小玩意，想给大家带来更好的使用体验。因此我一开始选择的是 <em>客户端开发</em>。但是实际上客户端指的大多数是移动端，基本没有专门的桌面软件开发。我之前写 Android 被折磨得非常痛苦，ios 也不会，因此放弃了这个方向。</p>
<p>后端方向基本全是 Java/C++，偶尔会有一些 python 后端（Django, Flask）。我除了 Django 就没接触过其他框架，而且我并不喜欢后端。</p>
<p>不论爱好，考虑我的技术栈，我感觉 <em>测试开发</em> 和 <em>Linux 运维</em> 挺适合我的，毕竟前者 python 用得烂熟，也鼓捣过几个爬虫和自动化项目，后者就纯粹是喜欢尝试创造新工具，写过脚本与包管理器。确实，测开的要求低很多，运维稍微麻烦一点。但是我面试了几次测开/运维，都没有给我留下对这个行业的好印象。</p>
<p>至于前端，我也写过不少前端的东西，会框架会 TS，但是基础不牢。而且 AI 横行，前端的前景并不好。</p>
<p>因此我并没有一个确定的就业方向，只好投递一些万金油岗位，没有太细的要求，只要基础好，先招进去再学的那种。</p>
<h3>语言</h3>
<ul>
<li>我尽可能避开了 JAVA 和 C++ 这两个最多岗位的语言。。JAVA 的话我卷不过后端小子，框架也一点不熟；C++ 我甚至不敢说我会写（怀抱着对《The Book of Modern C++》的恐惧）。</li>
<li>而 Rust 非常显然，几乎没有公司招；即使有一些量化要 rust，我也暂时没有考虑，因为使用 Rust 的实习经历给我带来了不小的心理创伤。</li>
<li>最终还是 Python 岗位看得多一点，然而由于不想从事 Python 后端，我也只能投一点万金油。</li>
</ul>
<p>语言其实并不是重点，啥语言学一周都能上手。重要的还是计算机背后的逻辑。</p>
<h2>准备</h2>
<h3>软件</h3>
<ul>
<li>牛客：更偏向互联网，人才多；牛客首页是论坛，所以软件本身性质更偏向交流的。</li>
<li>BOSS：纯招聘向的软件。BOSS 社招很多，校招会少点。</li>
</ul>
<h3>简历模板</h3>
<p>我用 <a href="/learning/typst.html" target="_blank">typst</a> 比较多，好久之前就盯上了 <a href="https://github.com/OrangeX4/Chinese-Resume-in-Typst" target="_blank" rel="noopener noreferrer">OrangeX4 的简历模板</a>。字体在 Linux 上可能要折腾一会儿，但是确实够好看。</p>
<p>typst 可能有些难，再不济至少也得用个 <a href="https://github.com/BingyanStudio/LapisCV" target="_blank" rel="noopener noreferrer">markdown 简历模版</a> 吧。</p>
<p>如果你跟我很熟，可以把 Github 用户名告诉我，我给你开权限看我的简历与招聘全记录。</p>
<h2>2024 秋招</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>只显示部分结果（有进度的）；点击列表可以查看详细内容，包括笔试/面试，公司业务和评价。</p>
</div>

<h3>关于测评</h3>
<ul>
<li>携程和小米用的都是 ceping.com 提供的，这玩意非常烂。我见一次就想吐一次。
<ul>
<li>不同公司需要重复测评，同一套题库不能只做一次。</li>
<li>超时貌似是直接判负的，而不是当前选中的答案。</li>
<li>有很多傻逼计算题和智商测试题，还 tm 限时。</li>
</ul>
</li>
<li>华为是另一套系统，纯自我评价，不涉及其他测试。我觉得还行。</li>
<li>拼多多测评是北森，这个是完全看出题者的。还行，不过题量有点大。</li>
</ul>
<h2>2024 春，实习</h2>
<p><s>据说</s>在找工作时有实习经历是很重要的，因此我在大三下初期找暑期实习。</p>
<p>基本信息：</p>
<ul>
<li>暑期实习的难度一般比日常实习要高，不过也提供更多的转正机会。</li>
<li>一般互联网实习都是线上面试 &amp; 笔试。</li>
<li>金三银四是真的，好的实习机会早点更多。</li>
</ul>
<p>心得：</p>
<ul>
<li>在如今的环境下，211 学历比我想象中更吃香。刷着帖子，切身感受到了学历的重要性，<s>把高考前的我抓来打</s>。</li>
<li>信息来源，可以是用 app（牛客，实习僧，智联，boss），一般学校也会拉群给实习信息。后者档次就相对低一点，主要是学校合作企业和当地企业在招？</li>
<li>小厂的笔试/面试体验比大厂好很多。</li>
<li>互联网大厂，算法非常重要（也可以说大厂岗位就是给 OI 爷准备的）。</li>
</ul>

<p>其他否决票：</p>
<ul>
<li>阿里：主要在杭州招。（后来感觉其实我应该投的，即使不一定能去，多面几次也是不错的经验）</li>
<li>美团、菜鸟、高德...：都是（都只有）移动端/后端，技术栈不匹配，不考虑</li>
</ul>
<h2>external</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/20604468985" target="_blank" rel="noopener noreferrer">DeepSeek 实习感受与大模型择业思考</a> | <a href="https://telegra.ph/DeepSeek%E5%AE%9E%E4%B9%A0%E6%84%9F%E5%8F%97%E4%B8%8E%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%8B%A9%E4%B8%9A%E6%80%9D%E8%80%83-02-05" target="_blank" rel="noopener noreferrer">bak</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>CSS</title>
      <link>https://absx.pages.dev/coding/css.html</link>
      <guid>https://absx.pages.dev/coding/css.html</guid>
      <source url="https://absx.pages.dev/rss.xml">CSS</source>
      <description>CSS 本人是 CSS 超级苦手，甚至以前都只会写 nocss 页面。但是如果要给别人做东西用，nocss 肯定不太行。当今所有主流 GUI 框架中没一个打得过前端设计，我也想在前端领域玩玩，因此学习一点 CSS 是有必要的。 预处理器 css 本身不带逻辑，处理嵌套也麻烦。因此有各种各样的预处理器可以允许我们写更强大、更有意思的扩展语法，然后由它们在...</description>
      <category>编程</category>
      <pubDate>Fri, 13 Dec 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>本人是 CSS 超级苦手，甚至以前都只会写 nocss 页面。但是如果要给别人做东西用，nocss 肯定不太行。当今所有主流 GUI 框架中没一个打得过前端设计，我也想在前端领域玩玩，因此学习一点 CSS 是有必要的。</p>
<h2>预处理器</h2>
<p>css 本身不带逻辑，处理嵌套也麻烦。因此有各种各样的预处理器可以允许我们写更强大、更有意思的扩展语法，然后由它们在编译器改成标准 css。</p>
<ul>
<li>scss：sass 3.0 的别名，我觉得最泛用的。</li>
<li><a href="https://lesscss.org/" target="_blank" rel="noopener noreferrer">less</a>，朋友的公司在用</li>
</ul>
<p>上面两个预处理器都兼容原生 css。</p>
<h2>盒模型</h2>
<p>前端基础概念了。</p>
<ul>
<li>标准盒模型：<code>box-sizing: content-box</code>，content = size；border 和 padding 向外扩展，浏览器默认值。</li>
<li>IE 盒模型：<code>box-sizing: border-box</code>，content = size - border - padding，可以从外部统一大小，直观，方便编排。</li>
</ul>
<p>现在有一种实践是全局所有组件全部使用 IE 盒模型，我觉得还是比较有道理的，特别是前端初学者可以通过 IE 盒避开不少坑。</p>
<div style="position: relative; width: 400px">
  <!-- Margin Layer -->
  <div style="background-color: #e8f4f8; padding: 20px; text-align: center; border: 2px dashed #a8d1dc">
    <div style="
        position: absolute;
        top: 0px;
        left: 50%;
        transform: translateX(-50%);
        background-color: white;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 14px;
      ">
      margin
    </div>
    <!-- Border Layer -->
    <div style="background-color: #ffb6b6; padding: 20px">
      <div style="
          position: absolute;
          top: 20px;
          left: 50%;
          transform: translateX(-50%);
          background-color: white;
          padding: 2px 8px;
          border-radius: 4px;
          font-size: 14px;
        ">
        border
      </div>
      <!-- Padding Layer -->
      <div style="background-color: #e6ffe6; padding: 20px">
        <div style="
            position: absolute;
            top: 40px;
            left: 50%;
            transform: translateX(-50%);
            background-color: white;
            padding: 2px 8px;
            border-radius: 4px;
            font-size: 14px;
          ">
          padding
        </div>
        <!-- Content Layer -->
        <div style="background-color: #fff2e6; padding: 20px; text-align: center">Content Area</div>
      </div>
    </div>
  </div>
</div>
<h2>定位</h2>
<p>| Position | 描述                                                             |
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>内网穿透</title>
      <link>https://absx.pages.dev/articles/frp.html</link>
      <guid>https://absx.pages.dev/articles/frp.html</guid>
      <source url="https://absx.pages.dev/rss.xml">内网穿透</source>
      <description>内网穿透 在 软路由上部署了应用后，我需要一个内网穿透让我在任何地点都能连上应用。需求：免费，稳定。 我希望使用自定义化的方案。（高级）需求：虚拟组网，P2P cloudflare tunnel（推荐） 折腾完了其他几个服务我才想到 cloudflare，一搜，果然有。 cloudflare 的内网穿透是部署最简单，使用体验最好的服务，杀死了所有其他 ...</description>
      <category>推荐</category>
      <category>教程</category>
      <category>评价</category>
      <pubDate>Wed, 04 Dec 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<ol>
<li>在 <a href="/articles/linux/openwrt.html" target="_blank">iStoreOS</a> 软路由上部署了应用后，我需要一个内网穿透让我在任何地点都能连上应用。需求：免费，稳定。</li>
<li>我希望使用自定义化的<a href="/articles/control.html" target="_blank">远程控制</a>方案。（高级）需求：虚拟组网，P2P</li>
</ol>
<h2>cloudflare tunnel（推荐）</h2>
<p>折腾完了其他几个服务我才想到 cloudflare，一搜，果然有。</p>
<p>cloudflare 的内网穿透是部署最简单，使用体验最好的服务，杀死了所有其他 frp 玩家。</p>
<ol>
<li>前往 <a href="https://one.dash.cloudflare.com/" target="_blank" rel="noopener noreferrer">cloudflare zero trust</a>，左侧选择 <em>Networks - Tunnels</em>，创建一个新的 tunnel。</li>
<li>根据提示在服务器上安装 cloudflared。提示中的 Linux 部分只包含了 rpm/deb 系，但是没有关系，直接到 <a href="https://github.com/cloudflare/cloudflared" target="_blank" rel="noopener noreferrer">Github cloudflared</a> 的 release 中下载对应架构 binary 文件。</li>
<li>执行 cloudflare 步骤里带有 token 的命令。</li>
</ol>
<p>就这么简单，可以说一行命令完成内网穿透也不为过。而且你永远可以相信 cloudflare 的延迟和稳定性。</p>
<p>不过 cloudflared 在 <a href="/articles/linux/openwrt.html#%E6%9C%8D%E5%8A%A1" target="_blank">procd</a> 系统上只会将 service 写入 <code>/etc/init.d/cloudflared</code>，并不会开机自启。如果需要开机自启，需要手动创建一个软链接：</p>
<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> /etc/rc.d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ../init.d/cloudflared</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ./S99cloudflared</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2><a class="header-anchor" href="#easytier"><span></span></a><a href="https://easytier.cn/" target="_blank" rel="noopener noreferrer">easytier</a></h2>
<p>类似 zerotier 等的组网软件，免费，对国内有优化。而且是 rust 写的。</p>
<blockquote>
<p>和 zerotier、tailscale 故意区分了不同端相比，easytier 是全对等的。包括官方的公益节点也是普通 peer，所有 peer 都可以传递信令、组织网络、中转流量。——Losarch</p>
</blockquote>
<p>实际用起来的话，感受是文档非常不清楚，没有一个 full config example，全是命令行。并且默认情况下它会将你的服务器连到大网络里，消耗你的流量；除非你开启 private-mode 进行网络隔离，或者开启 relay-network-whitelist + relay-all-peer-rpc 只允许帮助 p2p 连接。</p>
<h2>zerotier</h2>
<p><a href="https://openwrt.org/docs/guide-user/services/vpn/zerotier" target="_blank" rel="noopener noreferrer">据说</a> openwrt 是有 zerotier 的软件包的，但是我在 iStoreOS 里一点也找不到，不知道是 iStoreOS 的 fork 问题还是 opkg 的问题。</p>
<p>然后我想直接下载 binary，结果发现<a href="https://www.zerotier.com/download" target="_blank" rel="noopener noreferrer">下载页面</a>里只有 rpm/deb 系的，Github release 里也找不到 binary。合着其他发行版就不配装你的程序了？</p>
<p>zerotier 软件 UI 也都比较古老，网页不清晰，几个产品之间关系也比较混乱，一会儿把你推去 zerotier One，一会儿又踢回 zerotier，但是我没空，也没兴趣了解它们之间的关系。</p>
<p>之后我在被控端和受控端安装了 Zerotier One，然后将几个节点加入网络，我居然还不能直接从 Android 节点拿到被控端的 IP，要我登录网页去看。网页里也不显示 hostname，分不清设备。然后发现如果用 private 网络，我的几个节点都过不了 auth，呃呃，软件里哪有 auth 功能。只好在面板里把网络设成 public。</p>
<p>尝试远控，质量比 Tailscale 好点，但是还是达不到我的标准。码率不足，延迟 1s 以上。</p>
<h2><a class="header-anchor" href="#rathole"><span></span></a><a href="https://github.com/rapiz1/rathole" target="_blank" rel="noopener noreferrer">rathole</a></h2>
<p>rathole 是一个 Github 开源项目，本身并不提供内网穿透的服务器；它需要在一台有公网 IP 的服务器上部署转发程序（server），并在内网服务器上部署 client。其实也就是相当于部署一个代理了。不过好在它的配置非常简单，只要写端口就行；而且是 Rust 写的，有编程语言原神之力加持，所以我还是尝试了一下。</p>
<p>程序很容易就跑起来了，唯一的问题是开机自启。公网服务器上是正常发行版（systemd），这个还好写，我之前做过一个 <a href="https://github.com/lxl66566/user-startup-rs" target="_blank" rel="noopener noreferrer">user-startup-rs</a>的程序，可以做到一键自启。但是 iStoreOS 用的是 procd，老式的 service 命令写服务，这 service 里还大量调用了 OpenWRT 的接口，学习成本和心智负担都不可忽视。</p>
<p>service 写完，可以跑起来了，结果实际使用时还整天断连，稳定性非常低。我猜测是 service 写出了问题，然而这又不像 systemd 接 journal，没有日志输出，调试非常不便。</p>
<p>同时因为我的公网服务器大多是月抛小鸡，每个月都要修改配置还是非常麻烦的，最后还是放弃了。</p>
<h2>Tailscale</h2>
<p>Tailscale 与 其开源实现 headscale 都是老牌的虚拟组网工具。Tailscale 免费版可以虚拟组网 100 台设备。安装很简单，对应平台下载安装包，登录就行。</p>
<p>但是实测下来，串流效果很差，视频完全无法显示。我猜这个组网并不是 P2P 的，免费服务器的带宽不够，无法承载串流流量。</p>
<p>Tailscale 还有一点不好用的地方，就是打开 Android APP 就要启动 VPN service，而不是手动点 connect 时启动。</p>
<h2>NetBird</h2>
<p>官网看着很现代化，让我抱有了一丝不切实际的希望。结果连接稳定性极低，进去以后也是码率不足黑屏。并且和 zerotier 一样也是无法在 APP 内看 IP。</p>
]]></content:encoded>
    </item>
    <item>
      <title>OpenWRT</title>
      <link>https://absx.pages.dev/articles/linux/openwrt.html</link>
      <guid>https://absx.pages.dev/articles/linux/openwrt.html</guid>
      <source url="https://absx.pages.dev/rss.xml">OpenWRT</source>
      <description>OpenWRT 我之前买了一个 n1 盒子用来玩，上面已经刷了 iStoreOS，这是一个 OpenWRT 的分支。这里记录了一些我的折腾过程。 一句话：iStoreOS 非常垃圾，服务越开越多，用得越来越难受。20250114 跑了，刷成了 Arch Linux ARM。 包管理 OpenWRT 用的包管理器是 opkg。虽然 OpenWRT 已经声...</description>
      <category>教程</category>
      <pubDate>Wed, 04 Dec 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>我之前买了一个 n1 盒子用来玩，上面已经刷了 iStoreOS，这是一个 OpenWRT 的分支。这里记录了一些我的折腾过程。</p>
<p>一句话：iStoreOS 非常垃圾，服务越开越多，用得越来越难受。20250114 跑了，刷成了 Arch Linux ARM。</p>
<h2>包管理</h2>
<p>OpenWRT 用的包管理器是 <code>opkg</code>。虽然 OpenWRT 已经声称要转到 apt，但是还没转，并且 iStoreOS 应该还没有那么快跟上。因此我不得不用这个不合格的包管理器。</p>
<ul>
<li>查找：help 里写 <code>opkg find &lt;regexp&gt;</code>，但是我使用 <code>opkg find 'python.*'</code> 并不能找到任何结果。我感觉这个 regexp 是假的。</li>
<li>软件包本身也是残缺的，例如 vim 的 <code>si</code> 功能被砍了。</li>
</ul>
<h2>docker</h2>
<p>iStoreOS 上啥都没有，但是有 docker。</p>
<p>然而这个 docker 的配置是 OpenWRT 乱写的，需要去看 <code>/etc/init.d/dockerd</code> 才知道怎么配，配置文件在哪。网上的 docker 配置教程都废了。（<a href="https://t.me/withabsolutex/2119" target="_blank" rel="noopener noreferrer">开喷</a>）</p>
<h2>代理</h2>
<p>OpenWRT 的 Linux 内核是 5.10，iStoreOS 也<a href="https://github.com/istoreos/istoreos/issues/1386" target="_blank" rel="noopener noreferrer">遵循上游内核版本</a>。然而 dae 的最低内核要求是 5.17，因此我无法在 iStoreOS 上使用 dae 作为代理。</p>
<h2>服务</h2>
<p>OpenWRT 不支持 systemd，果然还是太重了吧。所以必须使用传统的 <a href="https://openwrt.org/docs/guide-developer/procd-init-scripts" target="_blank" rel="noopener noreferrer">procd init script</a>。</p>
<ol>
<li>在 <code>/etc/init.d/&lt;service name&gt;</code> 写入：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">#!/bin/sh /etc/rc.common</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">USE_PROCD</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">START</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">90</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">start_service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    procd_open_instance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Instance</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 随便</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">取&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    procd_set_param</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">your</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> startup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> comman</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">d&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    procd_set_param</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> limits</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nofile="unlimited"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    procd_set_param</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> respawn</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 300</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    procd_set_param</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stdout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    procd_set_param</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stderr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    procd_close_instance</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>（startup command 可以不是绝对可执行路径）</li>
<li>添加权限：<code>chmod +x /etc/init.d/&lt;service name&gt;</code></li>
<li>运行 <code>service &lt;service name&gt; enable</code>。</li>
<li>开机自启：<code>cd /etc/rc.d &amp;&amp; ln -s ../init.d/&lt;service&gt; ./S99&lt;service&gt;</code></li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>八股</title>
      <link>https://absx.pages.dev/coding/bagu.html</link>
      <guid>https://absx.pages.dev/coding/bagu.html</guid>
      <source url="https://absx.pages.dev/rss.xml">八股</source>
      <description>八股 本文内容大多是面试八股，写在这里只是加深记忆。至于内容确实没有太多看的价值，网上类似的可太多了。 关于、、等，我都放在了关联的文章内。只有找不到啥关联的后端八股才写在此处。 Redis 内存型 KV 数据库，用于缓存。 穿透，击穿，雪崩 external C/C++ 技术面试基础知识总结</description>
      <category>编程</category>
      <pubDate>Fri, 08 Nov 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>本文内容大多是面试八股，写在这里只是加深记忆。至于内容确实没有太多看的价值，网上类似的可太多了。</p>
<p>关于<a href="/coding/algorithm.html" target="_blank">算法</a>、<a href="/coding/java.html" target="_blank">Java</a>、<a href="/coding/sql.html" target="_blank">数据库</a>等，我都放在了关联的文章内。只有找不到啥关联的后端八股才写在此处。</p>
<h2>Redis</h2>
<p>内存型 KV 数据库，用于缓存。</p>
<ul>
<li><a href="https://lry722.github.io/posts/redis-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98" target="_blank" rel="noopener noreferrer">穿透，击穿，雪崩</a></li>
</ul>
<h2>external</h2>
<ul>
<li><a href="https://github.com/huihut/interview" target="_blank" rel="noopener noreferrer">C/C++ 技术面试基础知识总结</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>信息论</title>
      <link>https://absx.pages.dev/learning/information_theory.html</link>
      <guid>https://absx.pages.dev/learning/information_theory.html</guid>
      <source url="https://absx.pages.dev/rss.xml">信息论</source>
      <description>信息论 熵 信源熵（平均不确定度）：Hs​=−i=1∑n​pi​logd​pi​ 条件熵（已知 X，关于 Y）：H(X∣Y)=−i,j∑​p(xi​,yj​)logp(xi​∣yj​)=−i,j∑​p(xi​,yj​)logp(yj​)p(xi​,yj​)​ 联合熵（X 和 Y 同时发生）：H(X∣Y)=−i,j∑​p(xi​,yj​)logp(xi​...</description>
      <category>学习</category>
      <pubDate>Wed, 30 Oct 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<h2><a class="header-anchor" href="#熵"><span></span></a><a href="https://zh.wikipedia.org/wiki/%E7%86%B5_(%E4%BF%A1%E6%81%AF%E8%AE%BA)" target="_blank" rel="noopener noreferrer">熵</a></h2>
<p>信源熵（平均不确定度）：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><msub><mi>H</mi><mi>s</mi></msub><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>d</mi></msub><msub><mi>p</mi><mi>i</mi></msub></mstyle></mrow><annotation encoding="application/x-tex">{\displaystyle H_{s}=-\sum _{i=1}^{n}p_{i}\log _{d}p_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.242em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>条件熵（已知 X，关于 Y）：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mi mathvariant="normal">H</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></munder><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></munder><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">{\displaystyle \mathrm {H} (X|Y)=-\sum _{i,j}p(x_{i},y_{j})\log {p(x_{i}|y_{j})}=-\sum _{i,j}p(x_{i},y_{j})\log {\frac {p(x_{i},y_{j})}{p(y_{j})}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.8408em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mord mathrm">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p>
<p>联合熵（X 和 Y 同时发生）：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mi mathvariant="normal">H</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></munder><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mrow><annotation encoding="application/x-tex">{\displaystyle \mathrm {H} (X|Y)=-\sum _{i,j}p(x_{i},y_{j})\log {p(x_{i},y_{j})}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4638em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mord mathrm">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></span></p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>+</mo><mi>H</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(X,Y) = H(X) + H(Y | X) = H(Y)+ H(X |Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></p>
<h3><a class="header-anchor" href="#互信息"><span></span></a><a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E4%BF%A1%E6%81%AF" target="_blank" rel="noopener noreferrer">互信息</a></h3>
<p>互信息代表随机变量彼此之间的相关性。</p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mi>I</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">;</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>y</mi><mo>∈</mo><mi>Y</mi></mrow></munder><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></munder><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mtext> </mtext><mtext> ⁣</mtext></mstyle></mrow><annotation encoding="application/x-tex">{\displaystyle I(X;Y)=\sum _{y\in Y}\sum _{x\in X}p(x,y)\log {\left({\frac {p(x,y)}{p(x)\,p(y)}}\right)},\,\!}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.8804em;vertical-align:-1.4304em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4304em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3217em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:-0.1667em;"></span></span></span></span></span></p>
<p>关于熵和互信息之间的关系只需要记下这张图：</p>
<svg width="300" height="200" xmlns="http://www.w3.org/2000/svg">
  <!-- 圆 X -->
  <circle cx="100" cy="100" r="60" fill="skyblue" fill-opacity="0.5"></circle>
  <text x="60" y="100" font-size="12" fill="red">H(X|Y)</text>
  <!-- 圆 Y -->
<circle cx="160" cy="100" r="60" fill="orange" fill-opacity="0.5"></circle><text x="180" y="100" font-size="12" fill="red">H(Y|X)</text>  <!-- 重叠区域 I(X; Y) -->
<text x="125" y="100" font-size="12" fill="red">I(X;Y)</text>  <!-- 联合熵 H(X, Y) -->
<text x="120" y="40" font-size="12" fill="red">H(X, Y)</text>  <!-- 条件熵 H(X|Y) 和 H(Y|X) -->
<text x="50" y="150" font-size="12" fill="red">H(X)</text><text x="180" y="150" font-size="12" fill="red">H(Y)</text></svg>
<h2>信道</h2>
<h3>模型</h3>
<ul>
<li>信源：H(X)</li>
<li>信道：H(Y)</li>
<li>信道中损失的信息量（疑义度）：H(X|Y)</li>
<li>噪声熵：H(Y|X)</li>
<li>接收端获得的信息量：I(X;Y)</li>
</ul>
<h3>公式</h3>
<p>信道容量：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mtext>&nbsp;</mtext><mi>C</mi><mo>=</mo><mi>m</mi><mi>a</mi><msub><mi>x</mi><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></msub><mi>I</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">;</mo><mi>Y</mi><mo stretchy="false">)</mo></mstyle></mrow><annotation encoding="application/x-tex">{\displaystyle \ C=max _{p(x)}I(X;Y)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mspace">&nbsp;</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">ma</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></span>，一般可以拿 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">;</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(X;Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span> 来变形</p>
<p>单位时间信道容量：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>t</mi></msub><mo>=</mo><mi>C</mi><mi mathvariant="normal">/</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">C_t=C/t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">/</span><span class="mord mathnormal">t</span></span></span></span></p>
<p>BSC 信道（二进制对称 DMC 信道）：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mn>1</mn><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>ε</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C=1-H(ε)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">ε</span><span class="mclose">)</span></span></span></span> bit （ε 为转移概率）</p>
<p>二元擦除信道（两个输入的擦除是改到同一个值）：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mn>1</mn><mo>−</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">C=1-a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> bit （a 为擦除概率）</p>
<p>定义如果信道转移矩阵的任何两行互相置换，任何两列也互相置换，那么称该信道是对称的。如果转移矩阵的每一行都是其他每行的置换，而所有列的元素 sum 相等，则称这个信道是弱对称的。</p>
<p>对于弱对称信道，C=log (Y 的取值个数) - H(转移矩阵的一行)</p>
<p>和信道：指在任一单位时间内随机地选用任一个而不能同时选用多个的信道。和信道中 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mo>∑</mo><msup><mn>2</mn><msub><mi>C</mi><mi>i</mi></msub></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C=log(\sum 2^{C_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<h2>编码</h2>
<p>(M, n) 码指的是 X 的 (码本长度，序列长度)。</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV19z4y1o7nV/?p=2&amp;t=642" target="_blank" rel="noopener noreferrer">定长编码</a>
<ul>
<li>无失真：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>&gt;</mo><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R&gt;H(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></li>
<li>输出信息率（码率）：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>m</mi><mo>⋅</mo></mrow><annotation encoding="application/x-tex">R=log m\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord">⋅</span></span></span></span> (编码后长度/编码前长度)，其中 m 为进制数</li>
<li>编码效率 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi><mo>=</mo><mfrac><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><mi>R</mi></mfrac></mrow><annotation encoding="application/x-tex">\eta=\frac{H(X)}R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
</li>
</ul>
<p>信道编码定理：对于离散无记忆信道，小于信道容量 C 的所有码率都是可达的。</p>
<h3>信源编码</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Huffman_coding" target="_blank" rel="noopener noreferrer">Haffman 编码</a>：构建 Haffman Tree 即可，非常简单。每次取两个最小的节点组成新的子树。约定每次概率较大的分配 0，较小的分配 1。</li>
<li><a href="https://zh.wikipedia.org/wiki/%E7%AE%97%E6%9C%AF%E7%BC%96%E7%A0%81" target="_blank" rel="noopener noreferrer">算术编码</a>：直接把整个输入的消息编码为一个数
<ul>
<li>先对输入符号的概率进行估计</li>
<li>按照估计概率之比，对 0-1 的区间进行切分</li>
<li>每次取实际信息的一个符号，在符号对应的区间继续按照相同的比例切分</li>
<li>切分全部结束后，任取最终区间内的一点即为编码结果。最终可以将此小数转为整数；也可以转为二进制。</li>
</ul>
</li>
</ul>
<h2>微分熵</h2>
<p>连续变量的熵 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mo>∫</mo><mi>S</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">h(X)=-\int_S f(x)log f(x)dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1608em;vertical-align:-0.3558em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1225em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></p>
<p>正态分布熵：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">(</mo><mi>μ</mi><mo separator="true">,</mo><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><mi>e</mi><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mtext>&nbsp;</mtext><mi>b</mi><mi>i</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">h(N(\mu,\sigma^2))=\frac12log(2\pi e \sigma^2) \ bits</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace">&nbsp;</span><span class="mord mathnormal">bi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span></span></span></span></p>
<h2>高斯信道</h2>
<p>一般功率要求 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>∑</mo><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>≤</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\frac1n\sum x_i^2\le P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></p>
<p>高斯信道：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub><mo>∼</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Z_i\sim\mathcal{N}(0, N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><msup><mi>X</mi><mn>2</mn></msup><mo>=</mo><mi>P</mi><mo separator="true">,</mo><mi>E</mi><msup><mi>Y</mi><mn>2</mn></msup><mo>=</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">EX^2=P, EY^2=N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>≤</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mn>2</mn><mi>π</mi><mi>e</mi><mo stretchy="false">(</mo><mi>P</mi><mo>+</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(Y)\le\frac12log2\pi e(P+N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>Z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mn>2</mn><mi>π</mi><mi>e</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">h(Z)=\frac12log2\pi eN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mfrac><mi>P</mi><mi>N</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C=\frac12log(1+\frac{P}{N})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，最大值在 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∼</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X\sim\mathcal{N}(0, P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></p>
<p>并联高斯信道容量 = sum</p>
]]></content:encoded>
    </item>
    <item>
      <title>Vue.js</title>
      <link>https://absx.pages.dev/coding/vue.html</link>
      <guid>https://absx.pages.dev/coding/vue.html</guid>
      <source url="https://absx.pages.dev/rss.xml">Vue.js</source>
      <description>Vue.js 前言 前端技术栈里，我最熟悉的肯定就是 vue 了，这两年折腾博客不是白折腾的。但是之前主要学习的还都是 Vue2 语法，并且伴随着摸索的痛苦。现在由于一些契机，我开始较为系统地学习前端，因此有了这一篇文章。 在了解了其他前端框架后，我发现 Vue 关键字太多很难记这一点确实是对的。而且 Vue 有很多隐式的坑，还是比较劝退新人的。 Vu...</description>
      <category>编程</category>
      <pubDate>Fri, 18 Oct 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<h2>前言</h2>
<p>前端技术栈里，我最熟悉的肯定就是 vue 了，这两年折腾博客不是白折腾的。但是之前主要学习的还都是 Vue2 语法，并且伴随着摸索的痛苦。现在由于一些契机，我开始较为系统地学习前端，因此有了这一篇文章。</p>
<p>在了解了其他前端框架后，我发现 Vue 关键字太多很难记这一点确实是对的。而且 Vue 有很多隐式的坑，还是比较劝退新人的。</p>
<h2>Vue 2 与 Vue 3</h2>
<p>Vue 当前版本迭代到 Vue 3。但是如果在 2024 年左右上网问 GPT，给出的答案基本全是 Vue 2 的答案。真正用过 Vue 3 以后才知道好用，因此后来本博客的组件全部迁移了 Vue 3，并且我强烈建议所有项目迁移 Vue 3，不要再写 Vue 2 了。</p>
<h3>迁移到 Vue 3</h3>
<p>Vue3 的所有函数和导出全部写在 <code>setup()</code> 里，一般都使用 <code>&lt;script setup&gt;</code> 语法糖，免去两层嵌套和手动导出。</p>
<p>Vue2 使用大量的 <code>this.$set</code> 进行组件状态更新和重新渲染；Vue 3 只需要把变量声明为 <code>ref</code>/<code>reactive</code> 即可。</p>
<p>Vue3 本来还有个 <code>$ref()</code> 的语法糖可以将 ref 的 <code>.value</code> 给省掉，但是后来在 Vue3.4 废弃了。</p>
<ul>
<li>关于 props 修改：Vue2 的 <code>props</code> 可以整个直接复制到 Vue3 的 <code>defineProps()</code> 括号里。调用时，需要把 <code>this.</code> 改为 <code>props.</code>。</li>
</ul>
<h2>组件解析</h2>
<p>每个 <code>.vue</code> 组件由 template, script, style 三部分组成。</p>
<h3>template</h3>
<ul>
<li>在标签区域里使用 <code>:</code> (v-bind) 进行表达式调用，例如 <code>a="root"</code> 表示给 a 赋值为字符串 <code>"root"</code>，而 <code>:a="root"</code> 表示给 a 赋值为名为 root 的变量的值。
<ul>
<li>vue2 中，只写函数名则只调用，不拿返回值；加了括号是拿返回值。</li>
</ul>
</li>
</ul>
<h3>style</h3>
<p>请务必使用 <code>&lt;style scoped&gt;</code>！避免 css 污染其他样式。更常用的是 <code>&lt;style lang="scss" scoped&gt;</code>，可以同时使用 scss 语法。</p>
<p>style scoped 里的样式默认会穿透到子组件里。</p>
<h3>script</h3>
<p>使用 <code>&lt;script lang="ts"&gt;</code> 可以指定 ts 语法。vue 3 里一般使用 <code>&lt;script lang="ts" setup&gt;</code>，setup 是一个语法糖。</p>
<h2>vue 类型与方法</h2>
<h3>ref</h3>
<p>最基础的响应式，不多说了。用的时候需要 <code>.value</code>（在 template 和某些地方会自动解包，不需要写 <code>.value</code>，不过写了也没啥问题）。</p>
<p>ref 是浅层的变更追踪，类似于浅拷贝的概念。如果需要达到类似深拷贝的效果，需要 reactive。</p>
<h3>reactive</h3>
<p>reactive 主要用于各种对象与容器，不能用于基本类型，是深层变更追踪。reactive 对象本身是一个 proxy（理解为套了一层壳）而不是原先的类型。</p>
<p>如果一个 ref 被赋给 reactive object 的属性，则其会自动解包；如果被赋给 reactive container（Array, Map 等） 则不会自动解包。</p>
<h3>computed</h3>
<p>Vue2 与 Vue3 中都有 computed。我最开始以为是在编译期就计算出结果（），结果不是，computed 是用于追踪数据变化的。</p>
<p><code>computed()</code> 接受一个闭包，这个闭包一般会捕获外部变量。当此捕获变量被改变时，该闭包就会重新计算，看着挺像 React 的 useEffect。它可以维护数据之间的依赖关系，而 computed 属性的计算顺序是基于依赖关系的树状结构。</p>
<p>类似的函数还有 watch，区别：</p>
<p>| <strong>特性</strong>     | <strong>computed</strong>                           | <strong>watch</strong>                                     |
|</p>
]]></content:encoded>
    </item>
    <item>
      <title>修图嵌字</title>
      <link>https://absx.pages.dev/learning/ps.html</link>
      <guid>https://absx.pages.dev/learning/ps.html</guid>
      <source url="https://absx.pages.dev/rss.xml">修图嵌字</source>
      <description>修图嵌字 因为一些契机，开始学修图/嵌字。 此处内容肯定以 PS 为主。如果使用其他工具会先声明。 下载 PS：详见。 常用快捷键 Ctrl + k 打开首选项（设置） 按住空格可拖动 x 交换前景色和背景色 Ctrl + d 取消选区 Ctrl + j 将选中区域/图层克隆为新图层 Alt + del 将选中区域填充为前景色 配置 首选项配置： 选中...</description>
      <category>学习</category>
      <category>爱好</category>
      <pubDate>Mon, 30 Sep 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>因为一些契机，开始学修图/嵌字。</p>
<p>此处内容肯定以 PS 为主。如果使用其他工具会先声明。</p>
<h2>下载</h2>
<ul>
<li>PS：详见<a href="/farraginous/recommend_websites.html#%E5%AA%92%E4%BD%93%E5%88%9B%E4%BD%9C" target="_blank">网址汇总</a>。</li>
</ul>
<h2>常用快捷键</h2>
<ul>
<li><code>Ctrl + k</code> 打开首选项（设置）</li>
<li>按住空格可拖动</li>
<li><code>x</code> 交换前景色和背景色</li>
<li><code>Ctrl + d</code> 取消选区</li>
<li><code>Ctrl + j</code> 将选中区域/图层克隆为新图层</li>
<li><code>Alt + del</code> 将选中区域填充为前景色</li>
</ul>
<h2>配置</h2>
<p>首选项配置：</p>
<ol>
<li>选中 <em>工具 - 用滚轮缩放</em></li>
<li>取消选中 <em>工具 - 启用轻击平移</em></li>
</ol>
<p>其他配置：</p>
<ol>
<li>关闭 <em>视图 - 对齐</em>，否则元素吸附太多，移动受限。</li>
</ol>
<h2>基础</h2>
<ul>
<li>旋转
<ul>
<li>文本框旋转：需要先 <em>栅格化文本</em>，再选中后 <code>Ctrl + t</code> <em>自由变换</em> 然后旋转。</li>
<li>提取元素并旋转：框选，建个新的图层，旋转该图层</li>
</ul>
</li>
</ul>
<h2>嵌字技巧</h2>
<h3>去字留背景</h3>
<p>背景指的是非纯色较复杂的图案。有几种方法可以做到。</p>
<ol>
<li>选区后，<code>Shift + F5</code> 打开填充，选择 <em>内容识别</em>（默认），直接确定。这个方法可能会去除一些背景，需要用仿制图章再画回来。</li>
<li>直接用移除工具，根据情况可能需要画多次。对于简单背景的效果很好。</li>
<li>选区，然后 <em>编辑 - 内容识别填充</em>。这种方法也可能损背景。</li>
</ol>
<h2>字体</h2>
<p>我去嵌字教程里下过<a href="https://t.me/absolutexsresource/15" target="_blank" rel="noopener noreferrer">字体包</a>。该教程强推华康，这系列的字体虽然多，但只有繁中，不能用于简中。而我是希望能使用简中字体的。</p>
]]></content:encoded>
    </item>
    <item>
      <title>其他艺术形式</title>
      <link>https://absx.pages.dev/hobbies/art.html</link>
      <guid>https://absx.pages.dev/hobbies/art.html</guid>
      <source url="https://absx.pages.dev/rss.xml">其他艺术形式</source>
      <description>其他艺术形式 这里记录的是较少的，一般心血来潮才会看的作品形式。 主要的艺术形式记录请跳转对应页面（ | | ）。 漫画 不太喜欢，剧情一坨，好多漫故意向 sex 方向引诱但是又不干，不如看长篇本子。 电影 资源来源：各大 PT 站 | RARBG 纪录片/连续剧 稍后再看 漫画 今生恋人，前世冤家（等待连载）</description>
      <category>爱好</category>
      <pubDate>Fri, 23 Aug 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<p>这里记录的是较少的，一般心血来潮才会看的作品形式。</p>
<p>主要的艺术形式记录请跳转对应页面（<a href="/hobbies/galgame.html" target="_blank">galgame</a> | <a href="/hobbies/anime.html" target="_blank">番剧</a> | <a href="/hobbies/books.html" target="_blank">小说</a>）。</p>
<h2>漫画</h2>
<p>不太喜欢，剧情一坨，好多漫故意向 sex 方向引诱但是又不干，不如看长篇本子。</p>
<!-- prettier-ignore -->
<table>
<thead>
<tr>
<th style="text-align:center">名</th>
<th style="text-align:center">时间</th>
<th style="text-align:center">评价</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://www.manhuagui.com/comic/51315/" target="_blank" rel="noopener noreferrer">虽然我成为了圣骑士但是团长的欧派厉害过头没法保持心灵纯洁</a></td>
<td style="text-align:center">2025.06.10-<br>21，等待连载</td>
<td style="text-align:center">sb 处男漫</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://manhuagui.com/comic/53159/" target="_blank" rel="noopener noreferrer">我成了魔族的宠物</a></td>
<td style="text-align:center">2024.11.09-<br>04，等待连载</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="https://manhuagui.com/comic/44973/" target="_blank" rel="noopener noreferrer">傲娇女友心想刺成</a></td>
<td style="text-align:center">2024.10.09</td>
<td style="text-align:center">草！</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://copymanga.tv/comic/vryouxizhuanshengyishijietiaojiaomowangmeishaonvclothoutsaber/chapter/519b94f4-65e3-11e9-8bc8-024352452ce0" target="_blank" rel="noopener noreferrer">VRエロゲーやってたら異世界に転生したので、美少女魔王を奴隷化する</a></td>
<td style="text-align:center">2024.10.025-<br>19 话，等待连载</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="https://mangabz.com/30986bz/" target="_blank" rel="noopener noreferrer">最果てに惑う</a></td>
<td style="text-align:center">2024.09.15-<br>Ch13.2，等待连载</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">我将要支配你们的一切</td>
<td style="text-align:center">2024.08.22-<br>2024.08.31，烂尾，15 话</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="https://t.me/absolutexsH/2071" target="_blank" rel="noopener noreferrer">SEX&amp;迷宫！！~在我家地下出现了H次数=等级的迷宫！？~</a></td>
<td style="text-align:center">2024.06.22-<br>2024.06.2x</td>
<td style="text-align:center">见链接</td>
</tr>
</tbody>
</table>
<h2>电影</h2>
<ul>
<li>资源来源：各大 PT 站 | <a href="https://wvw.rarbg.tw/" target="_blank" rel="noopener noreferrer">RARBG</a></li>
</ul>
<!-- prettier-ignore -->
<table>
<thead>
<tr>
<th style="text-align:center">名</th>
<th style="text-align:center">时间</th>
<th style="text-align:center">评价</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">盗梦空间 </td>
<td style="text-align:center">2024.12.11</td>
<td style="text-align:center">留白，有意思</td>
</tr>
<tr>
<td style="text-align:center">No More Bets - 2023</td>
<td style="text-align:center">2024.09.29</td>
<td style="text-align:center">虽然剧情有点刻意，不过拍的不错</td>
</tr>
<tr>
<td style="text-align:center">金蝉脱壳 </td>
<td style="text-align:center">2024.09.21</td>
<td style="text-align:center">经典作品，把我的感觉还回来了</td>
</tr>
<tr>
<td style="text-align:center">金蝉脱壳2：冥府 </td>
<td style="text-align:center">2024.09.21-<br>观看中止</td>
<td style="text-align:center">确实烂，<a href="https://movie.douban.com/review/9437758/" target="_blank" rel="noopener noreferrer">影评</a>说得对</td>
</tr>
<tr>
<td style="text-align:center">天才计划 - 2020</td>
<td style="text-align:center">2024.09.20</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><a href="https://zh.wikipedia.org/wiki/%E8%BF%B7%E5%A4%B1%E4%B8%9C%E4%BA%AC" target="_blank" rel="noopener noreferrer">迷失东京</a></td>
<td style="text-align:center">2024.08.21</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">隐入尘烟</td>
<td style="text-align:center">2024.06.26</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<h2>纪录片/连续剧</h2>
<!-- prettier-ignore -->
<table>
<thead>
<tr>
<th style="text-align:center">名</th>
<th style="text-align:center">时间</th>
<th style="text-align:center">评价</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">孤独的美食家</td>
<td style="text-align:center">2023.12.31-<br>7 季，已暂停</td>
<td style="text-align:center">好饿~</td>
</tr>
</tbody>
</table>
<h2>稍后再看</h2>
<ul>
<li>漫画
<ul>
<li><a href="https://18comic.vip/album/604146/%E4%BB%8A%E7%94%9F%E6%81%8B%E4%BA%BA-%E5%89%8D%E4%B8%96%E5%86%A4%E5%AE%B6-%E4%B8%8D%E5%92%95%E9%B8%9F%E6%B1%89%E5%8C%96%E7%BB%84-%E7%A6%81%E6%BC%AB%E5%A4%A9%E5%A0%82" target="_blank" rel="noopener noreferrer">今生恋人，前世冤家</a>（等待连载）</li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
  </channel>
</rss>