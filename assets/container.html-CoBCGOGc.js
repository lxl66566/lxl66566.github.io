import{_ as h,r,o as k,c as d,d as o,w as e,e as n,b as s,a as i}from"./app--m3vMTCj.js";const p={},c=n(`<h1 id="容器" tabindex="-1"><a class="header-anchor" href="#容器"><span>容器</span></a></h1><p>其实我一直不喜欢容器，我认为处理复杂依赖是包管理器的职责，推给 container 是比较粗暴浪费的做法。</p><p>然而看到虚拟机以后，我感觉容器还是有它的价值的<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>。😦</p><h2 id="选择" tabindex="-1"><a class="header-anchor" href="#选择"><span>选择</span></a></h2><p>最流行的容器工具应该就是 docker 了吧，然而因为几次负面消息<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup><sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>让我对其没有任何好感。</p><p>我也尝试在 wsl2 上部署了一下 docker，然而由于没有 systemctl 而无法启动其守护进程。<a href="https://github.com/gdraheim/docker-systemctl-replacement" target="_blank" rel="noopener noreferrer">docker-systemctl-replacement</a> 不可用，需要 nohup 启动 <code>dockerd</code>。我的 wsl2 只有纯命令行，折腾许久，浪费了许多时间。</p><p>于是我转向了 <a href="https://docs.podman.io" target="_blank" rel="noopener noreferrer">podman</a>，这是一个 <strong>daemonless, open source</strong>（开源的、无守护进程的）容器工具，完美解决了我对 docker 的偏见。并且其兼容性也不错：<em>Most users can simply alias Docker to Podman (alias docker=podman) without any problems.</em></p><p>可以前往 <a href="#external">external 1.</a> 查看详细信息。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>本篇中 docker 和 podman 命令是混用的。</p></div><h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础"><span>基础</span></a></h2><p>看看<a href="https://github.com/containers/podman/blob/main/docs/tutorials/podman_tutorial_cn.md" target="_blank" rel="noopener noreferrer">tutorial</a>。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                                 # 查看运行状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                         # -d 表示后台运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                          # 删除容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">nam</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                        # 查看输出(stdout + stderr)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">repositor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">            # 拉取镜像到本地</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">                             # 查看镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">image</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> I</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">repositor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 重命名镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -aq</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)              </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 停止所有容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -aq</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)                </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 删除所有容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -q</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)            </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 删除所有镜像</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h2><p><a href="https://wiki.archlinuxcn.org/wiki/Docker#HTTP%E4%BB%A3%E7%90%86" target="_blank" rel="noopener noreferrer">src</a></p><p>简言之：守护进程和 docker 都需要配置，<code> /etc/docker/daemon.json</code> 和 <code>~/.docker/config.json</code> 都需要写入代理内容。</p><h2 id="dockerhub-mirror" tabindex="-1"><a class="header-anchor" href="#dockerhub-mirror"><span>dockerhub mirror</span></a></h2><p>在 2024 年，中国大规模下架了 docker 镜像。所以现在想要使用 docker 仓库会有一些麻烦。<a href="https://taogenjia.com/2024/08/19/Using-docker-in-China-2024/" target="_blank" rel="noopener noreferrer">Using docker in China 2024</a> 这篇文章介绍了一些方法，我尝试了 cloudflare 反代。不过反代的后果也是 UNAUTHORIZED。</p><p>然后还踩了<a href="#%E6%97%A0%E6%B3%95%E5%BA%94%E7%94%A8%E9%95%9C%E5%83%8F">应用镜像的坑</a>。</p><h2 id="为离线机器下载镜像" tabindex="-1"><a class="header-anchor" href="#为离线机器下载镜像"><span>为离线机器下载镜像</span></a></h2><p>假设我有无法联网的内网服务器，我需要使用其跑镜像。</p>`,20),g=i("p",null,"如果你的电脑上安装了 docker，你应该优先选择这个方法。",-1),y=i("ol",null,[i("li",null,[s("使用 docker pull 拉取镜像。注意你的"),i("strong",null,"目标架构"),s("需要与服务器的架构相同。"),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," pull"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}}," --platform"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," linux/arm64"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," hectorqin/reader:openj9-latest")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])])]),i("li",null,[s("使用 "),i("code",null,"docker save"),s(" 导出指定镜像。如果你有多个镜像，并且 docker 内所有镜像都需要导出，你可以用脚本批量导出："),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#7F848E","--shiki-light-font-style":"inherit","--shiki-dark-font-style":"italic"}},"#!/bin/bash")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"output_dir"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"docker_images"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"mkdir"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}}," -p"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},' "'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"$output_dir"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"for"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}}," image"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}}," in"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}}," $("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," images"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}}," --format"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},' "{{.Repository}}:{{.Tag}}"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"); "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"do")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#56B6C2"}},"    echo"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},' "Saving '),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"$image"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'..."')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"    file_name"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"$("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#56B6C2"}},"echo"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},' "'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"$image"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"'),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#ABB2BF"}}," |"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}}," sed"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," 's/[\\/:]/_/g'"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},")"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},".tar")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"    docker"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," save"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}}," -o"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},' "'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"$output_dir"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},"/"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"$file_name"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"'),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},' "'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"$image"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"done")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#56B6C2"}},"echo"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},' "All images saved to '),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E06C75"}},"$output_dir"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'/"')])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])]),i("li",null,[s("通过 rsync 或者其他方法将所有 "),i("code",null,".tar"),s(" 传输到目标机器上")]),i("li",null,[s("使用 "),i("code",null,"docker load"),s(" 加载所有镜像。")])],-1),m=i("p",null,[i("a",{href:"https://github.com/NotGlop/docker-drag",target:"_blank",rel:"noopener noreferrer"},"docker-drag"),s(" 用不了，别看了。我用的算是官方的 moby 脚本吧。")],-1),u=i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"wget"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," https://raw.githubusercontent.com/moby/moby/master/contrib/download-frozen-image-v2.sh")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"chmod"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," +x"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," download-frozen-image-v2.sh")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"bash"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," download-frozen-image-v2.sh"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," reader"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," hectorqin/reader:openj9-latest")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#61AFEF"}},"tar"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}}," -cvaf"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," reader.tar"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}}," reader")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#7F848E","--shiki-light-font-style":"inherit","--shiki-dark-font-style":"italic"}},"# 这样就把镜像下载并打成了 tar 包。")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),F=i("p",null,"不过这个脚本在 20241204 时还有 bug，就是必须指定 image 的 tag，否则下载链接会 404。",-1),f=i("p",null,"好不容易下载完了，结果打出的 tar 还不能直接被 docker load 加载，非常神奇。我不知道怎么办了。",-1),b=n(`<h2 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose"><span>docker-compose</span></a></h2><p>docker-compose 是 docker 的上一层抽象，一言：<strong>一个 yaml 文件，指明了多个容器的参数</strong>。实际上使用一个 bash 脚本也能做到 docker-compose 做的事。</p><h2 id="遇到的问题" tabindex="-1"><a class="header-anchor" href="#遇到的问题"><span>遇到的问题</span></a></h2><h3 id="无法应用镜像" tabindex="-1"><a class="header-anchor" href="#无法应用镜像"><span>无法应用镜像</span></a></h3><ul><li>网上教程修改镜像都是 <code>/etc/docker/daemon.json</code>，改完重启 docker。但是我重启后并无法应用镜像。 <ul><li>OS：iStoreOS</li></ul></li></ul><p>解法：<code>ps | grep dockerd</code>，可以看到应用的 config 是 <code>--config-file=/tmp/dockerd/daemon.json</code>，根本就不是 <code>/etc/docker/daemon.json</code>。</p><p>继续看 <code>/etc/init.d/dockerd</code>，可以发现其 config 是写在奇怪的地方，并且格式也是自定义格式。（<a href="https://t.me/withabsolutex/2119" target="_blank" rel="noopener noreferrer">被我喷了</a>）</p><h3 id="podman-指定-registry" tabindex="-1"><a class="header-anchor" href="#podman-指定-registry"><span>podman 指定 registry</span></a></h3><ul><li>podman 拉取镜像时可能不支持短名称，需要在名称前加 <code>docker.io/</code> 前缀，或者如 external 1. 所述：Open your <code>$HOME/.config/containers/registries.conf</code> file and paste the following contents: <code>unqualified-search-registries=[&quot;docker.io&quot;]</code></li></ul><h3 id="var-run-docker-sock-connect-permission-denied" tabindex="-1"><a class="header-anchor" href="#var-run-docker-sock-connect-permission-denied"><span>/var/run/docker.sock: connect: permission denied</span></a></h3><p>这个也是常见问题了，守护进程运行在 root 下，普通用户无法访问。解法(<a href="https://stackoverflow.com/questions/48568172" target="_blank" rel="noopener noreferrer">ref</a>)：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -aG</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $USER</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后重新登录。</p><h3 id="安装问题" tabindex="-1"><a class="header-anchor" href="#安装问题"><span>安装问题</span></a></h3><p>正常的 Linux 发行版的包管理器安装都不会出现问题。不过 WSL 就折磨了。我用 ArchWSL，结果 docker 没有守护进程，podman 爆 subuid 错误。</p><h4 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>docker</span></a></h4><p>ArchWSL 上没有 systemd 用，所以自然也不会自行启动 dockerd 守护进程。因此我必须要在另一个 console 上手动运行 <code>sudo dockerd</code> 才能正常使用 docker。</p><h4 id="podman" tabindex="-1"><a class="header-anchor" href="#podman"><span>podman</span></a></h4><p>在 ArchWSL 上 podman 找不到 <code>/etc/subuid</code>，报错。subuid 和 subgid 是用于 User Namespaces 的一部分，主要用于容器化软件，以创建特权分离的容器。</p><p>运行指令：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --add-subuids</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 100000-165535</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --add-subgids</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 100000-165535</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>解决。</p><h2 id="external" tabindex="-1"><a class="header-anchor" href="#external"><span>external</span></a></h2><ol><li><a href="https://betterstack.com/community/guides/scaling-docker/podman-vs-docker/" target="_blank" rel="noopener noreferrer">Exploring Podman: A More Secure Docker Alternative</a></li><li><a href="https://note.aya1.de/#/22-podman" target="_blank" rel="noopener noreferrer">podman 踩坑记录 - Aya</a> | <a href="https://github.com/Brx86/brx86.github.io/blob/5b03fc42683587be98bf6c72685a69d6d86b5c25/22-podman.md" target="_blank" rel="noopener noreferrer">source code</a></li></ol><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>抽象层次与价值取向绑定。 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>Docker 向所有 Docker Hub 用户发去邮件，如果他们是以组织的名义创建账号，那么他们的账号将被删除，所有镜像也将一并删除，除非他们升级到一个付费的团队方案——其年费为 420 美元。<a href="https://www.solidot.org/story?sid=74406" target="_blank" rel="noopener noreferrer">src: solidot</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p>Docker 公司将限制其 Docker Desktop 工具仅供个人或小企业免费使用，大企业将需要<a href="https://www.theregister.com/2021/08/31/docker_desktop_no_longer_free/" target="_blank" rel="noopener noreferrer">付费订阅</a>。该公司要求员工人数在 250 人以上或年收入超过一千万美元的企业如果需要使用 Docker Desktop 那么就必须付费订阅。<a href="https://www.solidot.org/story?sid=68775" target="_blank" rel="noopener noreferrer">src: solidot</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li></ol></section>`,26);function C(A,B){const l=r("Tabs");return k(),d("div",null,[c,o(l,{id:"60",data:[{id:"使用 docker 导出"},{id:"使用脚本下载（无法使用）"}]},{title0:e(({value:a,isActive:t})=>[s("使用 docker 导出")]),title1:e(({value:a,isActive:t})=>[s("使用脚本下载（无法使用）")]),tab0:e(({value:a,isActive:t})=>[g,y]),tab1:e(({value:a,isActive:t})=>[m,u,F,f]),_:1}),b])}const E=h(p,[["render",C],["__file","container.html.vue"]]),D=JSON.parse('{"path":"/coding/container.html","title":"容器","lang":"zh-CN","frontmatter":{"icon":"box","date":"2023-11-12T00:00:00.000Z","category":["编程"],"tag":["工具"],"description":"容器 其实我一直不喜欢容器，我认为处理复杂依赖是包管理器的职责，推给 container 是比较粗暴浪费的做法。 然而看到虚拟机以后，我感觉容器还是有它的价值的[1]。😦 选择 最流行的容器工具应该就是 docker 了吧，然而因为几次负面消息[2][3]让我对其没有任何好感。 我也尝试在 wsl2 上部署了一下 docker，然而由于没有 syst...","head":[["meta",{"property":"og:url","content":"https://absx.pages.dev/coding/container.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"容器"}],["meta",{"property":"og:description","content":"容器 其实我一直不喜欢容器，我认为处理复杂依赖是包管理器的职责，推给 container 是比较粗暴浪费的做法。 然而看到虚拟机以后，我感觉容器还是有它的价值的[1]。😦 选择 最流行的容器工具应该就是 docker 了吧，然而因为几次负面消息[2][3]让我对其没有任何好感。 我也尝试在 wsl2 上部署了一下 docker，然而由于没有 syst..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-08T16:29:03.000Z"}],["meta",{"property":"article:tag","content":"工具"}],["meta",{"property":"article:published_time","content":"2023-11-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-08T16:29:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"容器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-08T16:29:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"选择","slug":"选择","link":"#选择","children":[]},{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"代理","slug":"代理","link":"#代理","children":[]},{"level":2,"title":"dockerhub mirror","slug":"dockerhub-mirror","link":"#dockerhub-mirror","children":[]},{"level":2,"title":"为离线机器下载镜像","slug":"为离线机器下载镜像","link":"#为离线机器下载镜像","children":[]},{"level":2,"title":"docker-compose","slug":"docker-compose","link":"#docker-compose","children":[]},{"level":2,"title":"遇到的问题","slug":"遇到的问题","link":"#遇到的问题","children":[{"level":3,"title":"无法应用镜像","slug":"无法应用镜像","link":"#无法应用镜像","children":[]},{"level":3,"title":"podman 指定 registry","slug":"podman-指定-registry","link":"#podman-指定-registry","children":[]},{"level":3,"title":"/var/run/docker.sock: connect: permission denied","slug":"var-run-docker-sock-connect-permission-denied","link":"#var-run-docker-sock-connect-permission-denied","children":[]},{"level":3,"title":"安装问题","slug":"安装问题","link":"#安装问题","children":[]}]},{"level":2,"title":"external","slug":"external","link":"#external","children":[]}],"git":{"createdTime":1699771501000,"updatedTime":1733675343000,"contributors":[{"name":"lxl66566","email":"lxl66566@gmail.com","commits":6},{"name":"lxl66566","email":"18259734087@163.com","commits":5}]},"readingTime":{"minutes":4.86,"words":1459},"filePathRelative":"coding/container.md","localizedDate":"2023年11月12日","excerpt":"\\n","autoDesc":true}');export{E as comp,D as data};
