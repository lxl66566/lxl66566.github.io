import{_ as g,e as m,g as i,i as n,f as h,j as e,h as l,r as k,o as b}from"./app-DH0Kvi5Z.js";const A={},y={class:"hint-container details"};function f(F,s){const r=k("RouteLink"),d=k("Tabs"),o=k("Badge"),p=k("CodeTabs"),u=k("heimu");return b(),m("div",null,[s[109]||(s[109]=i("h1",{id:"安装与配置-arch-篇",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#安装与配置-arch-篇"},[i("span",null,"安装与配置（Arch 篇）")])],-1)),s[110]||(s[110]=i("h2",{id:"安装",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#安装"},[i("span",null,"安装")])],-1)),n(d,{id:"6",data:[{id:"Archlinux"},{id:"ArchWSL"},{id:"TermuxArch"},{id:"n1 盒子"}]},{title0:e(({value:a,isActive:t})=>s[0]||(s[0]=[l("Archlinux")])),title1:e(({value:a,isActive:t})=>s[1]||(s[1]=[l("ArchWSL")])),title2:e(({value:a,isActive:t})=>s[2]||(s[2]=[l("TermuxArch")])),title3:e(({value:a,isActive:t})=>s[3]||(s[3]=[l("n1 盒子")])),tab0:e(({value:a,isActive:t})=>[i("p",null,[s[5]||(s[5]=l("20230819 收到购买的硬盘，正式安装 archlinux（双系统）。安装过程还挺坎坷的，在")),n(r,{to:"/articles/linux/problem.html"},{default:e(()=>s[4]||(s[4]=[l("问题区")])),_:1}),s[6]||(s[6]=l("可见一斑。"))]),s[7]||(s[7]=i("ul",null,[i("li",null,[i("a",{href:"https://arch.icekylin.online/",target:"_blank",rel:"noopener noreferrer"},"中文教程"),l("，讲的比较好，有不少针对中文用户的细节。 "),i("ul",null,[i("li",null,"本人也参与了一些微小的错误修正和内容追加。")])]),i("li",null,[l("不过还是建议 "),i("a",{href:"https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97",target:"_blank",rel:"noopener noreferrer"},"archwiki - installation guide"),l(" 也一起看看，取长补短。")])],-1)),s[8]||(s[8]=i("div",{class:"hint-container tip"},[i("p",{class:"hint-container-title"},"提示"),i("p",null,[i("a",{href:"https://wiki.archlinuxcn.org",target:"_blank",rel:"noopener noreferrer"},"archwiki"),l(" 是最官方、最权威、最详细的指南，可以多看看，发生分歧时，以 wiki 为准。")])],-1)),s[9]||(s[9]=i("p",null,[l("分两块盘的优点：不用担心 windows 更新崩了 grub 引导"),i("span",{class:"heimu",title:"你知道的太多了"},"不过我已经关了自动更新"),l("；出现失误不用担心丢另一块盘的数据"),i("span",{class:"heimu",title:"你知道的太多了"},"安装时我确实失手格掉了全盘数据和分区"),l("。")],-1)),s[10]||(s[10]=i("h4",{id:"分区",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#分区"},[i("span",null,"分区")])],-1)),s[11]||(s[11]=i("p",null,[l("如果想使用多个内核，"),i("em",null,"boot 分区"),l(" 分 512M 可能不够。不缺的话建议直接 1G。")],-1)),s[12]||(s[12]=i("p",null,[l("swap 无所谓，不分都行，"),i("s",null,"反正我有大 RAM"),l("。（即使我分了，我也"),i("a",{href:"#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE"},"调低了 swappiness"),l("。）")],-1)),s[13]||(s[13]=i("p",null,"由于我用 btrfs，因此只要把其他空间全部给主分区就行了。",-1)),s[14]||(s[14]=i("h4",{id:"添加-windows-引导",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#添加-windows-引导"},[i("span",null,"添加 windows 引导")])],-1)),s[15]||(s[15]=i("p",null,[l("由于双系统，安装后我肯定是都使用 grub 作为引导（开 bios 挺麻烦的），但是我双系统分别在两块不同硬盘上，无法使用 "),i("em",null,"os-prober"),l(" 自动共存。因此我使用如下方法进行自动检测并添加：")],-1)),s[16]||(s[16]=i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"mkdir"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /mnt/windows")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"mount"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /dev/"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"windows"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ef"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"i> "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"/mnt/windows")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"grub-mkconfig"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -o"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /boot/grub/grub.cfg")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"umount"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /mnt/windows")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1))]),tab1:e(({value:a,isActive:t})=>s[17]||(s[17]=[i("h3",{id:"archwsl",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#archwsl"},[i("span",null,[i("a",{href:"https://github.com/yuk7/ArchWSL",target:"_blank",rel:"noopener noreferrer"},"ArchWSL")])])],-1),i("ul",null,[i("li",null,[l("安装： "),i("ol",null,[i("li",null,[l("设置中搜索 "),i("em",null,"启用或关闭 Windows 功能"),l("，打开 HyperV 选项。")]),i("li",null,"安装 wsl 与 archwsl。")]),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"Enable-WindowsOptionalFeature"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," -"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"Online "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"FeatureName Microsoft"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"Windows"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"Subsystem"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"Linux")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 重启")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"wsl "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"--"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"update")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"wsl "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"--"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"install "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"--"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"no"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"distribution")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"scoop install archwsl")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])]),i("ol",{start:"4"},[i("li",null,[l("拉一个 "),i("code",null,".wslconfig"),l("，例如"),i("a",{href:"https://github.com/lxl66566/my-key-data/blob/main/config/.wslconfig",target:"_blank",rel:"noopener noreferrer"},"我的"),l("。否则网络啥的可能会出问题。")]),i("li",null,[l("参照"),i("a",{href:"https://wsldl-pg.github.io/ArchW-docs/How-to-Setup/",target:"_blank",rel:"noopener noreferrer"},"官方文档"),l("使用 pacman。")]),i("li",null,[l("激活 WSL 后，WSL 的 bash.exe 优先级可能会高于 git bash。但是很多时候 git bash 比 WSL bash 更好用（比如 wsl2 的 filesystem 非常慢，但是 git bash 不走 wsl 所以很快），于是我会将 WSL bash 换成 git bash：删掉 "),i("code",null,"C:\\Windows\\System32\\bash.exe"),l("。也是"),i("a",{href:"#%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6"},"改拥有者 + 改权限"),l("那一套。")])])]),i("li",null,[l("更新 ArchWSL：从"),i("a",{href:"https://github.com/yuk7/wsldl/releases",target:"_blank",rel:"noopener noreferrer"},"wsldl"),l("下载 "),i("code",null,"wsldl.exe"),l("，改名为 "),i("code",null,"arch.exe"),l(" 并替换。")]),i("li",null,[l("更新内核：WSL 的内核版本较低，可以通过 "),i("a",{href:"https://github.com/Nevuly/WSL2-Linux-Kernel-Rolling",target:"_blank",rel:"noopener noreferrer"},"WSL2-Linux-Kernel-Rolling"),l(" 更换更高版本内核。")])],-1)])),tab2:e(({value:a,isActive:t})=>s[18]||(s[18]=[i("p",null,"20230920 下午安装 TermuxArch，也踩了不少坑。",-1),i("ol",null,[i("li",null,[l("termux 本身的 pkg 需要配置好镜像源（"),i("code",null,"termux-change-repo"),l("）。")]),i("li",null,[l("安装时如果有报错要注意看，可能需要： "),i("ul",null,[i("li",null,"手动在移动端环境创建目录"),i("li",null,"手动安装一些包，例如 bsdtar")])]),i("li",null,[l("安装完成后为 pacman 添加镜像需要选择 arm 的而不是默认的 x86_64。"),i("div",{class:"language-toml line-numbers-mode","data-highlighter":"shiki","data-ext":"toml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"Server"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = h"),i("span",{style:{"--shiki-light":"white","--shiki-dark":"#FFFFFF"}},"ttp://mirrors.tuna.tsinghua.edu.cn/archlinuxarm/$arch/$repo")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"Server"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = h"),i("span",{style:{"--shiki-light":"white","--shiki-dark":"#FFFFFF"}},"ttp://mirrors.ustc.edu.cn/archlinuxarm/$arch/$repo")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"Server"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = h"),i("span",{style:{"--shiki-light":"white","--shiki-dark":"#FFFFFF"}},"ttp://mirrors.stuhome.net/archlinuxarm/$arch/$repo")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])])],-1)])),tab3:e(({value:a,isActive:t})=>[i("p",null,[s[20]||(s[20]=l("由于 ")),n(r,{to:"/articles/linux/openwrt.html"},{default:e(()=>s[19]||(s[19]=[l("iStoreOS 太难用")])),_:1}),s[21]||(s[21]=l("，于是跑来 Arch。首先你的 n1 盒子需要能够从 U 盘启动，由于我盒子到手已经刷过 OS 了，所以免去了这一步。"))]),s[22]||(s[22]=i("p",null,[l("然后就是需要符合的镜像。n1 盒子太多人用，生态很不错，已经有大佬放出了"),i("a",{href:"https://github.com/LordPenguin666/Arch-Linux-N1",target:"_blank",rel:"noopener noreferrer"},"镜像与刷写脚本"),l("。只需要从 release 下载镜像，刷写到 U 盘（要用 Balena Etcher，不能用 ventoy），插上启动。进了 live cd 以后再执行 "),i("code",null,"./install.sh"),l(" 刷入 eMMC 即可，非常方便快捷。")],-1)),s[23]||(s[23]=i("p",null,"刷完以后默认有 ssh 的，已经可以直接连了。",-1))]),_:1}),s[111]||(s[111]=i("h2",{id:"配置",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#配置"},[i("span",null,"配置")])],-1)),i("p",null,[s[25]||(s[25]=l("这里是 ")),i("em",null,[n(r,{to:"/articles/windows_setting.html"},{default:e(()=>s[24]||(s[24]=[l("文章 - 设置电脑")])),_:1})]),s[26]||(s[26]=l(" 的 linux 板块内容。设置项均为 archlinux，且排名不分先后。"))]),s[112]||(s[112]=i("h3",{id:"系统设置",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#系统设置"},[i("span",null,"系统设置")])],-1)),i("ol",null,[i("li",null,[s[48]||(s[48]=l("基础 alias ")),i("ul",null,[s[45]||(s[45]=i("li",null,[i("code",null,"e"),l("：default "),i("code",null,"$EDITOR")],-1)),i("li",null,[s[28]||(s[28]=i("code",null,"l",-1)),s[29]||(s[29]=l("：")),n(r,{to:"/articles/linux/package.html#eza"},{default:e(()=>s[27]||(s[27]=[l("eza")])),_:1})]),s[46]||(s[46]=i("li",null,[i("code",null,"gp"),l(": "),i("code",null,"git pull")],-1)),i("li",null,[s[31]||(s[31]=i("code",null,"gfixup",-1)),s[32]||(s[32]=l(": ")),n(r,{to:"/coding/Git.html#%E8%87%AA%E5%8A%A8%E5%8C%96-squash"},{default:e(()=>s[30]||(s[30]=[l("git 奇技淫巧 # 自动化 squash")])),_:1})]),i("li",null,[s[34]||(s[34]=i("code",null,"docker",-1)),s[35]||(s[35]=l(": ")),s[36]||(s[36]=i("code",null,"podman",-1)),s[37]||(s[37]=l()),n(r,{to:"/coding/container.html"},{default:e(()=>s[33]||(s[33]=[l("-> container")])),_:1})]),i("li",null,[s[39]||(s[39]=i("code",null,"makepkg",-1)),s[40]||(s[40]=l("：")),n(r,{to:"/articles/linux/package.html#%E6%B5%8B%E8%AF%95"},{default:e(()=>s[38]||(s[38]=[l("抄来的")])),_:1}),s[41]||(s[41]=h(` bwrap。<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> makepkg</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;bwrap --unshare-all --share-net --die-with-parent \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--ro-bind /usr /usr --ro-bind /etc /etc --proc /proc --dev /dev \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--symlink usr/bin /bin --symlink usr/bin /sbin --symlink usr/lib /lib --symlink usr/lib /lib64 \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--bind $PWD /build/$PWD --ro-bind /var/lib/pacman /var/lib/pacman --ro-bind ~/.ccache ~/.ccache \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--bind ~/.cache/ccache ~/.cache/ccache --chdir /build/$PWD /usr/bin/makepkg&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))]),i("li",null,[s[43]||(s[43]=i("code",null,"pack",-1)),s[44]||(s[44]=l(": 偷来的")),n(r,{to:"/articles/linux/package.html#%E6%89%93%E5%8C%85"},{default:e(()=>s[42]||(s[42]=[l("一键打包更新")])),_:1})]),s[47]||(s[47]=h(`<li><code>gpt</code>: 简单跑一个本地模型(<a href="https://github.com/jmorganca/ollama" target="_blank" rel="noopener noreferrer">src</a>)<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ollama</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> serve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/dev/null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ollama</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> llama2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1))])]),i("li",null,[s[54]||(s[54]=l("设置 ")),s[55]||(s[55]=i("a",{href:"https://wiki.archlinux.org/title/Zram#Using_zram-generator",target:"_blank",rel:"noopener noreferrer"},"zram swap",-1)),s[56]||(s[56]=l("。 ")),i("ul",null,[i("li",null,[s[49]||(s[49]=l("我使用 ")),s[50]||(s[50]=i("code",null,"zram-generator",-1)),s[51]||(s[51]=l()),n(o,{text:"AUR"}),s[52]||(s[52]=l("。 ")),s[53]||(s[53]=i("ul",null,[i("li",null,[i("a",{href:"https://github.com/systemd/zram-generator/blob/main/zram-generator.conf.example",target:"_blank",rel:"noopener noreferrer"},"conf example")]),i("li",null,[i("a",{href:"https://github.com/lxl66566/dotfile/blob/archlinux/etc/systemd/zram-generator.conf",target:"_blank",rel:"noopener noreferrer"},"我的 zram-generator 配置")])],-1))])])]),i("li",null,[s[68]||(s[68]=l("设置 ")),s[69]||(s[69]=i("code",null,"/etc/fstab",-1)),i("ul",null,[i("li",null,[i("s",null,[n(r,{to:"/articles/ramdisk.html"},{default:e(()=>s[57]||(s[57]=[l("挂载 tmpfs")])),_:1})]),s[65]||(s[65]=l(" 后来使用 zram ")),n(o,{text:"2."}),s[66]||(s[66]=l(" 了。 ")),i("ul",null,[s[62]||(s[62]=i("li",null,[l("Archlinux 实际上有 "),i("a",{href:"https://wiki.archlinux.org/title/Tmpfs#Usage",target:"_blank",rel:"noopener noreferrer"},"tmpfs 挂载的默认值"),l("，然而我还是手动搞了，可以调整容量。")],-1)),s[63]||(s[63]=i("li",null,[l("添加 "),i("code",null,"noatime"),l(" 标识，即不带访问时间 ("),i("a",{href:"https://t.me/archlinuxcn_group/2900548",target:"_blank",rel:"noopener noreferrer"},"ref"),l(")")],-1)),i("li",null,[s[59]||(s[59]=l("删除 ")),s[60]||(s[60]=i("code",null,"subvolid",-1)),s[61]||(s[61]=l("，详见 ")),n(r,{to:"/articles/linux/problem.html#timeshift-%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88"},{default:e(()=>s[58]||(s[58]=[l("timeshift 引发的血案")])),_:1})]),s[64]||(s[64]=i("li",null,[l("可以用 "),i("code",null,"sudo sed -i -E 's/(subvolid=[0-9]+,)|(,subvolid=[0-9]+)//g' /etc/fstab"),l(" 命令行删除。")],-1))])]),s[67]||(s[67]=i("li",null,[l("挂载 zram：只需在 "),i("code",null,"zram-generator.conf"),l(" 中新建一个 zram device，然后写 "),i("code",null,"mount-point = /tmp"),l(" 即可。")],-1))])]),s[70]||(s[70]=h(`<li><s><a href="https://wiki.archlinuxcn.org/wiki/Wayland#Electron" target="_blank" rel="noopener noreferrer">wayland 的 electron 支持</a>（据说 wayland 对 electron 不太友好）</s><ul><li><blockquote><p>无所谓，现在是 X11 人</p></blockquote></li></ul></li><li><a href="https://wiki.archlinuxcn.org/wiki/%E5%90%AF%E5%8A%A8%E6%97%B6%E6%89%93%E5%BC%80%E6%95%B0%E5%AD%97%E9%94%81%E5%AE%9A%E9%94%AE#SDDM" target="_blank" rel="noopener noreferrer">激活启动时 numlock</a></li><li>设置 pacman： <ul><li>修改 <code>/etc/pacman.d/mirrorlist</code>，添加镜像</li><li>添加 archlinuxcn：修改 <code>/etc/pacman.conf</code>，添加两行（<a href="https://www.archlinuxcn.org/archlinux-cn-repo-and-mirror/" target="_blank" rel="noopener noreferrer">ref</a>）：<div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">archlinuxcn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = h</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ttps://repo.archlinuxcn.org/$arch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>基础与添加 keyring：<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Sy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> archlinux-keyring</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> archlinuxcn-keyring</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>将某些不常用包和自更新包加入 IgnorePkg，例如 <em>chromium</em> &amp; xmake | <a href="https://www.makeuseof.com/prevent-packages-from-getting-updated-arch-linux/" target="_blank" rel="noopener noreferrer">ref</a></li><li>更改缓存至 ramdisk (<code>CacheDir</code>)</li></ul></li><li>更改 AUR Helper 缓存（参考<a href="https://wiki.archlinuxcn.org/wiki/Makepkg#%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E8%BF%9B%E8%A1%8C%E7%BC%96%E8%AF%91" target="_blank" rel="noopener noreferrer">wiki</a> 注意事项）： <ul><li>yay 更改缓存至 tmpfs: <code>yay --builddir /tmp/yay --save</code></li><li><em>很遗憾，我仍未找到 paru 永久设置 clonedir 的方法。</em> <span class="heimu" title="你知道的太多了">使用 alias 会带来另外的问题 </span> 但是！我们可以将 paru 的 <code>clonedir</code> 也 bind mount 同一个 tmpfs，这样就能够解决问题了。 <ul><li>然而这里还会出现权限问题，无法 (?) 解决，因此我 <a href="https://github.com/lxl66566/dotfile/blob/3c97b7cbad449d4a70100e132b775365951cf250/etc/fstab#L15" target="_blank" rel="noopener noreferrer">mount 到了另一个新的 tmpfs</a>。（不 bind 了）</li></ul></li><li><a href="https://wiki.archlinux.org/title/makepkg#Building_from_files_in_memory" target="_blank" rel="noopener noreferrer">更改 makepkg 编译位置至 tmpfs</a></li></ul></li><li>设置 grub（内核参数）<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/default/grub</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># after edit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grub-mkconfig</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /boot/grub/grub.cfg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>改等待时间</li><li><a href="https://wiki.archlinuxcn.org/wiki/GRUB/%E6%8A%80%E5%B7%A7%E5%92%8C%E7%AA%8D%E9%97%A8#%E5%A4%9A%E4%B8%AA%E5%90%AF%E5%8A%A8%E6%9D%A1%E7%9B%AE" target="_blank" rel="noopener noreferrer">多内核的设置</a></li></ul></li><li>修改 faillock attempt times<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># sudo -e /etc/security/faillock.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deny</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><a href="https://wiki.archlinux.org/title/Xsettingsd" target="_blank" rel="noopener noreferrer">安装 <code>xsettingsd</code></a> 并简单配置</li><li>sysctl 相关。 <ul><li><a href="https://wiki.archlinux.org/title/sysctl#Enable_TCP_Fast_Open" target="_blank" rel="noopener noreferrer">Tcp Fast Open</a></li><li><a href="https://wiki.archlinux.org/title/sysctl#Enable_BBR" target="_blank" rel="noopener noreferrer">bbr</a></li><li><a href="https://wiki.archlinuxcn.org/wiki/Sysctl#%E5%A2%9E%E5%8A%A0%E6%8E%A5%E6%94%B6%E9%98%9F%E5%88%97%E7%9A%84%E5%A4%A7%E5%B0%8F" target="_blank" rel="noopener noreferrer">接收队列</a></li></ul></li><li>system.conf <ul><li><a href="https://unix.stackexchange.com/a/297318" target="_blank" rel="noopener noreferrer">调整 DefaultTimeoutStopSec</a>，使关机时不会被某些应用阻断长达 90s</li></ul></li><li>sysrq 相关。 <ul><li><a href="https://wiki.archlinuxcn.org/wiki/%E5%BF%AB%E6%8D%B7%E9%94%AE#%E5%86%85%E6%A0%B8" target="_blank" rel="noopener noreferrer">开启 + 提早开启 sysrq</a></li><li><a href="https://www.kernel.org/doc/html/v5.17/translations/zh_CN/admin-guide/sysrq.html" target="_blank" rel="noopener noreferrer">开启 sysrq 全部功能</a></li></ul></li>`,10))]),s[113]||(s[113]=h('<h3 id="输入法" tabindex="-1"><a class="header-anchor" href="#输入法"><span>输入法</span></a></h3><p>我使用 fcitx5，输入要求为 <em>英语，双拼，日语</em>。可以在遇到的问题里找到一些输入法的设置。</p><ol><li>双拼关闭快速输入，默认为<code>；</code>。</li><li>中文 <em>自定义词组</em>。 <ul><li><code>w</code> -&gt; <code>我</code></li><li><code>l</code> -&gt; <code>了</code></li></ul></li><li><a href="https://wiki.archlinuxcn.org/wiki/Fcitx5#%E8%AF%8D%E5%BA%93" target="_blank" rel="noopener noreferrer">添加自定义词库</a></li></ol><h3 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h3>',4)),i("p",null,[s[73]||(s[73]=l("目前我使用 ")),n(r,{to:"/articles/proxy/proxy_software.html#daed"},{default:e(()=>s[71]||(s[71]=[l("daed")])),_:1}),s[74]||(s[74]=l(" / ")),n(r,{to:"/articles/proxy/proxy_software.html#dae"},{default:e(()=>s[72]||(s[72]=[l("dae")])),_:1}),s[75]||(s[75]=l(" 作为 linux 下的代理软件。"))]),s[114]||(s[114]=i("h4",{id:"使用-windows-代理",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#使用-windows-代理"},[i("span",null,"使用 windows 代理")])],-1)),s[115]||(s[115]=i("p",null,[l("archwsl 可以直接使用 windows 的代理。抄"),i("a",{href:"https://github.com/microsoft/WSL/issues/10753#issuecomment-1814839310",target:"_blank",rel:"noopener noreferrer"},"这里"),l("的 "),i("code",null,".wslconfig"),l(" 即可。")],-1)),i("details",y,[s[80]||(s[80]=i("summary",null,"旧版解法，已废弃",-1)),n(p,{id:"490",data:[{id:"bash"},{id:"fish"}]},{title0:e(({value:a,isActive:t})=>s[76]||(s[76]=[l("bash")])),title1:e(({value:a,isActive:t})=>s[77]||(s[77]=[l("fish")])),tab0:e(({value:a,isActive:t})=>s[78]||(s[78]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"your_port"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"****")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"host_ip"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"$("),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"cat"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /etc/resolv.conf"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," |"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"grep"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "nameserver"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," |"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"cut"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -f"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -d"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' " "'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," ALL_PROXY"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"http://'),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$host_ip"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},":"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$your_port"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"')])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:t})=>s[79]||(s[79]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"set"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," host_ip"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," $("),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"cat"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /etc/resolv.conf"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," |"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"grep"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "nameserver"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," |"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"cut"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -f"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -d"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' " "'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"set"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -gx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' ALL_PROXY="http://'),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$host_ip"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},':<your_port>"'),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"  # fill your port")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),_:1}),s[81]||(s[81]=i("p",null,[l("后来写了 "),i("a",{href:"https://github.com/lxl66566/config/blob/archwsl/.config/fish/functions/proxy_con.fish",target:"_blank",rel:"noopener noreferrer"},"fish 脚本"),l("，自用方便。")],-1))]),s[116]||(s[116]=h('<p>代理软件需要开启局域网连接。测试时不要使用 <code>ping</code> 指令（其不走代理），用 <code>curl</code>。</p><h3 id="文件系统设置" tabindex="-1"><a class="header-anchor" href="#文件系统设置"><span>文件系统设置</span></a></h3><h4 id="创建子卷至现有目录" tabindex="-1"><a class="header-anchor" href="#创建子卷至现有目录"><span>创建子卷至现有目录</span></a></h4><p>如果按照上文推荐教程安装，那么默认只会创建两个 btrfs 子卷（<code>@</code>, <code>@home</code>）。但是 btrfs 的最佳实践其实是将易变化文件（日志，缓存，数据库，容器）全部放到单独子卷里（排出根子卷），以避免打快照时将其全部加入，增大空间消耗。</p><p>例如，<code>/var/cache</code>, <code>/var/tmp</code>, <code>/var/log</code>, <code>~/.cache</code> 等位置都应该建立单独子卷。</p><p>如果在某位置新建子卷，该位置存在的文件将被覆盖。那么在需要保存文件前提下，如何新建子卷呢？答案是手动处理。(<a href="https://dev.to/klo2k/convert-directory-into-btrfs-subvolume-p98" target="_blank" rel="noopener noreferrer">src</a>)</p>',6)),n(d,{id:"520",data:[{id:"fish"},{id:"bash"}]},{title0:e(({value:a,isActive:t})=>s[82]||(s[82]=[l("fish")])),title1:e(({value:a,isActive:t})=>s[83]||(s[83]=[l("bash")])),tab0:e(({value:a,isActive:t})=>s[84]||(s[84]=[i("p",null,"可能要注意一下，路径不能带空格。",-1),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"function"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," make_new_subvolume")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"  set"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," dir"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," $argv")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"  sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," mv"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," $dir"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"{,.bak}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"  sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," btrfs"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," subvolume"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," create"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," $dir")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"  sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," cp"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --archive"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --one-file-system"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --reflink=always"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," $dir"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"{.bak/"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E5C07B"}},"*"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},",}")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"  sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," rm"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -r"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --one-file-system"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," $dir"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'.bak'")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"end")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# Usage")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"make_new_subvolume"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /var/log")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:t})=>s[85]||(s[85]=[i("p",null,"参考 src。",-1)])),_:1}),s[117]||(s[117]=i("h3",{id:"kde-及其配套设施",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#kde-及其配套设施"},[i("span",null,"kde 及其配套设施")])],-1)),s[118]||(s[118]=i("p",null,"我使用 kde 作为我的桌面（kde 爆杀 gnome!）。",-1)),i("p",null,[s[87]||(s[87]=l("我安装的 kde 系列软件详见")),n(r,{to:"/articles/linux/package.html#kde-apps"},{default:e(()=>s[86]||(s[86]=[l("包管理与使用推荐")])),_:1}),s[88]||(s[88]=l("。"))]),s[119]||(s[119]=h('<ol><li>enable flameshot：flameshot 默认无法使用 print 快捷键截图。需要在 <em>系统设置 - 添加快捷键 - 火焰截图</em>，然后手动设置快捷键。</li><li><em>输入设备</em>，将键盘的按键延迟改短。</li><li><em>外观</em>，黑色主题</li><li><em>开关机 - 桌面会话</em>，选择启动为空会话</li><li><em>快捷键</em>，添加应用程序 <em>konsole</em>，设置唤醒快捷键</li><li>关闭通知声音</li><li>输入法，语言设置，缩放率等基础的就不要我讲了。kde(wayland?) 对分数缩放做的不算太差，只是有的图标有点糊而已。</li><li>自定义状态栏。我真的爱死状态栏显示内存，磁盘 IO，CPU 占用的小组件了！<span class="heimu" title="你知道的太多了">CPU 占用其实不需要看，<s>因为可以通过风扇声判断</s></span> 还有时间格式，无用图标的自定义。</li><li><em>工作区行为 - 锁屏</em>，改锁屏时间。</li><li><a href="https://wiki.archlinuxcn.org/wiki/%E5%90%AF%E5%8A%A8%E6%97%B6%E6%89%93%E5%BC%80%E6%95%B0%E5%AD%97%E9%94%81%E5%AE%9A%E9%94%AE#KDE_Plasma_%E7%94%A8%E6%88%B7" target="_blank" rel="noopener noreferrer">设置 numlock 行为</a></li><li><em>窗口管理 - 窗口行为</em> 设置 <em>焦点跟随鼠标</em></li><li>配置窗口管理器，在窗口装饰中选择主题，调出 <code>置顶</code> 按钮。</li><li><a href="https://wiki.archlinuxcn.org/wiki/%E8%93%9D%E7%89%99" target="_blank" rel="noopener noreferrer">配置蓝牙</a>，安装 <code>bluedevil</code></li><li>关闭文件索引（臭名昭著的 baloo）：<code>balooctl disable</code>。其不仅可能导致崩溃(<a href="https://zhuanlan.zhihu.com/p/493375508" target="_blank" rel="noopener noreferrer">ref</a>)，还可能造成性能损失。</li><li>更改动画速度，改得更快一点。</li><li>设置 krunner 让其启动更快。<a href="https://bbs.archlinux.org/viewtopic.php?id=279792" target="_blank" rel="noopener noreferrer">ref</a></li></ol><h2 id="快照" tabindex="-1"><a class="header-anchor" href="#快照"><span>快照</span></a></h2><p>快照本质上就是一个 cp 而已，只不过在 btrfs 上吃了 CoW 的福利，空间占用很小罢了。</p>',3)),i("p",null,[s[90]||(s[90]=l("因为")),n(r,{to:"/articles/linux/problem.html#timeshift-%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88"},{default:e(()=>s[89]||(s[89]=[l("被 timeshift 坑过")])),_:1}),s[91]||(s[91]=l("，因此换用 snapper + btrfs-assistant。"))]),s[120]||(s[120]=h('<blockquote><p>当然还有 <a href="https://github.com/digint/btrbk" target="_blank" rel="noopener noreferrer">btrbk</a> 可以选择，不过其主业 (backup tool) 并非快照，因此没有尝试。</p></blockquote><p>快照一般不备份 <code>/boot</code>，因此若回滚了旧的内核，而 boot 仍启动新的内核，则无法正常启动。<a href="https://wiki.archlinux.org/title/System_backup#Snapshots_and_/boot_partition" target="_blank" rel="noopener noreferrer">wiki 里有解法</a>，可以在更新内核时备份 <code>/boot</code> 以便回滚时能够手动替换 <code>/boot</code>。</p><h3 id="snapper" tabindex="-1"><a class="header-anchor" href="#snapper"><span>snapper</span></a></h3><p><code>btrfs-assistant</code> 为 snapper 提供了 GUI 界面，建议安装。</p><p><code>snap-pac</code> 会在<strong>每次 pacman 安装 &amp; 删除时</strong>打一次快照（<em>before and after pacman transactions</em>），这样可能会<a href="https://luoxu.archlinuxcn.org/#g=1031857103&amp;q=snap-pac" target="_blank" rel="noopener noreferrer">比较占空间</a>。我对快照没有那么高要求，因此我不用。</p><h3 id="timeshift" tabindex="-1"><a class="header-anchor" href="#timeshift"><span>timeshift</span></a></h3><p>timeshift 要求子卷名字必须以 <code>@</code> 开头。</p><p>timeshift 的 cron 定时备份默认是残废的。</p>',8)),i("p",null,[s[93]||(s[93]=l("甚至连卸载 timeshift 都是一个")),n(r,{to:"/articles/linux/problem.html#timeshift-%E5%88%A0%E9%99%A4%E5%BF%AB%E7%85%A7"},{default:e(()=>s[92]||(s[92]=[l("大坑")])),_:1}),s[94]||(s[94]=l("。"))]),s[121]||(s[121]=h('<h2 id="驱动" tabindex="-1"><a class="header-anchor" href="#驱动"><span>驱动</span></a></h2><h3 id="显卡驱动" tabindex="-1"><a class="header-anchor" href="#显卡驱动"><span>显卡驱动</span></a></h3><p>安装初期只看了一点<a href="https://arch.icekylin.online/guide/rookie/graphic-driver.html" target="_blank" rel="noopener noreferrer">第三方教程</a>。后面发现也要看 <a href="https://wiki.archlinux.org/title/NVIDIA" target="_blank" rel="noopener noreferrer">wiki</a>。</p><p>GPU：NVIDIA RTX 3050 Laptop + Intel 核显，装驱动<a href="#archlinux">抄教程</a>即可（但是不要抄后面的 <em>双显卡</em>）。检测驱动是否成功安装，可以执行 <code>nvidia-smi</code>。</p><p>以下设置可能并没有什么卵用，但是写在这里记录以下我的摸索过程。</p><ol><li><strong>不要安装</strong> <code>xf86-video-intel</code>，DRI 3 直接炸，DRI 2 在 election 下会花屏。</li><li><a href="https://wiki.archlinuxcn.org/wiki/NVIDIA#DRM_%E5%86%85%E6%A0%B8%E7%BA%A7%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%BC%8F%E8%AE%BE%E7%BD%AE" target="_blank" rel="noopener noreferrer">DRM 内核级显示模式设置</a></li></ol><h4 id="双显卡" tabindex="-1"><a class="header-anchor" href="#双显卡"><span>双显卡</span></a></h4><p>关于双显卡，混合方案用 <em>prime</em>，不要用 <em>optimus-manager</em>（具体去落絮搜）。想要用 N 卡运行的软件需要 <code>prime-run</code>，实测是需要的。至于怎么测，打开 <code>nvtop</code> 然后开游戏，看占用。</p><p>目前我还没找到能够硬件加速 firefox 的方法。<code>prime-run</code> 测的结果是不行。</p><ol><li>设置<a href="https://wiki.archlinuxcn.org/wiki/PRIME#NVIDIA" target="_blank" rel="noopener noreferrer">在不使用的时候完全关闭 GPU</a>。</li></ol><h3 id="音频驱动" tabindex="-1"><a class="header-anchor" href="#音频驱动"><span>音频驱动</span></a></h3><p>默认是 <code>pulseaudio</code>，我尝试更换为 <code>pipewire</code>。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lib32-libpipewire</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libpipewire</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pipewire-alsa</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pipewire-pulse</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pipewire-audio</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pipewire-jack</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wireplumber</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="更换内核" tabindex="-1"><a class="header-anchor" href="#更换内核"><span>更换内核</span></a></h2>',14)),i("p",null,[s[96]||(s[96]=l("更换内核的目的一般是需要一些特性，例如 linux-lily 的 tty 中文字符支持。我目前使用 ")),s[97]||(s[97]=i("code",null,"linux-lily",-1)),s[98]||(s[98]=l("，因为其中文支持、waydroid 支持和较低的更新频率。")),n(u,null,{default:e(()=>s[95]||(s[95]=[l("我曾今用过 "),i("code",null,"linux",-1),l(", lts, zen 和 lily，只有 lily 的更新频率低。那么为什么要更新频率低的呢，因为天天下载还要编译模块烦死了！")])),_:1})]),s[122]||(s[122]=i("p",null,"linux 下内核基本无需手动编译，毕竟有 PKGBUILD 脚本，甚至好多内核有已编译版本，下载就可用。",-1)),n(d,{id:"721",data:[{id:"lily"},{id:"zen"}]},{title0:e(({value:a,isActive:t})=>s[99]||(s[99]=[l("lily")])),title1:e(({value:a,isActive:t})=>s[100]||(s[100]=[l("zen")])),tab0:e(({value:a,isActive:t})=>[i("p",null,[s[101]||(s[101]=i("code",null,"linux-lily",-1)),s[102]||(s[102]=l(" 需要确保添加了 ")),n(o,{text:"archlinuxcn"}),s[103]||(s[103]=l(" 源。否则可能要从 aur 编译。"))]),s[104]||(s[104]=i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," pacman"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -S"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," linux-lily"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," linux-lily-headers")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1))]),tab1:e(({value:a,isActive:t})=>s[105]||(s[105]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," pacman"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -S"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," linux-zen"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," linux-zen-headers")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),_:1}),s[123]||(s[123]=h('<p><strong>下载完内核后记得 <code>sudo grub-mkconfig -o /boot/grub/grub.cfg</code> 生成启动选项</strong>。</p><p>至于 initramfs 和 dkms 模块都会通过 pacman hook 自动搞定，不需要人为介入。</p><p>更换为 <code>linux</code> 以外的内核还请注意：</p><ol><li>参考<a href="#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE">系统设置</a> <code>8.</code> 的 grub 设置。</li><li>需要更换 NVIDIA 驱动至 dkms（如果有的话）：<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nvidia-dkms</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="混成器" tabindex="-1"><a class="header-anchor" href="#混成器"><span>混成器</span></a></h2>',5)),i("p",null,[s[107]||(s[107]=l("我目前正在使用 X11。具体原因请移步 ")),n(r,{to:"/articles/linux/basic.html#%E6%B7%B7%E6%88%90%E5%99%A8"},{default:e(()=>s[106]||(s[106]=[l("basic")])),_:1}),s[108]||(s[108]=l("。"))])])}const v=g(A,[["render",f],["__file","install_and_config.html.vue"]]),E=JSON.parse('{"path":"/articles/linux/install_and_config.html","title":"安装与配置（Arch 篇）","lang":"zh-CN","frontmatter":{"date":"2023-10-28T00:00:00.000Z","icon":"archway","category":["教程"],"tag":["Linux","桌面端"],"description":"安装与配置（Arch 篇） 安装 配置 这里是 的 linux 板块内容。设置项均为 archlinux，且排名不分先后。 系统设置 基础 alias e：default $EDITOR l： gp: git pull gfixup: docker: podman makepkg： bwrap。 pack: 偷来的 gpt: 简单跑一个本地模型(src...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装与配置（Arch 篇）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-28T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-09T14:30:10.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://absx.pages.dev/articles/linux/install_and_config.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"安装与配置（Arch 篇）"}],["meta",{"property":"og:description","content":"安装与配置（Arch 篇） 安装 配置 这里是 的 linux 板块内容。设置项均为 archlinux，且排名不分先后。 系统设置 基础 alias e：default $EDITOR l： gp: git pull gfixup: docker: podman makepkg： bwrap。 pack: 偷来的 gpt: 简单跑一个本地模型(src..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-09T14:30:10.000Z"}],["meta",{"property":"article:tag","content":"桌面端"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2023-10-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-09T14:30:10.000Z"}]]},"git":{"createdTime":1698495742000,"updatedTime":1749479410000,"contributors":[{"name":"lxl66566","username":"lxl66566","email":"18259734087@163.com","commits":38,"url":"https://github.com/lxl66566"}]},"readingTime":{"minutes":11.37,"words":3412},"filePathRelative":"articles/linux/install_and_config.md","localizedDate":"2023年10月28日","excerpt":"\\n","autoDesc":true}');export{v as comp,E as data};
