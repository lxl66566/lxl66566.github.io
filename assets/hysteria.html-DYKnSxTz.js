import{_ as h,e as k,g as i,f as p,h as e,i as l,j as a,r as d,o as u}from"./app-CTkCASPc.js";const y={},g={class:"hint-container details"};function m(B,s){const r=d("RouteLink"),o=d("Tabs");return u(),k("div",null,[s[40]||(s[40]=i("h1",{id:"hysteria",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#hysteria"},[i("span",null,"Hysteria")])],-1)),s[41]||(s[41]=i("p",null,[i("a",{href:"https://v2.hysteria.network/zh/",target:"_blank",rel:"noopener noreferrer"},"Hysteria"),e(" 是一个 Go 写的代理协议/工具，基于 QUIC/HTTP 3。")],-1)),s[42]||(s[42]=i("p",null,"优势：",-1)),i("ul",null,[s[7]||(s[7]=i("li",null,[e("这玩意文档写的"),i("strong",null,"很好"),e("，自己写配置也非常简单。")],-1)),i("li",null,[s[3]||(s[3]=e("自带了网页伪装、自动 ")),s[4]||(s[4]=i("code",null,"acme.sh",-1)),s[5]||(s[5]=e(" 签证书等功能，")),i("s",null,[s[1]||(s[1]=e("即使不用代理也能当成")),l(r,{to:"/articles/reverse_proxy.html"},{default:a(()=>s[0]||(s[0]=[e("反代")])),_:1}),s[2]||(s[2]=e("来用"))]),s[6]||(s[6]=e("。"))]),s[8]||(s[8]=i("li",null,"QUIC 豁免机制方便利用。",-1))]),s[43]||(s[43]=i("p",null,"劣势：",-1)),s[44]||(s[44]=i("ul",null,[i("li",null,[e("其 Brutal 拥塞控制算法"),i("a",{href:"https://v2.hysteria.network/zh/docs/misc/Hysteria-Brutal/#q-hysteria_1",target:"_blank",rel:"noopener noreferrer"},"非常凶猛霸道"),e("，容易被 IDC 警告，被本地网络 QOS，因为确实太像被攻击了。"),i("a",{href:"https://www.youtube.com/watch?v=kTYfclAzy38",target:"_blank",rel:"noopener noreferrer"},"src"),i("ul",null,[i("li",null,"因此我使用 bbr 而不是 Brutal。")])]),i("li",null,"QUIC 和 UDP 流在中国不稳定，容易被丢包。")],-1)),s[45]||(s[45]=i("h2",{id:"quic-豁免",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#quic-豁免"},[i("span",null,"QUIC 豁免")])],-1)),i("p",null,[s[10]||(s[10]=e("2025 年的一篇 ")),l(r,{to:"/articles/proxy/#external"},{default:a(()=>s[9]||(s[9]=[e("《揭示并绕过中国防火长城基于 SNI 的 QUIC 封锁机制》")])),_:1}),s[11]||(s[11]=e(" 大幅提高了 hysteria2 的地位：QUIC 流量拥有豁免机制，在一众代理协议中脱颖而出。"))]),s[46]||(s[46]=p(`<p>最容易利用的豁免机制是 <strong>源端口 &lt;= 目标端口</strong>。只需要使用 nftables 或其他流量转发机制，将 VPS 的高位端口 inbound 转发到 hysteria2 的真实低位端口，即可实现双向 QUIC 流量均被豁免。由于代理软件通常也使用高位端口，因此 VPS 上的端口号需要设成极端的高（我使用 65533）；而 hysteria2 的低位端口最好也要设得更低。</p><div class="language-nftables line-numbers-mode" data-highlighter="shiki" data-ext="nftables" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>table inet nat {</span></span>
<span class="line"><span>  chain prerouting {</span></span>
<span class="line"><span>    type nat hook prerouting priority -100; policy accept;</span></span>
<span class="line"><span>    # 将外部流入的流量从 65533 端口重定向到 5497 端口</span></span>
<span class="line"><span>    tcp dport 65533 redirect to :5497</span></span>
<span class="line"><span>    udp dport 65533 redirect to :5497</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="服务器配置" tabindex="-1"><a class="header-anchor" href="#服务器配置"><span>服务器配置</span></a></h2><p>安装 hysteria2 后，随便创一个 json 或 yaml，写入配置。具体怎么写配置建议看文档，讲的挺详细的。</p><p>这里给出我的配置，仅供参考；使用之前签过的证书，我的博客做伪装（）。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;auth&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;password&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xxx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;password&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;ignoreClientBandwidth&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;listen&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;:5497&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;masquerade&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;proxy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;rewriteHost&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;url&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://absx.pages.dev&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;proxy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;quic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;maxIncomingStreams&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;tls&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;cert&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/var/cert/xxx.crt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">&quot;key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/var/cert/xxx.key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),i("p",null,[s[13]||(s[13]=e("然后用 ")),s[14]||(s[14]=i("code",null,"hysteria server --config your-config.json",-1)),s[15]||(s[15]=e(" 就能跑了。当然，你还需要保活。如果你的包管理有帮忙装 ")),s[16]||(s[16]=i("code",null,"hysteria-server",-1)),s[17]||(s[17]=e(" 服务就用包管理的来跑，没有的话，自己写 systemd service 或者用 ")),l(r,{to:"/articles/linux/package.html#multiplexer"},{default:a(()=>s[12]||(s[12]=[e("multiplexer")])),_:1}),s[18]||(s[18]=e(" 保活都行。"))]),s[47]||(s[47]=p(`<p>我在启动服务时遇到了一些问题。</p><ol><li>即使在 root 下运行，仍然提示权限不足无法读取证书文件。 <ul><li>尝试编辑 <code>.service</code> 文件，删除 <code>group</code>，将 <code>User</code> 改为 <code>root</code>，无效。</li><li>尝试把证书移到 <code>/etc/hysteria</code> 下。</li><li>后续又折腾一阵，发现需要 <code>chmod +rwx 证书文件</code> 才行。（只 <code>+x</code> 是不行的）</li></ul></li><li>在 debian 上这样启动服务没啥问题，然而在 archlinux 上就不行了。 <ul><li>AUR 的 <code>hysteria-bin</code> 包安装的证书在 <code>/usr/lib/systemd/system</code>，名字是 <code>xxx@.service</code>，根据 <a href="https://wiki.archlinux.org/title/systemd#Using_units" target="_blank" rel="noopener noreferrer">wiki</a> 所述是模板文件，需要传参。直接 <code>systemctl start hysteria-server</code> 是不行的，只会提示 <em>unit not found</em>。因此需要自己读 service，理解那个传参的意思。</li></ul></li></ol><p>然后就是客户端了。</p><h2 id="客户端使用" tabindex="-1"><a class="header-anchor" href="#客户端使用"><span>客户端使用</span></a></h2><p>虽说可以按照官方教程启动一个客户端服务，但是一个黑窗口一直最小化运行比较丑。</p><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h3><details class="hint-container details"><summary>archived</summary><p>V2rayN 以内核插件形式支持 hysteria。</p><ol><li>从 Release 下载 <code>.exe</code> 内核，放入 V2rayN 文件夹的 <code>bin/hysteria</code> 下。注意可能需要重命名为 <code>hysteria.exe</code>。</li><li>打开 V2rayN，<em>添加自定义配置服务器</em>，<em>地址</em> 选择客户端的配置文件，<em>Core 类型</em> 选择 <code>hysteria</code>。</li></ol><p>然后就可以愉快地使用了。我的客户端配置文件参考：</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;url&gt;:&lt;port&gt;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">auth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">**********</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">socks5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">127.0.0.1:1080</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">127.0.0.1:8000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">obfs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">salamander</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  salamander</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">***********</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>ps. V2rayN v6.23 亲测可用；而 v6.30 虽然加入了官方 hysteria2 支持，但在 sing-box 内核相同配置下测试不可用。</p></blockquote></details><p>V2rayN v6.30 后原生支持 hysteria2 协议。虽然在初期有些问题，但是到了 v7.x 以后就没啥问题了。</p><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h3>`,9)),i("p",null,[s[20]||(s[20]=e("我在 linux 上使用 ")),l(r,{to:"/articles/proxy/proxy_software.html#daed"},{default:a(()=>s[19]||(s[19]=[e("daed")])),_:1}),s[21]||(s[21]=e("，")),s[22]||(s[22]=i("s",null,[e("然而其"),i("a",{href:"https://github.com/daeuniverse/dae/issues/48",target:"_blank",rel:"noopener noreferrer"},"尚未支持且不打算支持 hysteria 协议"),e("。")],-1))]),i("details",g,[s[35]||(s[35]=i("summary",null,"后来还是支持了哈哈哈，下文作废",-1)),s[36]||(s[36]=i("p",null,"不过我们可以本地开一个 hysteria client，通过 http 或 socks5 再接入 daed。",-1)),i("ol",null,[i("li",null,[s[27]||(s[27]=e("下载")),l(o,{id:"166",data:[{id:"AUR"},{id:"使用脚本"}]},{title0:a(({value:t,isActive:n})=>s[23]||(s[23]=[e("AUR")])),title1:a(({value:t,isActive:n})=>s[24]||(s[24]=[e("使用脚本")])),tab0:a(({value:t,isActive:n})=>s[25]||(s[25]=[i("p",null,[e("archlinux 可以从 AUR 下载："),i("code",null,"paru -S hysteria-bin")],-1)])),tab1:a(({value:t,isActive:n})=>s[26]||(s[26]=[i("p",null,[i("a",{href:"https://v2.hysteria.network/zh/docs/getting-started/Installation/#linux",target:"_blank",rel:"noopener noreferrer"},"见文档")],-1)])),_:1})]),s[33]||(s[33]=i("li",null,"写好配置文件。",-1)),i("li",null,[s[32]||(s[32]=e("启动 client 服务。")),l(o,{id:"188",data:[{id:"AUR"},{id:"使用脚本"}]},{title0:a(({value:t,isActive:n})=>s[28]||(s[28]=[e("AUR")])),title1:a(({value:t,isActive:n})=>s[29]||(s[29]=[e("使用脚本")])),tab0:a(({value:t,isActive:n})=>s[30]||(s[30]=[i("p",null,[e("从 AUR 安装 hysteria 是服务端和客户端一体的，因此会安装两个"),i("strong",null,"服务模板"),e("，使用时需要传入字符串指定配置文件。例如，我需要使用 "),i("code",null,"/etc/hysteria/server.yaml"),e(" 则需要 "),i("code",null,"systemctl enable --now hysteria-server@server"),e("。要用 client 同理。")],-1)])),tab1:a(({value:t,isActive:n})=>s[31]||(s[31]=[i("p",null,[i("code",null,"systemctl enable --now hysteria-server")],-1)])),_:1})]),s[34]||(s[34]=i("li",null,"在 daed 中手动添加 socks5 节点，使用配置文件端口。",-1))])]),s[48]||(s[48]=p('<h3 id="android" tabindex="-1"><a class="header-anchor" href="#android"><span>Android</span></a></h3><details class="hint-container details"><summary>archived</summary><p>NekoBox (v1.2.9) 号称支持，<s>实测不可用</s>。windows 上测了能用的配置，放在 NekoBox 上用不了。</p><p>后来我换了个 japan 的 vps，试了下，居然又能用了？？服务端版本相同，配置也没变，就改个服务器地址，我不好说。</p><p>测了一下其他软件，SagerNet 安装了<a href="https://github.com/SagerNet/SagerNet/releases/tag/hysteria-plugin-1.3.5" target="_blank" rel="noopener noreferrer">插件</a>，然而 <em>专有设备供应商篡改了你的安卓系统，使该插件无法使用</em>，我又不好说了。</p></details>',2)),i("p",null,[s[38]||(s[38]=e("2025 年了，")),l(r,{to:"/articles/proxy/proxy_software.html#sing-box-%E7%B3%BB"},{default:a(()=>s[37]||(s[37]=[e("sing-box 系")])),_:1}),s[39]||(s[39]=e("的全都原生支持 hysteria2 了。"))]),s[49]||(s[49]=p('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li>这是我第一次直接写配置文件部署一个协议，以前都是一键脚本。</li><li>任何协议都吃代理软件支持，hysteria 的适配在一众代理内算比较出众的。2024-2025 年 hysteria2 的可用性比起两年前上升了很多。</li><li>基于 QUIC 的代理协议挺多，hysteria 据说打不过 TUIC，但是现在 TUIC 跑路了（乐）。</li></ul><h2 id="遇到的问题" tabindex="-1"><a class="header-anchor" href="#遇到的问题"><span>遇到的问题</span></a></h2><h3 id="too-many-open-streams" tabindex="-1"><a class="header-anchor" href="#too-many-open-streams"><span>too many open streams</span></a></h3><p>此事在 <a href="https://github.com/apernet/hysteria/issues/1073" target="_blank" rel="noopener noreferrer">issue</a> 中均有记载。由于 sing-box 会开大量端口进行通信，很容易超过 hysteria2 默认的 <code>maxIncomingStreams: 1024</code> 限制，因此需要在服务端将此值调大。</p><h3 id="no-route-to-host" tabindex="-1"><a class="header-anchor" href="#no-route-to-host"><span>no route to host</span></a></h3><p>前一秒还正常使用的 hysteria 连接，立刻变得无法使用了。</p><p>NekoBox 报错：<code>...cloudflare.com INTERNAL_ERROR(local):read udp ...: read: no route to host.</code>，客户端报 <code>FATAL failed to initialize client {&quot;error&quot;: &quot;connect error: timeout: no recent networkactivity&quot;}</code>。</p><p>重启服务器就行了。感觉可能是网络波动吧。</p>',9))])}const v=h(y,[["render",m],["__file","hysteria.html.vue"]]),b=JSON.parse('{"path":"/articles/proxy/hysteria.html","title":"Hysteria","lang":"zh-CN","frontmatter":{"date":"2023-11-17T00:00:00.000Z","icon":"house-tsunami","category":["教程"],"tag":["网络","协议"],"description":"Hysteria Hysteria 是一个 Go 写的代理协议/工具，基于 QUIC/HTTP 3。 优势： 这玩意文档写的很好，自己写配置也非常简单。 自带了网页伪装、自动 acme.sh 签证书等功能，。 QUIC 豁免机制方便利用。 劣势： 其 Brutal 拥塞控制算法非常凶猛霸道，容易被 IDC 警告，被本地网络 QOS，因为确实太像被攻击了...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hysteria\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-17T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-08T15:08:42.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://absx.pages.dev/articles/proxy/hysteria.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"Hysteria"}],["meta",{"property":"og:description","content":"Hysteria Hysteria 是一个 Go 写的代理协议/工具，基于 QUIC/HTTP 3。 优势： 这玩意文档写的很好，自己写配置也非常简单。 自带了网页伪装、自动 acme.sh 签证书等功能，。 QUIC 豁免机制方便利用。 劣势： 其 Brutal 拥塞控制算法非常凶猛霸道，容易被 IDC 警告，被本地网络 QOS，因为确实太像被攻击了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-08T15:08:42.000Z"}],["meta",{"property":"article:tag","content":"协议"}],["meta",{"property":"article:tag","content":"网络"}],["meta",{"property":"article:published_time","content":"2023-11-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-08T15:08:42.000Z"}]]},"git":{"createdTime":1700886418000,"updatedTime":1757344122000,"contributors":[{"name":"lxl66566","username":"lxl66566","email":"18259734087@163.com","commits":7,"url":"https://github.com/lxl66566"}]},"readingTime":{"minutes":5.13,"words":1540},"filePathRelative":"articles/proxy/hysteria.md","localizedDate":"2023年11月17日","excerpt":"\\n","autoDesc":true}');export{v as comp,b as data};
