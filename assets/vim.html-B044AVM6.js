import{_ as e,e as s,f as a,o as n}from"./app-DF4aQ9uM.js";const l={};function t(r,i){return n(),s("div",null,i[0]||(i[0]=[a(`<h1 id="vim" tabindex="-1"><a class="header-anchor" href="#vim"><span>vim</span></a></h1><p>我曾在约一年前强迫自己使用 vim 作为代码编辑器，并进行相关学习。但是 vscode vim 给了我极其惨痛的教训：混用 Ctrl + Z 和 u(undo) 打乱了我的代码，我只能从 git 中恢复，浪费了数小时的时间。因此弃用。</p><p>此次重新启用，也大概是我的心血来潮吧。不过现在用了好久，确实没有遇到类似的问题了，可能是因为我已经不用 u 了吧。</p><p>其他同等级编辑器还有 emacs, helix 等，等有缘人去尝试吧。</p><h2 id="for-beginner" tabindex="-1"><a class="header-anchor" href="#for-beginner"><span>for beginner</span></a></h2><p>如果您没有学习 vim 并碰到需要使用 vim 的场景，这两条规则会很有帮助：</p><ol><li><code>a</code> or <code>i</code> 开启编辑。</li><li><code>&lt;ESC&gt;:wq</code> 保存并退出。</li></ol><h2 id="设置-vscode" tabindex="-1"><a class="header-anchor" href="#设置-vscode"><span>设置(vscode)</span></a></h2><p><a href="https://github.com/lxl66566/my-key-data/blob/main/config/vscode/settings.json" target="_blank" rel="noopener noreferrer">此处</a>是我对 (vim for) vscode 的一些设置。</p><h2 id="设置-懒狗型" tabindex="-1"><a class="header-anchor" href="#设置-懒狗型"><span>设置(懒狗型)</span></a></h2><p>由于现在 vscode 是我的主要编辑器，因此无需折腾，配置简单的 vim 系编辑器也是不错的选择。</p><ul><li><a href="https://www.lunarvim.org/zh-Hans/" target="_blank" rel="noopener noreferrer">lunarvim</a></li><li><a href="https://astronvim.com/" target="_blank" rel="noopener noreferrer">AstroNvim</a></li><li><a href="https://nvchad.com/" target="_blank" rel="noopener noreferrer">nvchad</a></li></ul><h2 id="设置-neovim" tabindex="-1"><a class="header-anchor" href="#设置-neovim"><span>设置(neovim)</span></a></h2><p>在折腾了大段配置后，我决定使用 lazy.vim 代替 packer 进行插件管理。于是懒狗的我直接使用 <a href="https://www.lazyvim.org/" target="_blank" rel="noopener noreferrer">lazyvim</a>，该仓库使用 lazy.vim 并预设了许多插件和 keybindings，非常方便。因此我就在此基础上再进行自定义。</p><p><a href="https://www.reddit.com/r/neovim/comments/13pzwq6/comment/jlcbfzg/" target="_blank" rel="noopener noreferrer">这里</a>有一些插件推荐，能够使 neovim 接近 vscode（笑）</p><p>我的配置存放在 <a href="https://github.com/lxl66566/dotfile/tree/archlinux/home/absolutex/.config/nvim" target="_blank" rel="noopener noreferrer">github 仓库</a>，直接替换 <code>~/.config/nvim</code> 然后启动 nvim 就能使用。首次启动会黑屏一阵，不要 Ctrl+c 终止，否则需要清理缓存重新配置。</p><ol><li>迁移我原先的 keymaps。</li><li>禁用 Telescope 及其衍生插件，改为使用 <a href="https://github.com/nvim-neo-tree/neo-tree.nvim" target="_blank" rel="noopener noreferrer">Neotree.nvim</a>。</li></ol><details class="hint-container details"><summary>outdated, archived</summary><p>首先基础设置我是照着 <a href="#external">external 2.</a> 来的。这篇文章确实讲的还行。后续冲浪时也看到一篇写得很好的文章，见 <a href="#external">external 3.</a>，有空的话去试吧。</p><p>然后进入到了自定义环节：</p><h3 id="基础设置" tabindex="-1"><a class="header-anchor" href="#基础设置"><span>基础设置</span></a></h3><ul><li>nvim 不支持 alt 和 TAB 快捷键绑定。。（骂人） 切窗口的快捷键还得再自定义。</li><li><code>vim.opt.wrap = true</code> 这行是一定要开的，可以让过长的行到行尾自动换行。(<a href="https://neovim.io/doc/user/options.html#&#39;wrap&#39;" target="_blank" rel="noopener noreferrer">ref</a>)</li></ul><h3 id="侧边栏" tabindex="-1"><a class="header-anchor" href="#侧边栏"><span>侧边栏</span></a></h3><p>俗话说 neovim 人都在为了逼近 vscode 而努力（来源请求），我需要的侧边栏也不例外。vscode 的“打开文件夹”功能好用，我需要使用。在尝试了多个插件（opener.nvim, Telescope, NerdTree）后，最终我使用的插件是<a href="https://github.com/nvim-neo-tree/neo-tree.nvim" target="_blank" rel="noopener noreferrer">Neo-tree</a>。这个插件专为 neovim 设计，并且快捷键更加简单易懂<span class="heimu" title="你知道的太多了">NerdTree 是什么妖魔鬼怪</span>。</p><ol><li><p>在 <code>lua/plugin.lua</code> 中添加：</p><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;nvim-neo-tree/neo-tree.nvim&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  branch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;v3.x&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  requires</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;nvim-lua/plenary.nvim&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;nvim-tree/nvim-web-devicons&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- not strictly required, but recommended</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;MunifTanjim/nui.nvim&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>快捷键（lua/keymaps.lua）：</p><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">vim</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.keymap.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;n&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&lt;C-o&gt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;:Neotree&lt;CR&gt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">opts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>其他设置（init.lua）：</p><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;neo-tree&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  filesystem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    filtered_items</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      visible</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      hide_dotfiles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      hide_gitignored</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></details><h3 id="我的插件" tabindex="-1"><a class="header-anchor" href="#我的插件"><span>我的插件</span></a></h3><ul><li>Neotree</li></ul><h2 id="常用组合键" tabindex="-1"><a class="header-anchor" href="#常用组合键"><span>常用组合键</span></a></h2><ul><li><code>A</code> = <code>$a</code>, <code>I</code> = <code>0i</code></li><li><code>*</code> 是当前单词的下一个匹配项</li><li><code>yyp</code> 复制当前行并粘贴到下一行。我的数据记录需要频繁使用此功能。</li><li><code>daw</code> delete a word()</li><li><code>f{char}</code> search next char，使用 <code>;</code> 可以继续搜索</li><li><code>w</code>,<code>e</code>,<code>W</code>,<code>E</code>,<code>b</code> 一些移动光标的操作。前四个都是向后移动，大写的会快一点（空格分隔）。<code>b</code> 是向前移动。 <blockquote><p>我不是很想记它们的具体移动方式。能用就行，但是光标移动确实是 vim 增加效率的很重要的一环。</p></blockquote></li><li><code>&lt;C-q&gt;</code> 进入 visual block，选中区域后使用 <code>I</code> 进行多行输入 / 删除。 <blockquote><p>哦，这个好像是 vscode vim 插件的特有功能（</p></blockquote></li><li>替换：参考<a href="http://yyq123.blogspot.com/2011/10/vim-substitute.html" target="_blank" rel="noopener noreferrer">此处</a>。。<s>感觉不如 vscode ctrl+f</s></li><li>加括号：选中括号头位置，<code>ysw</code>,<code>yse</code>...（不太好用）</li><li><code>vi(</code> 选中括号内内容，不包括括号本身。<code>va(</code> 选中包括括号本身。括号可以用各种符号（<code>[</code>, <code>\`</code>, etc）代替。 <ul><li>同理，<code>c</code>, <code>d</code>, <code>y</code> 也能代替 <code>v</code>。</li></ul></li></ul><h2 id="一些想法" tabindex="-1"><a class="header-anchor" href="#一些想法"><span>一些想法</span></a></h2><p>用 vim for vscode 用了一周，感觉有些欠缺，因此进行了一些自定义化。以下阐述我的自定义化的一些构思。</p><ul><li>visual 下按 <code>(</code>,<code>[</code> 等括号类可直接为选中区域添加闭合括号。</li><li>保留非 vim 的 Ctrl 组合键功能，例如复制粘贴等。</li><li>删除选中区域时不复制到剪贴板。</li></ul><p>而以下是我对纯 vim （无插件）无法实现功能的更多构想：</p><ul><li>更改指令查找替换方式（太麻烦了），直接搜索高亮，然后选择其中的一些或全部，进行直观替换</li><li>增加 <em>保持光标</em> 与 <em>新建光标</em> 功能，并可任意移动任一光标，方便随机修改。</li></ul><h2 id="external" tabindex="-1"><a class="header-anchor" href="#external"><span>external</span></a></h2><ol><li><a href="https://awesome-programming-books.github.io/vim/Vim%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7.pdf" target="_blank" rel="noopener noreferrer">Vim 实用技巧</a>，进阶阅读</li><li><a href="https://martinlwx.github.io/zh-cn/config-neovim-from-scratch/" target="_blank" rel="noopener noreferrer">从零开始配置 Neovim(Nvim)</a>（踩坑配置教程）</li><li><a href="https://luyuhuang.tech/2023/03/21/nvim.html" target="_blank" rel="noopener noreferrer">Neovim 使用体验</a></li><li><a href="https://github.com/emacs-tw/emacs-101-beginner-survival-guide" target="_blank" rel="noopener noreferrer">Emacs 101 新手求生指南</a>（知己知彼）</li></ol>`,29)]))}const o=e(l,[["render",t],["__file","vim.html.vue"]]),d=JSON.parse('{"path":"/coding/vim.html","title":"vim","lang":"zh-CN","frontmatter":{"date":"2023-03-05T00:00:00.000Z","icon":"keyboard","category":["编程","教程"],"tag":["工具"],"description":"vim 我曾在约一年前强迫自己使用 vim 作为代码编辑器，并进行相关学习。但是 vscode vim 给了我极其惨痛的教训：混用 Ctrl + Z 和 u(undo) 打乱了我的代码，我只能从 git 中恢复，浪费了数小时的时间。因此弃用。 此次重新启用，也大概是我的心血来潮吧。不过现在用了好久，确实没有遇到类似的问题了，可能是因为我已经不用 u 了...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vim\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-18T18:05:40.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://absx.pages.dev/coding/vim.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"vim"}],["meta",{"property":"og:description","content":"vim 我曾在约一年前强迫自己使用 vim 作为代码编辑器，并进行相关学习。但是 vscode vim 给了我极其惨痛的教训：混用 Ctrl + Z 和 u(undo) 打乱了我的代码，我只能从 git 中恢复，浪费了数小时的时间。因此弃用。 此次重新启用，也大概是我的心血来潮吧。不过现在用了好久，确实没有遇到类似的问题了，可能是因为我已经不用 u 了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T18:05:40.000Z"}],["meta",{"property":"article:tag","content":"工具"}],["meta",{"property":"article:published_time","content":"2023-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T18:05:40.000Z"}]]},"git":{"createdTime":1678031997000,"updatedTime":1739901940000,"contributors":[{"name":"lxl66566","username":"lxl66566","email":"18259734087@163.com","commits":31,"url":"https://github.com/lxl66566"}]},"readingTime":{"minutes":4.28,"words":1285},"filePathRelative":"coding/vim.md","localizedDate":"2023年3月5日","excerpt":"\\n","autoDesc":true}');export{o as comp,d as data};
