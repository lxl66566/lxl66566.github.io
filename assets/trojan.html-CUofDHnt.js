import{_ as s,e as l,g as e,i as p,f as c,h as o,j as r,r as d,o as m}from"./app-D9dOOZ0_.js";const h={};function g(u,t){const a=d("Tabs");return m(),l("div",null,[t[2]||(t[2]=e("h1",null,"Trojan",-1)),t[3]||(t[3]=e("p",null,"trojan 协议是一个广泛使用的，伪装成明确特征的 https 流量的协议，直接利用了现有的 tls 加密。",-1)),t[4]||(t[4]=e("p",null,[e("a",{href:"https://github.com/trojan-gfw/trojan",target:"_blank",rel:"noopener noreferrer"},"trojan"),o(" repo 的上一次 commit 是 2020 年，大致能认为无人维护了。（并且 issue 区充斥着大量垃圾内容）")],-1)),t[5]||(t[5]=e("h2",null,"安装",-1)),p(a,{id:"12",data:[{id:"archlinux"}]},{title0:r(({value:n,isActive:i})=>t[0]||(t[0]=[o("archlinux")])),tab0:r(({value:n,isActive:i})=>t[1]||(t[1]=[e("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[e("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pacman"),e("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -S"),e("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," trojan")])])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1)])),_:1}),t[6]||(t[6]=c('<p>配置文件在 <code>/etc/trojan/config.json</code>，内部已有一个模版，<a href="https://trojan-gfw.github.io/trojan/config" target="_blank" rel="noopener noreferrer">稍作修改</a>即可使用。</p><p>首次启动建议先 <code>trojan /etc/trojan/config.json</code> 测试配置文件是否正确。若正确，启动服务 <code>trojan.service</code> 即可。</p><h2>客户端</h2><p>不需要我多说。</p><h2>遇到的问题</h2><p>启动服务时报错 <code>trojan.service: Start request repeated too quickly.</code>。搜，按照 <a href="https://github.com/trojan-gfw/trojan/issues/387" target="_blank" rel="noopener noreferrer">issue 所述</a>改了用户组，无效。</p><p>然后直接运行 <code>trojan /etc/trojan/config.json</code>，看到 error 是端口占用了。猜测 trojan 不会将报错信息输出到 stderr，因此无法直接 <code>systemctl status trojan</code> 查看报错信息。</p>',7))])}const f=s(h,[["render",g],["__file","trojan.html.vue"]]),k=JSON.parse('{"path":"/articles/proxy/trojan.html","title":"Trojan","lang":"zh-CN","frontmatter":{"date":"2023-11-26T00:00:00.000Z","icon":"passport","category":["教程"],"tag":["网络","协议"],"description":"Trojan trojan 协议是一个广泛使用的，伪装成明确特征的 https 流量的协议，直接利用了现有的 tls 加密。 trojan repo 的上一次 commit 是 2020 年，大致能认为无人维护了。（并且 issue 区充斥着大量垃圾内容） 安装 配置文件在 /etc/trojan/config.json，内部已有一个模版，稍作修改即可...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Trojan\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-10T08:35:24.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://absx.pages.dev/articles/proxy/trojan.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"Trojan"}],["meta",{"property":"og:description","content":"Trojan trojan 协议是一个广泛使用的，伪装成明确特征的 https 流量的协议，直接利用了现有的 tls 加密。 trojan repo 的上一次 commit 是 2020 年，大致能认为无人维护了。（并且 issue 区充斥着大量垃圾内容） 安装 配置文件在 /etc/trojan/config.json，内部已有一个模版，稍作修改即可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-10T08:35:24.000Z"}],["meta",{"property":"article:tag","content":"协议"}],["meta",{"property":"article:tag","content":"网络"}],["meta",{"property":"article:published_time","content":"2023-11-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-10T08:35:24.000Z"}]]},"git":{"createdTime":1701013901000,"updatedTime":1718008524000,"contributors":[{"name":"lxl66566","username":"lxl66566","email":"18259734087@163.com","commits":3,"url":"https://github.com/lxl66566"}]},"readingTime":{"minutes":0.8,"words":239},"filePathRelative":"articles/proxy/trojan.md","localizedDate":"2023年11月26日","excerpt":"\\n","autoDesc":true}');export{f as comp,k as data};
