import{_ as a,r as n,o as l,c as h,a as i,d as e,w as t,e as k,b as p}from"./app-Dp57IuS6.js";const r={},d=k(`<h1 id="clojure" tabindex="-1"><a class="header-anchor" href="#clojure"><span>Clojure</span></a></h1><p>因为工作需要（写 jepsen test），不得不学习这门语言。这是一门 lisp 系纯函数式的语言。我还没忘记第一次读 SICP 时 lisp 给我带来的伤害，看起来 Clojure 也是括号满地，但是事到如今也只能硬着头皮上了。</p><h2 id="学习" tabindex="-1"><a class="header-anchor" href="#学习"><span>学习</span></a></h2><ol><li><a href="https://learnxinyminutes.com/docs/zh-cn/clojure-cn/" target="_blank" rel="noopener noreferrer">learnxinyminutes</a>：学语言首选，并且它下面也推荐了几个其他网址，方便快速入门，我觉得挺好的。</li><li><a href="https://clojuredocs.org/quickref" target="_blank" rel="noopener noreferrer">official quickref</a>：肯定少不了来这里查。可以学到许多 builtin functions。</li><li><a href="https://www.youtube.com/watch?v=vK1DazRK_a0" target="_blank" rel="noopener noreferrer">Solving Problems the Clojure Way - Rafal Dittwald</a>：函数式思想入门，茅塞顿开</li><li><a href="https://github.com/geekerzp/clojure-style-guide/blob/master/README-zhCN.md" target="_blank" rel="noopener noreferrer">Clojure 风格指南</a></li><li><a href="https://www.braveclojure.com/writing-macros/" target="_blank" rel="noopener noreferrer">Writing Macros - Clojure for the Brave and True</a></li></ol><h2 id="开发环境" tabindex="-1"><a class="header-anchor" href="#开发环境"><span>开发环境</span></a></h2><p>vscode 安装 <em>Calva Spritz</em> 即可。</p><p><code>Ctrl + Shift + P</code>，<em>create a mini clojure project</em>。然后点击下方的 REPL（一个可以实时查看执行结果的东西），打开（Jack-in）即可。一般选择 Babashka，<s>因为其他两个都打不开</s>。</p><p>用法只需要掌握：在当前代码行上，按 <code>Alt + Enter</code> 执行单句。如果有调用前面的函数，先按 <code>Ctrl + Shift + c, Enter</code> 引入依赖，再执行单句。（什么邪恶快捷键）</p><p>更多可以看<a href="https://calva.io/commands-top10/" target="_blank" rel="noopener noreferrer">The Top 10 Calva Commands</a>。</p><h2 id="语言基础" tabindex="-1"><a class="header-anchor" href="#语言基础"><span>语言基础</span></a></h2><p>零散知识点。</p><ul><li>function 隐式命名规则： <ul><li>后面加 v 指返回 vector（<code>[]</code>），例如 <code>filterv</code>, <code>mapv</code>。</li></ul></li><li>list 和 vec 的区别：list 的尾部是前面，vec 尾部是后面。许多函数例如 <code>conj</code>, <code>peek</code>, <code>pop</code> 都遵循这个规律。正常人都会用 vector 吧。<div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">peek</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &#39;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">; =&gt; 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">peek</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">; =&gt; 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>但是有例外，<code>last</code> 不遵循此规律。。</li></ul><div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">last</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &#39;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">; =&gt; 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><code>-&gt;</code> 和 <code>-&gt;&gt;</code> 的区别：添加的位置不同。<code>-&gt;</code> 加到调用链每一环函数参数首位，<code>-&gt;&gt;</code> 加到调用链每一环参数末尾。<div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">; (func 1 x y)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">-&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">; (func x y 1)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>apply 可以实现函数参数解包，例如<div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> wrap</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> z</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">myfunc</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> z</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> wrap</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [&amp; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> myfunc</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>这两个是等价的。</li><li>if 内可以判断很多类型，常见的 <code>[]</code> <code>()</code> 都能判 false</li><li>peek 是 last 的高速代替</li><li>identity 代表返回自身的函数，用于 filter 等。但是不允许用 <code>#(%)</code>。</li></ul><p>和其他语言对比：</p><ul><li>loop - recur 就是 for - continue</li><li>defprotocol 就是定义 interface，defrecord 就是 class</li><li>mapcat 就是 flatmap</li><li>distinct 就是 unique 列表去重</li><li><a href="https://stackoverflow.com/questions/2588227" target="_blank" rel="noopener noreferrer">没有 zip function</a>，要自己写。<div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> zip</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;[1 2 3]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   [4 5 6]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  =&gt; [[1 4]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      [2 5]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      [3 6]&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">m</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> m</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>没有 filter-map function：<div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> filter-map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> coll</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> identity</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> f</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> coll</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="项目管理" tabindex="-1"><a class="header-anchor" href="#项目管理"><span>项目管理</span></a></h2><ul><li>filename 除去 <code>.clj</code> 后缀，不能包含 <code>.</code>。因为 ns 里的 <code>.</code> 代表多一层 dir <code>/</code>。</li><li>导入另一个文件的函数：<div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> xxx.yyy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &#39;[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">xxx.zzz</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :as</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> myalias</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">; 也可以这样写</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> xxx.yyy</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">xxx.zzz</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :as</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> myalias</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">myalias/myfunc</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 123</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>想要运行这个需要用 <code>clj</code> 命令行，在 REPL 内运行只会报错。只有下面的 <code>:refer</code> 形式可以在 REPL 用，不会炸。</li><li>引用标准库：<code>use :only</code> 已经 deprecate 了，用 require。<div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> chapter2.2-37U</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">clojure.test</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :refer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">deftest</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> is</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">chapter2.2-36</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :as</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> acn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="包管理" tabindex="-1"><a class="header-anchor" href="#包管理"><span>包管理</span></a></h3><p>一般使用 <code>deps.edn</code> 作为包管理。<code>project.clj</code> 已经过时了。</p><div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:deps</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {cheshire/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">cheshire</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:mvn/version</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;5.11.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  org.clojure/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">data.json</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:mvn/version</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;2.5.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>clj xxx.clj</code> 运行程序时会自动下载依赖。依赖通过 maven 管理，下载位置在 <code>~/.m2</code>。</p><h2 id="序列化" tabindex="-1"><a class="header-anchor" href="#序列化"><span>序列化</span></a></h2><p>如果只是需要 RPC，不涉及其他语言，可以用 <a href="https://github.com/taoensso/nippy" target="_blank" rel="noopener noreferrer">nippy</a>，这是一个快速的 binary 序列化库。</p><p>如果需要 json 等标准格式，可以用官方的 <a href="https://github.com/clojure/data.json" target="_blank" rel="noopener noreferrer">clojure.data.json</a> 或者 <a href="https://github.com/dakrone/cheshire" target="_blank" rel="noopener noreferrer">cheshire</a>。</p><p>不过要注意，无论是 clojure.data.json 还是 cheshire，对 key type 的处理都是一坨大便。</p><div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> test</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">clojure.data.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :as</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> json</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> my-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:type</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:f</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :txn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:w</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]], </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:time</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3291485317</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:process</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:index</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> my-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> json-string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">json/write-str</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> my-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> json-string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> deser-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">json/read-str</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> json-string</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :key-fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> keyword</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> deser-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>{:type :invoke, :f :txn, :value [[:w 2 1]], :time 3291485317, :process 0, :index 0}</span></span>
<span class="line"><span>{&quot;type&quot;:&quot;invoke&quot;,&quot;f&quot;:&quot;txn&quot;,&quot;value&quot;:[[&quot;w&quot;,2,1]],&quot;time&quot;:3291485317,&quot;process&quot;:0,&quot;index&quot;:0}</span></span>
<span class="line"><span>{:type invoke, :f txn, :value [[w 2 1]], :time 3291485317, :process 0, :index 0}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>冒号被丢失了！</p><p>因此要解决这个问题，需要自行进行一些处理。</p><div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> test</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">cheshire.core</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :as</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> json</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">clojure.walk</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :as</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> walk</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> custom-serialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">json/generate-string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">walk/postwalk</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">keyword?</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">          (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">          x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">      data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> custom-deserialize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">json-str</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">json/parse-string</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> json-str</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">walk/postwalk</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">string?</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">          (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">.startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">keyword</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">subs</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">            x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">          x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">      data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> my-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:type</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:f</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :txn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:w</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]], </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:time</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3291485317</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:process</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:index</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> my-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> json-string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">custom-serialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> my-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> json-string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> deser-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">custom-deserialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> json-string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> deser-data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>{:type :invoke, :f :txn, :value [[:w 2 1]], :time 3291485317, :process 0, :index 0}</span></span>
<span class="line"><span>{&quot;:type&quot;:&quot;:invoke&quot;,&quot;:f&quot;:&quot;:txn&quot;,&quot;:value&quot;:[[&quot;:w&quot;,2,1]],&quot;:time&quot;:3291485317,&quot;:process&quot;:0,&quot;:index&quot;:0}</span></span>
<span class="line"><span>{:type :invoke, :f :txn, :value [[:w 2 1]], :time 3291485317, :process 0, :index 0}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="打包" tabindex="-1"><a class="header-anchor" href="#打包"><span>打包</span></a></h2><p>将 clojure 打包为 jar 文件，方便调用。 假设我有一个 <code>src/mytest.clj</code>：</p><div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> mytest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:gen-class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> -main</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [&amp; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">str</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;Hello, World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>老式：lein uberjar</summary><p>官网有 <a href="https://clojure.org/guides/tools_build" target="_blank" rel="noopener noreferrer">tools.build Guide</a>，但是讲得实在是抽象。因此我先尝试老式打包。</p><ul><li>project.clj<div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defproject</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> myproject</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;0.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">description</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;A simple Hello World project&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [[org.clojure/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">clojure</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;1.11.4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">; 是必要的，否则找不到 main</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">main</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> mytest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">aot</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">mytest</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>然后运行 <code>lein uberjar</code> 打包，<code>java -cp target/myproject-0.1.0-standalone.jar clojure.main -m mytest</code> 验证。也可以直接 <code>java -jar target/myproject-0.1.0-standalone.jar</code>。</p></details><ul><li><p><a href="https://clojure.org/guides/tools_build" target="_blank" rel="noopener noreferrer">tools.build Guide</a>，多看看，实际上没有太抽象，照着抄就完了。</p></li><li><p><code>deps.edn</code></p><div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:paths</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">;; project paths</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">deps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {}       </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">;; project deps</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">aliases</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">;; Run with clj -T:build function-in-build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">  :build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:deps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {io.github.clojure/</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">tools.build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:git/tag</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;v0.10.5&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :git/sha</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;2a21b7a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">          :ns-default</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> build</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>build.clj</code></p><div class="language-clojure line-numbers-mode" data-highlighter="shiki" data-ext="clojure" data-title="clojure" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> build</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">clojure.tools.build.api</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> :as</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> lib</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">my</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">lib1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;1.2.%s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/git-count-revs</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> class-dir</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;target/classes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> jar-file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;target/%s-%s.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lib</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> uber-file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;target/%s-%s-standalone.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lib</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">;; delay to defer side effects (artifact downloads)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> basis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/create-basis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:project</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;deps.edn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> clean</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:path</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> jar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/write-pom</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:class-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> class-dir</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">                :lib</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">                :version</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> version</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">                :basis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">basis</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">                :src-dirs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/copy-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:src-dirs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">              :target-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> class-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/jar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:class-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> class-dir</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">          :jar-file</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> jar-file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">defn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> uber</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/copy-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:src-dirs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">              :target-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> class-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/compile-clj</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:basis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">basis</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">                  :ns-compile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &#39;[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">mytest</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">                  :class-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> class-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">b/uber</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">:class-dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> class-dir</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">          :uber-file</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> uber-file</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">          :basis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">basis</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">          :main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">mytest</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>运行 <code>clj -T:build clean &amp;&amp; clj -T:build uber</code> 即可。（<code>clj -T:build jar</code> 是来凑数的不用管）</p>`,38),g={id:"劝退",tabindex:"-1"},B={class:"header-anchor",href:"#劝退"};function c(y,o){const s=n("RouteLink");return l(),h("div",null,[d,i("h2",g,[i("a",B,[i("span",null,[e(s,{to:"/gossip/fuckxxx.html#clojure-%E6%9C%89%E5%A4%9A%E9%9A%BE%E7%94%A8"},{default:t(()=>[p("劝退")]),_:1})])])])])}const C=a(r,[["render",c],["__file","clojure.html.vue"]]),u=JSON.parse('{"path":"/coding/clojure.html","title":"Clojure","lang":"zh-CN","frontmatter":{"date":"2024-08-12T00:00:00.000Z","icon":"code","category":["编程"],"tag":["编程语言"],"description":"Clojure 因为工作需要（写 jepsen test），不得不学习这门语言。这是一门 lisp 系纯函数式的语言。我还没忘记第一次读 SICP 时 lisp 给我带来的伤害，看起来 Clojure 也是括号满地，但是事到如今也只能硬着头皮上了。 学习 learnxinyminutes：学语言首选，并且它下面也推荐了几个其他网址，方便快速入门，我觉得...","head":[["meta",{"property":"og:url","content":"https://absx.pages.dev/coding/clojure.html"}],["meta",{"property":"og:site_name","content":"绝对值_x的博客"}],["meta",{"property":"og:title","content":"Clojure"}],["meta",{"property":"og:description","content":"Clojure 因为工作需要（写 jepsen test），不得不学习这门语言。这是一门 lisp 系纯函数式的语言。我还没忘记第一次读 SICP 时 lisp 给我带来的伤害，看起来 Clojure 也是括号满地，但是事到如今也只能硬着头皮上了。 学习 learnxinyminutes：学语言首选，并且它下面也推荐了几个其他网址，方便快速入门，我觉得..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-21T09:36:04.000Z"}],["meta",{"property":"article:tag","content":"编程语言"}],["meta",{"property":"article:published_time","content":"2024-08-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-21T09:36:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Clojure\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-21T09:36:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"学习","slug":"学习","link":"#学习","children":[]},{"level":2,"title":"开发环境","slug":"开发环境","link":"#开发环境","children":[]},{"level":2,"title":"语言基础","slug":"语言基础","link":"#语言基础","children":[]},{"level":2,"title":"项目管理","slug":"项目管理","link":"#项目管理","children":[{"level":3,"title":"包管理","slug":"包管理","link":"#包管理","children":[]}]},{"level":2,"title":"序列化","slug":"序列化","link":"#序列化","children":[]},{"level":2,"title":"打包","slug":"打包","link":"#打包","children":[]},{"level":2,"title":"劝退","slug":"劝退","link":"#劝退","children":[]}],"git":{"createdTime":1723479783000,"updatedTime":1726911364000,"contributors":[{"name":"lxl66566","email":"lxl66566@gmail.com","commits":5}]},"readingTime":{"minutes":5.01,"words":1503},"filePathRelative":"coding/clojure.md","localizedDate":"2024年8月12日","excerpt":"\\n","autoDesc":true}');export{C as comp,u as data};
