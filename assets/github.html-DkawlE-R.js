import{_ as o,r,o as p,c as k,a as i,b as s,d as t,w as e,f as c,e as l}from"./app-Cdd701iA.js";const g="/images/coding/github/releases.png",u="/images/coding/github/assets.png",b="/images/coding/github/packages.png",m={},y=l('<h1 id="github" tabindex="-1"><a class="header-anchor" href="#github"><span>Github</span></a></h1><p><a href="https://github.com/" target="_blank" rel="noopener noreferrer">跳转官网</a></p><p>Github 是全球最大的<s>同性交友平台</s> 源代码托管服务平台，拥有良好的开源生态，是开发者的圣地。<span class="heimu" title="你知道的太多了">（我乱写的）</span></p><h2 id="给新人" tabindex="-1"><a class="header-anchor" href="#给新人"><span>给新人</span></a></h2>',4),f={class:"hint-container details"},B=i("summary",null,"如果你没听说过 Github，或者知道它但却不会下载，请看完此条目",-1),C=i("li",null,"使用校园网访问",-1),v=i("a",{href:"https://github.com/docmirror/dev-sidecar",target:"_blank",rel:"noopener noreferrer"},"dev-sidecar",-1),_=i("li",null,"科学上网",-1),A=i("li",null,"更换访问时间段",-1),F=l('<blockquote><p>顺带一提，本博客也部署在 Github 上（如果域名是 lxl66566.github.io 的话），所以想在此博客获得更好的阅读体验，请同样采纳上述建议。</p></blockquote><ul><li>其次，你需要一定英语能力，或者会使用机翻。</li></ul><h2 id="下载文件" tabindex="-1"><a class="header-anchor" href="#下载文件"><span>下载文件</span></a></h2><p>打开仓库后，点击 releases（发行版）。</p><figure><img src="'+g+'" alt="下载文件" tabindex="0" loading="lazy"><figcaption>下载文件</figcaption></figure><p>在最底下找到 Assets，下载你需要的条目。</p><figure><img src="'+u+'" alt="下载文件" tabindex="0" loading="lazy"><figcaption>下载文件</figcaption></figure><ul><li>Q: Releases 栏显示 No releases published ？</li></ul><p>A: 开发者并未发布 release.</p><ol><li>请查看仓库页面下的 README.md 对该仓库的解释。</li><li>可能源码就是文件本身，请点击 Code -&gt; Download ZIP 下载源码。</li></ol><ul><li>Q: 这么多文件到底要下载哪一个？ <img src="'+b+'" alt="下载文件" loading="lazy"></li></ul><p>A: 此处我假设会看此条目的都是 Windows&amp;Android 用户。</p>',12),E=i("li",null,"排除源码与大小明显不正常的文件（如图中的 sha256sum）。",-1),x=i("li",null,[s("按照后缀选择，排除后缀"),i("strong",null,"不是"),s("以下格式的： "),i("ul",null,[i("li",null,"Windows 压缩包格式（.7z/.zip/.rar）"),i("li",null,"可执行文件格式（.exe）"),i("li",null,"Android 安装包（.apk）")])],-1),w=i("li",null,"然后根据你的喜好选择安装版（可执行文件）或者免安装版（压缩包）。建议新人下载安装版。",-1),D=i("li",null,"如果实在无法判断，优先选择更上方的。",-1),G=i("h2",{id:"上传文件",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#上传文件"},[i("span",null,"上传文件")])],-1),P=i("p",null,"在此之前，你需要有一个 Github 账号，创建一个属于你自己的仓库。",-1),I=i("h2",{id:"下载仓库",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#下载仓库"},[i("span",null,"下载仓库")])],-1),q=i("p",null,[s("直接点击 "),i("em",null,"Download ZIP"),s(" 仅下载仓库文件，不包含 "),i("code",null,".git"),s(" 仓库。可以使用 CDN 加速："),i("code",null,"https://codeload.github.com/<your name>/<repo name>/zip/<branch name>")],-1),R=i("code",null,".git",-1),T=l('<h2 id="小工具" tabindex="-1"><a class="header-anchor" href="#小工具"><span>小工具</span></a></h2><p>有一些小工具可以增强 Github 的使用体验。</p><ul><li><a href="https://github.com/refined-github/refined-github" target="_blank" rel="noopener noreferrer">Refined-github</a>：一些大杂烩功能。</li><li><a href="https://chromewebstore.google.com/detail/github-pinned-repos/abbhjbdacmekbbpflglmmbhfjgclobfh" target="_blank" rel="noopener noreferrer">Github Pinned Repos</a>：将仓库 pin 到首页</li></ul><h2 id="markdown-增强" tabindex="-1"><a class="header-anchor" href="#markdown-增强"><span>markdown 增强</span></a></h2><p>冷知识，Github 的 markdown 也可以用提示块，<a href="https://github.com/orgs/community/discussions/16925" target="_blank" rel="noopener noreferrer">src</a>。</p><h2 id="合并-pull-request" tabindex="-1"><a class="header-anchor" href="#合并-pull-request"><span>合并 Pull Request</span></a></h2><p>你是一个仓库 owner，有人对仓库发起了 pr。如果你愿意全盘接受改动，可以简单地在网页上点击 merge 即可。如果需要修改细节而对方没开写权限<span class="heimu" title="你知道的太多了">OR 不想亲自动手</span>，那就在网页上提出 review 叫对方改，改到满意为止<span class="heimu" title="你知道的太多了"><s>堪比黑心资本家</s></span>。而这里讲的是第三种情形，即需要修改细节而对方提供写权限，owner 亲自进行修改并 merge 的方法。</p><blockquote><p>为什么不使用 codespace 呢？因为它确实难用（</p></blockquote>',8),z=i("li",null,[s("拉取到本地：可以使用 Github CLI 完成。 "),i("ul",null,[i("li",null,[s("在 pull request 界面右上角点击 "),i("em",null,"Code - Local - Checkout with GitHub CLI"),s("，复制指令。")]),i("li",null,[s("安装 "),i("a",{href:"https://cli.github.com/",target:"_blank",rel:"noopener noreferrer"},"Github CLI"),s("，运行指令。")])])],-1),N=i("code",null,"git checkout <branch>",-1),M=i("li",null,"修改",-1),S=i("li",null,"提交",-1),j=i("li",null,[s("rebase 一下，想干啥干啥，"),i("s",null,"注释稀烂就删注释，提交没压就 squash 一下"),s("。")],-1),Z=i("li",null,"push 到自己的 remote 即可。",-1),L=i("p",null,[s("此时进入 Github pull request 界面一看，发现已经是 "),i("em",null,"Merged"),s(" 的状态了。")],-1),V=i("h2",{id:"搜索技巧",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#搜索技巧"},[i("span",null,"搜索技巧")])],-1),$=i("p",null,[s("搜索格式与你的关键词使用空格隔开。你也可以使用 "),i("a",{href:"https://github.com/search/advanced",target:"_blank",rel:"noopener noreferrer"},"Github 官方提供的高级搜索"),s("界面。")],-1),W=l('<table><thead><tr><th style="text-align:center;">格式</th><th style="text-align:center;">作用</th><th style="text-align:center;">样例</th></tr></thead><tbody><tr><td style="text-align:center;">in:name</td><td style="text-align:center;">指定搜索仓库名称</td><td style="text-align:center;"><code>in:name words english</code></td></tr><tr><td style="text-align:center;">in:description</td><td style="text-align:center;">指定搜索摘要</td><td style="text-align:center;">类比</td></tr><tr><td style="text-align:center;">in:readme</td><td style="text-align:center;">指定搜索readme文档</td><td style="text-align:center;">类比</td></tr><tr><td style="text-align:center;">stars:</td><td style="text-align:center;">指定星数范围</td><td style="text-align:center;"><code>stars:&lt;50</code><br><code>stars:&gt;100</code><br><code>stars:50..100</code></td></tr><tr><td style="text-align:center;">fork:</td><td style="text-align:center;">指定fork数范围</td><td style="text-align:center;">类比</td></tr><tr><td style="text-align:center;">language:</td><td style="text-align:center;">指定程序语言</td><td style="text-align:center;"><code>language:c#</code></td></tr><tr><td style="text-align:center;">pushed:</td><td style="text-align:center;">指定最近更新时间范围</td><td style="text-align:center;"><code>pushed:&gt;2022-01-01</code></td></tr><tr><td style="text-align:center;">path:</td><td style="text-align:center;">指定匹配文件名，例如 path:*.toml</td><td style="text-align:center;"></td></tr></tbody></table><p>在这里查看<a href="https://docs.github.com/zh/search-github/github-code-search/understanding-github-code-search-syntax" target="_blank" rel="noopener noreferrer">代码搜索</a>的详细信息。</p><p>不过，对于代码搜索，我建议使用第三方提供的 <a href="https://grep.app/" target="_blank" rel="noopener noreferrer">grep app</a>，这玩意是真的快。</p><ul><li>fork 项目默认不出现在搜索页面。而 <code>fork:only</code> 仅搜索其 fork 项目，非常好用。 <ul><li>也可以用第三方的工具：<a href="https://techgaun.github.io/active-forks/index.html" target="_blank" rel="noopener noreferrer">active-forks</a> 进行搜索。</li></ul></li><li>如何查看最新的一次提交记录？(<a href="https://www.cnblogs.com/saysmy/p/7292177.html" target="_blank" rel="noopener noreferrer">src</a>)（github 的翻页做的真的垃圾。）</li></ul><h2 id="批量下载-release" tabindex="-1"><a class="header-anchor" href="#批量下载-release"><span>批量下载 Release</span></a></h2><p>我需要批量下载某个 Release 中的所有文件。首先，<strong>需要保证这个仓库是 Public 的</strong>。<span class="heimu" title="你知道的太多了">被坑了，我是傻杯</span></p>',6),O=i("ul",null,[i("li",null,"由于我使用 XDM 而批量下载抽风了，于是只好使用 aria2 下载。")],-1),U=l(`<li>另一个方法是用命令行下载(<a href="https://www.bilibili.com/read/cv21459907" target="_blank" rel="noopener noreferrer">ref</a>)。例如在 Archlinux 上：<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> aria2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> jq</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> https://api.github.com/repos/</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">USERNAM</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">E</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">REPONAM</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">E</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/releases/latest</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> jq</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;.assets[].browser_download_url&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> aria2c</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -x</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 1M</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),H=l(`<h2 id="github-workflow" tabindex="-1"><a class="header-anchor" href="#github-workflow"><span>Github Workflow</span></a></h2><p>Github 工作流，极为强大。可以理解为一个性能强悍的虚拟机帮你跑任务。<a href="https://docs.github.com/cn/actions/using-workflows/about-workflows" target="_blank" rel="noopener noreferrer">官方文档</a></p><p>使用方法：在项目根目录下，新建 <code>.github/workflows/&lt;name&gt;.yml</code>.</p><h3 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>Trigger</span></a></h3><p>ex.</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  workflow_dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  schedule</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">cron</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;30 00 * * *&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定时任务: 使用 cron 表达式。<a href="https://crontab.guru/" target="_blank" rel="noopener noreferrer">此处</a>可在线计算表达式。</p><blockquote><p>注意，定时任务时间为中时区（UTC），并且会出现 0-60+ min 的延时，若有精确执行需求请使用其他服务商提供的云函数</p></blockquote><p>手动任务：使用 <code>workflow_dispatch</code>；建议每个 workflow 都加一个方便调试。不要再使用 <code>on:push</code> 进行<strong>手动运行控制</strong>。</p><h3 id="杂" tabindex="-1"><a class="header-anchor" href="#杂"><span>杂</span></a></h3><ul><li>if 的外面会自动包 <code>\${{ }}</code>，不需要手动包，否则会出现预料之外的行为。</li></ul><h3 id="调试" tabindex="-1"><a class="header-anchor" href="#调试"><span>调试</span></a></h3><ul><li><a href="https://github.com/mxschmitt/action-tmate" target="_blank" rel="noopener noreferrer">action-tmate</a> 提供了 ssh 进入 action 环境里调试的方法，不过这是违反使用协定的，有被封号的风险。</li><li><a href="https://github.com/nektos/act" target="_blank" rel="noopener noreferrer">act</a> 提供了 github action docker，可以在本地模拟 action 环境。</li></ul><h2 id="powerful-ci" tabindex="-1"><a class="header-anchor" href="#powerful-ci"><span>Powerful CI</span></a></h2><p>这里列出一些我常用的 CI。顺带一提，CI 就是 Continuous Integration，在每次代码操作后自动进行一系列检查或服务更新部署，简化操作流程。</p><p>写在这里的 CI 理论上应该是语言无关的。如果需要特定编程语言的 CI，可以去对应语言页面查看。</p><p>学习写 CI？不用学习，多看多抄，会用 template 就懂了。</p><h3 id="typos" tabindex="-1"><a class="header-anchor" href="#typos"><span><a href="https://github.com/crate-ci/typos" target="_blank" rel="noopener noreferrer">typos</a></span></a></h3><p>检查你的英文水平（检查代码拼写错误）。rust 写的，速度极快，即使不用 CI 也可以在本地用，方便修复。</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">Check Spelling</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">crate-ci/typos@v1.23.3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>本地用就</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> binstall</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> typos-cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">typos</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">     # 检查</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">typos</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 纠正</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span><a href="https://github.com/actions/cache" target="_blank" rel="noopener noreferrer">cache</a></span></a></h3><p>缓存构建中的依赖项，加速 CI。比较适合大型项目，依赖很多，经常跑 CI 的那种。个人的小仓库就有点鸡肋了，不如不开 cahce，多花 10 秒钟构建省 300MB 空间，不为 Github 想想也得为 SSD 想想吧~~（虽然不是我的，但爱是平等的）~~。</p><p>每个仓库免费 10 GB 的存储空间，应该是 Github 官方提供的(?)，真富啊。</p><p>有问题去看官方文档，他这个写的还是不差的。这里随手举一个 rust 项目的例子。</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">Cache dependencies installed with cargo</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">actions/cache@v4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  with</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      ~/.cargo/bin/</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      ~/.cargo/registry/index/</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      ~/.cargo/registry/cache/</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      ~/.cargo/git/db/</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      target/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">\${{ runner.os }}-cargo-\${{ hashFiles(&#39;**/Cargo.lock&#39;) }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    restore-keys</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">\${{ runner.os }}-cargo-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sccache-action" tabindex="-1"><a class="header-anchor" href="#sccache-action"><span><a href="https://github.com/Mozilla-Actions/sccache-action" target="_blank" rel="noopener noreferrer">sccache-action</a></span></a></h3><p>方便地使用 <a href="https://github.com/mozilla/sccache/" target="_blank" rel="noopener noreferrer">sccache</a> 的 CI。这个和上面的 cache 不太一样，sccache 提供更智能的 cache 而不是暴力缓存 <code>./target</code>。</p><p>使用也非常简单，对 rust 来说，设置两个 env，编译前 use 一下就行。编译后还可以打印。</p><h2 id="powerful-apps" tabindex="-1"><a class="header-anchor" href="#powerful-apps"><span>Powerful APPs</span></a></h2><p>Github APPs 是不同于 CI 的一种自动化功能，它们可以更加自由、更加灵活地帮你操作存储库。当然，并不是所有 APP 都是免费的（毕竟是 APP 提供的服务），你也只能使用 APP 本身有的功能，而不像 CI 那样可以自己写任意指令。</p><h3 id="自动更新依赖" tabindex="-1"><a class="header-anchor" href="#自动更新依赖"><span>自动更新依赖</span></a></h3><p>Github 仓库一多，就免不了自动升级依赖。Github 有一些 APP 可以帮你做到这一点。一般来说，项目还需要有测试能跑，并且测试覆盖率越高越好，这样才不会在自动依赖更新时炸掉项目，自己还不知道。</p><p>我的要求是自动更新依赖 + 自动跑测试 + 自动合并，并且只有在测试通过时才能合并。</p>`,35),Q=i("p",null,"renovate bot 是一个更加强大的依赖管理 APP。据说是因为 dependabot 非常保守，不肯支持新的语言，它才出现的。renovate bot 自身就支持多语言的依赖升级 + 自动合并。",-1),J=i("p",null,"但是 renovate bot 的文档简直就是一坨大便，我摸索了很久才得以一窥门道。",-1),X=i("ol",null,[i("li",null,[s("renovate bot "),i("a",{href:"https://docs.renovatebot.com/config-presets/",target:"_blank",rel:"noopener noreferrer"},"支持引用其他配置文件"),s("。也就是我可以在一个单独的 Github 存储库里放一个通用配置，就可以在各个库里引用这同一份配置，这样比较好统一更改。")]),i("li",null,[s("renovate bot 的配置项 Reference 在"),i("a",{href:"https://docs.renovatebot.com/configuration-options",target:"_blank",rel:"noopener noreferrer"},"这里"),s("。当然这么多不可能每个都看一遍，只能去网上抄其他人的。这里是我的一个模板样例："),i("div",{class:"language-json line-numbers-mode","data-highlighter":"shiki","data-ext":"json","data-title":"json",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"{")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "$schema"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"https://docs.renovatebot.com/renovate-schema.json"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "extends"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": ["),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"config:base"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"],")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "timezone"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"Asia/Shanghai"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "semanticCommits"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"enabled"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "schedule"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": ["),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"on the first day of the week"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"],")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "commitMessagePrefix"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"chore(deps): "'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "automerge"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "automergeStrategy"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"rebase"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "platformAutomerge"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'  "vulnerabilityAlerts"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'    "enabled"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#E06C75"}},'    "automerge"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"true")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"  }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"}")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])])],-1),K=i("p",null,"dependabot 是老牌的自动更新 APP 了，Github 官方推出的，还不错。",-1),Y=i("p",null,[s("以 rust 项目为例，只需要在 "),i("code",null,".github/dependabot.yml"),s(" 写：")],-1),ii=i("div",{class:"language-yml line-numbers-mode","data-highlighter":"shiki","data-ext":"yml","data-title":"yml",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#E06C75"}},"version"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"2")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#E06C75"}},"updates"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"  - "),i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#E06C75"}},"package-ecosystem"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"cargo"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#E06C75"}},"    directory"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"/"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#E06C75"}},"    schedule"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#E06C75"}},"      interval"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#98C379"}},'"weekly"')])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),si=i("p",null,"即可。首次启用记得在 Security 里开启 dependabot。",-1),ei=i("p",null,[s("至于 auto merge，我试过了 "),i("a",{href:"https://github.com/marketplace/dependabot-auto-merger",target:"_blank",rel:"noopener noreferrer"},"dependabot-auto-merger"),s("，但是其并不能正常合并。即使我已经设置了 branch protect rules 也不行。")],-1),ti=i("h2",{id:"external",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#external"},[i("span",null,"external")])],-1),ai=i("ol",null,[i("li",null,[i("a",{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"},"约定式提交")]),i("li",null,[i("a",{href:"https://xuanwo.io/reports/2022-45/",target:"_blank",rel:"noopener noreferrer"},"使用 sccache 加快 Rust 编译速度")])],-1);function li(ni,hi){const a=r("RouteLink"),d=r("Tabs");return p(),k("div",null,[y,i("details",f,[B,i("ul",null,[i("li",null,[s("首先，github 服务器在国外，国内访问速度慢且有几率连接不上。请： "),i("ul",null,[C,i("li",null,[s("使用加速器访问，如 "),t(a,{to:"/farraginous/recommend_packages.html#steam"},{default:e(()=>[s("steam++")]),_:1}),s(" 或 "),v]),_,A])])]),F,i("ol",null,[E,x,w,i("li",null,[s("关于 apk 文件： "),i("ul",null,[i("li",null,[s("如果文件名带有 v7a,v8a 的：请"),t(a,{to:"/articles/mobile/Android_ISA.html"},{default:e(()=>[s("查看手机指令集")]),_:1}),s("，然后按结果选择。")]),D])])]),G,P,i("p",null,[s("Github 只支持 Git 作为唯一的版本库格式进行托管。相关内容请跳转"),t(a,{to:"/coding/Git.html"},{default:e(()=>[s("编程-工具-Git")]),_:1}),s("。")]),I,q,i("p",null,[s("在需要拉取 "),R,s(" 仓库时，可以用 clone, pull, fetch 等拉取指令，一般使用 "),t(a,{to:"/coding/Git.html#%E4%B8%8B%E8%BD%BD"},{default:e(()=>[s("clone")]),_:1}),s("。")])]),T,i("ol",null,[z,i("li",null,[s("将提交树上的 HEAD 设为最新的，属于 Contributor 的远程分支："),N,s("（"),t(a,{to:"/coding/Git.html"},{default:e(()=>[s("参考 Git")]),_:1}),s("）")]),M,S,j,Z]),L,V,$,c(" prettier-ignore "),W,i("ul",null,[i("li",null,[s("一个方法是手动复制所有链接，然后用 "),t(a,{to:"/farraginous/recommend_packages.html#ditto"},{default:e(()=>[s("Ditto")]),_:1}),s(" 批量粘贴到 AriaNgGUI/IDM 等下载器下载。 "),O]),U]),H,t(d,{id:"528",data:[{id:"renovate bot"},{id:"dependabot"}]},{title0:e(({value:n,isActive:h})=>[s("renovate bot")]),title1:e(({value:n,isActive:h})=>[s("dependabot")]),tab0:e(({value:n,isActive:h})=>[Q,J,X]),tab1:e(({value:n,isActive:h})=>[K,Y,ii,si,ei,ti,ai]),_:1})])}const di=o(m,[["render",li],["__file","github.html.vue"]]),oi=JSON.parse('{"path":"/coding/github.html","title":"Github","lang":"zh-CN","frontmatter":{"date":"2022-09-06T00:00:00.000Z","icon":"brands fa-github","category":["编程","教程"],"tag":["工具"],"description":"Github 跳转官网 Github 是全球最大的 源代码托管服务平台，拥有良好的开源生态，是开发者的圣地。（我乱写的） 给新人 如果你没听说过 Github，或者知道它但却不会下载，请看完此条目 首先，github 服务器在国外，国内访问速度慢且有几率连接不上。请： 使用校园网访问 使用加速器访问，如 或 dev-sidecar 科学上网 更换访问时...","head":[["meta",{"property":"og:url","content":"https://absx.pages.dev/coding/github.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"Github"}],["meta",{"property":"og:description","content":"Github 跳转官网 Github 是全球最大的 源代码托管服务平台，拥有良好的开源生态，是开发者的圣地。（我乱写的） 给新人 如果你没听说过 Github，或者知道它但却不会下载，请看完此条目 首先，github 服务器在国外，国内访问速度慢且有几率连接不上。请： 使用校园网访问 使用加速器访问，如 或 dev-sidecar 科学上网 更换访问时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://absx.pages.dev/images/coding/github/releases.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-23T18:47:24.000Z"}],["meta",{"property":"article:tag","content":"工具"}],["meta",{"property":"article:published_time","content":"2022-09-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-23T18:47:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Github\\",\\"image\\":[\\"https://absx.pages.dev/images/coding/github/releases.png\\",\\"https://absx.pages.dev/images/coding/github/assets.png\\",\\"https://absx.pages.dev/images/coding/github/packages.png\\"],\\"datePublished\\":\\"2022-09-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-23T18:47:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"给新人","slug":"给新人","link":"#给新人","children":[]},{"level":2,"title":"小工具","slug":"小工具","link":"#小工具","children":[]},{"level":2,"title":"markdown 增强","slug":"markdown-增强","link":"#markdown-增强","children":[]},{"level":2,"title":"合并 Pull Request","slug":"合并-pull-request","link":"#合并-pull-request","children":[]},{"level":2,"title":"搜索技巧","slug":"搜索技巧","link":"#搜索技巧","children":[]},{"level":2,"title":"批量下载 Release","slug":"批量下载-release","link":"#批量下载-release","children":[]},{"level":2,"title":"Github Workflow","slug":"github-workflow","link":"#github-workflow","children":[{"level":3,"title":"Trigger","slug":"trigger","link":"#trigger","children":[]},{"level":3,"title":"杂","slug":"杂","link":"#杂","children":[]},{"level":3,"title":"调试","slug":"调试","link":"#调试","children":[]}]},{"level":2,"title":"Powerful CI","slug":"powerful-ci","link":"#powerful-ci","children":[{"level":3,"title":"typos","slug":"typos","link":"#typos","children":[]},{"level":3,"title":"cache","slug":"cache","link":"#cache","children":[]},{"level":3,"title":"sccache-action","slug":"sccache-action","link":"#sccache-action","children":[]}]},{"level":2,"title":"Powerful APPs","slug":"powerful-apps","link":"#powerful-apps","children":[{"level":3,"title":"自动更新依赖","slug":"自动更新依赖","link":"#自动更新依赖","children":[]}]}],"git":{"createdTime":1662444810000,"updatedTime":1737658044000,"contributors":[{"name":"lxl66566","email":"18259734087@163.com","commits":12},{"name":"lxl66566","email":"lxl66566@gmail.com","commits":12}]},"readingTime":{"minutes":8.88,"words":2663},"filePathRelative":"coding/github.md","localizedDate":"2022年9月6日","excerpt":"\\n","autoDesc":true}');export{di as comp,oi as data};
