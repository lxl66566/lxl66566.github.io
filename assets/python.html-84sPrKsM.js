import{_ as g,e as A,g as i,f as h,i as n,k as y,h as a,j as l,r as p,o as c}from"./app-LXiS_CCB.js";const u="/images/coding/python/set_vscode_environment1.png",B="/images/coding/python/anaconda_2.png",F={};function b(m,s){const k=p("RouteLink"),d=p("ZoomedImg"),r=p("Tabs"),o=p("CodeTabs");return c(),A("div",null,[s[91]||(s[91]=i("h1",{id:"python",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#python"},[i("span",null,"Python")])],-1)),i("p",null,[s[1]||(s[1]=a("python 实际上并不简单，只不过生态比较好。")),n(k,{to:"/gossip/fuckxxx.html#python-%E6%9C%89%E5%A4%9A%E9%9A%BE%E7%94%A8"},{default:l(()=>s[0]||(s[0]=[a("暴论：python 有多难用")])),_:1})]),s[92]||(s[92]=h('<p>我被 python 坑了太多次，甚至做了个 <a href="https://lxl66566.github.io/python-quiz/zh/" target="_blank" rel="noopener noreferrer">python-quiz</a>讲述我的经历。</p><h2 id="学习" tabindex="-1"><a class="header-anchor" href="#学习"><span>学习</span></a></h2><p>python 入门非常快，简单看点 w3school 即可。进阶可以看一点 <em>码农高天</em> 的视频，虽然有一点炒作，但是不可否认他确实很强（为数不多的华人 python core dev）。</p><p>最后，不管学习什么语言都必须要做大量的项目。我也做了不少，例如 <a href="https://github.com/lxl66566/bpm" target="_blank" rel="noopener noreferrer">bpm</a> 和 <a href="https://github.com/lxl66566/init-script" target="_blank" rel="noopener noreferrer">init-script</a>。还有更多其他小项目。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2>',5)),i("p",null,[s[3]||(s[3]=a("python 本身的安装应该不用我多说，windows ")),n(k,{to:"/farraginous/recommend_packages.html#scoop"},{default:l(()=>s[2]||(s[2]=[a("scoop")])),_:1}),s[4]||(s[4]=a(" / archlinux pacman 一行结束。不过注意，没有启用虚拟环境时，电脑中")),s[5]||(s[5]=i("strong",null,"最好只有一个 python",-1)),s[6]||(s[6]=a("。"))]),s[93]||(s[93]=h('<h2 id="开发环境" tabindex="-1"><a class="header-anchor" href="#开发环境"><span>开发环境</span></a></h2><p>查看 <a href="#external">external</a> 8. 以进行参考。</p><h3 id="vscode" tabindex="-1"><a class="header-anchor" href="#vscode"><span>vscode</span></a></h3>',3)),i("p",null,[s[8]||(s[8]=a("关于开发，我直接无脑 all in ")),n(k,{to:"/coding/vscode.html"},{default:l(()=>s[7]||(s[7]=[a("vscode")])),_:1}),s[9]||(s[9]=a("。"))]),s[94]||(s[94]=h(`<p>开发 python 前，强烈建议安装以下扩展：</p><ul><li><strong>Python</strong> - Microsoft</li><li><strong>Ruff</strong> - Charlie Marsh：linter + formatter + highlighter <ul><li><a href="https://stackoverflow.com/questions/75639719/decrease-mistake-severity-for-ruff-python-linter-in-vscode-extension" target="_blank" rel="noopener noreferrer">配置技巧</a></li><li>ruff 的 formatter <a href="https://docs.astral.sh/ruff/faq/#is-the-ruff-linter-compatible-with-black" target="_blank" rel="noopener noreferrer">几乎与 black 兼容</a>，因此可以放心用。 <ul><li>python 的代码风格非常统一，是一件好事。（反观隔壁 <code>.clang-format</code> 行数）</li></ul></li></ul></li><li><strong>Pylance</strong> - Microsoft，主要用它提供 inlay hints（比较重要，之前被坑过） <ul><li>inlay hints 默认关闭，需要手动开启。在设置里搜 <code>inlay hints</code>，把 Pylance 提供的四个都开起来。</li></ul></li><li>(optional) <strong>isort</strong> - Microsoft：提供 import 排序，formatter</li><li>(optional) <strong>Black Formatter</strong> - Microsoft：formatter</li></ul><blockquote><p>至于 pylyzer 在 2024.04 还是野鸡状态，根本没法用，cargo install 都会炸，所以不推荐。</p></blockquote><h4 id="我的配置" tabindex="-1"><a class="header-anchor" href="#我的配置"><span>我的配置</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[python]&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;editor.defaultFormatter&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ms-python.black-formatter&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;editor.formatOnType&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;editor.formatOnSave&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;editor.codeActionsOnSave&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;source.fixAll&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;source.organizeImports&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;python.analysis.inlayHints.pytestParameters&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;python.analysis.inlayHints.variableTypes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;python.analysis.inlayHints.functionReturnTypes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;python.analysis.inlayHints.callArgumentNames&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;all&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;python.analysis.typeCheckingMode&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;standard&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该配置在保存时自动格式化，并开启一些有用的提示。</p><h4 id="启用虚拟环境" tabindex="-1"><a class="header-anchor" href="#启用虚拟环境"><span>启用虚拟环境</span></a></h4><p>创建虚拟环境并引入依赖后，代码仍会收到 vscode 的报错：</p><figure><img src="`+u+'" alt="vscode 中未启用环境" tabindex="0" loading="lazy"><figcaption>vscode 中未启用环境</figcaption></figure><p>解决方法：</p><ol><li><code>Ctrl + Shift + P</code>打开命令面板，搜索<code>Python: Select Interpreter</code></li><li>选中你的虚拟环境。如果没有自动检测到，就手动打开路径，选择 <code>.venv/Scripts/python</code> 或 <code>.venv/bin/python</code>。</li></ol><h3 id="包管理器" tabindex="-1"><a class="header-anchor" href="#包管理器"><span>包管理器</span></a></h3><p>python 的包管理器可以说是百花齐放。</p><p>对于 python 包管理器，我的基本需求是：1. 帮我打包 + 上传 2. 支持 <a href="https://peps.python.org/pep-0621/" target="_blank" rel="noopener noreferrer">PEP 621</a>。</p>',14)),n(r,{id:"137",data:[{id:"uv"},{id:"pdm"},{id:"poetry"},{id:"miniconda"},{id:"pip"},{id:"其他"}]},{title0:l(({value:e,isActive:t})=>s[10]||(s[10]=[a("uv")])),title1:l(({value:e,isActive:t})=>s[11]||(s[11]=[a("pdm")])),title2:l(({value:e,isActive:t})=>s[12]||(s[12]=[a("poetry")])),title3:l(({value:e,isActive:t})=>s[13]||(s[13]=[a("miniconda")])),title4:l(({value:e,isActive:t})=>s[14]||(s[14]=[a("pip")])),title5:l(({value:e,isActive:t})=>s[15]||(s[15]=[a("其他")])),tab0:l(({value:e,isActive:t})=>s[16]||(s[16]=[i("h4",{id:"uv",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#uv"},[i("span",null,[i("a",{href:"https://github.com/astral-sh/uv",target:"_blank",rel:"noopener noreferrer"},"uv")])])],-1),i("p",null,"新的，用 rust 写的包管理器。现在也就出了没两年，赶上了 RIIR 的热潮，引起了很多话题。",-1),i("p",null,"2024.09 uv 在 v0.4.5 添加了 build 功能，于是我转向 uv。当然现在 uv 还存在一些问题，但是还是比 poetry 好用的。最大的优点就是快，并行下载安装实在是好用。",-1),i("h5",{id:"使用",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#使用"},[i("span",null,"使用")])],-1),i("p",null,"uv 的使用与其他包管理器类似，也非常简单。",-1),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," init"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"                                       # 新建项目")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," add"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"package"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"s>                             "),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 添加包")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," remove"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"package"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"s>                          "),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 移除包")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," sync"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"                                       # 更新 .venv，相当于 npm install")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," run"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," python"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," xxx.py"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"                          # 使用该环境运行某个 py 文件")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," python"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," pin"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 3.12"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"                            # 对当前项目使用某个 python 版本，如果没下载会自动下载")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," lock"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --upgrade"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," && "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," sync"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"                  # 更新所有依赖")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("ol",null,[i("li",null,[a("不能在中文目录下 "),i("code",null,"uv init"),a("，但是可以 "),i("code",null,"uv init --name xxx"),a(" 绕过。 "),i("ul",null,[i("li",null,"不能用中文做 package name 是 PEP 621 的要求。对于拿包管理器但是不用来写一个 python package 的人来说不太友好。")])]),i("li",null,[a("添加镜像：查看 "),i("a",{href:"https://github.com/astral-sh/uv/issues/6925",target:"_blank",rel:"noopener noreferrer"},"issues#6925"),a("，"),i("a",{href:"https://docs.astral.sh/uv/concepts/configuration-files/",target:"_blank",rel:"noopener noreferrer"},"Configuration files")]),i("li",null,[a("不要同时使用 "),i("code",null,"uv pip install"),a(" 和 "),i("code",null,"uv add"),a("，pip 安装的不会写入 toml，在 "),i("code",null,"uv run"),a(" 时会自动 sync 导致 pip 安装的包丢失。")]),i("li",null,[a("uv 官方其实有"),i("a",{href:"https://docs.astral.sh/uv/guides/integration/pytorch/",target:"_blank",rel:"noopener noreferrer"},"安装 pytorch 的教程"),a("。")]),i("li",null,[a("build 时默认会把目录下所有文件都放进来。如果需要选择性放入文件，可以用"),i("div",{class:"language-toml line-numbers-mode","data-highlighter":"shiki","data-ext":"toml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"tool"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"hatch"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"build"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"include"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = ["),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"*.py"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])])])],-1),i("p",null,[a("使用 "),i("a",{href:"https://github.com/stvnksslr/uv-migrator",target:"_blank",rel:"noopener noreferrer"},"uv-migrator"),a(" 可以将其他大部分包管理器的配置无缝迁移到 uv。")],-1),i("h5",{id:"我的配置-1",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#我的配置-1"},[i("span",null,"我的配置")])],-1),i("p",null,[i("code",null,"~/uv.toml"),a(":")],-1),i("div",{class:"language-toml line-numbers-mode","data-highlighter":"shiki","data-ext":"toml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"index-url"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"'),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"  # 全局换源")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"prerelease"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"allow"'),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"                                                # 不再禁止 prerelease 包")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:l(({value:e,isActive:t})=>s[17]||(s[17]=[i("h4",{id:"pdm",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#pdm"},[i("span",null,[i("a",{href:"https://github.com/pdm-project/pdm",target:"_blank",rel:"noopener noreferrer"},"pdm")])])],-1),i("p",null,"国人开发，据说很好用，除了性能以外没有其他问题。",-1),i("p",null,"主要开发者是 frostming，非常活跃并积极解决问题。",-1),i("p",null,[a("之前 pdm 不允许在中文目录下 init，并且没有类似 uv 的 "),i("code",null,"--name"),a(" 方法绕过。"),i("a",{href:"https://t.me/withabsolutex/2320",target:"_blank",rel:"noopener noreferrer"},"我在论坛上提了一嘴，然后被看到了，就修了。")],-1)])),tab2:l(({value:e,isActive:t})=>s[18]||(s[18]=[i("h4",{id:"poetry",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#poetry"},[i("span",null,"poetry")])],-1),i("p",null,"广泛使用的老牌 python 包管理器，指令抄的 npm。略胜 miniconda。",-1),i("p",null,"poetry 可以说是我用的最久的 python 包管理器了。弃坑原因主要是因为：",-1),i("ol",null,[i("li",null,[a("其不兼容 "),i("a",{href:"https://peps.python.org/pep-0621/",target:"_blank",rel:"noopener noreferrer"},"PEP 621"),a("，因为 poetry 出道的时候 PEP 621 还没有出现呢。")]),i("li",null,"dep resolve 太慢了。"),i("li",null,"有更多更好的新兴包管理器。")],-1),i("h5",{id:"安装-1",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#安装-1"},[i("span",null,"安装")])],-1),i("p",null,[a("这里是"),i("a",{href:"https://python-poetry.org/docs/#installation",target:"_blank",rel:"noopener noreferrer"},"官方教程"),a("。poetry 在 windows 上的 install script 可谓傻逼"),i("sup",{class:"footnote-ref"},[i("a",{href:"#footnote1"},"[1]"),i("a",{class:"footnote-anchor",id:"footnote-ref1"})]),a("，开代理不能装，关代理不能装，scoop 用的也是官方 install script。只好使用 pip。")],-1),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pip"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," poetry"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -i"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://pypi.tuna.tsinghua.edu.cn/simple")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("h5",{id:"配置",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#配置"},[i("span",null,"配置")])],-1),i("ol",null,[i("li",null,[a("poetry 默认在某个集中的位置（Windows："),i("code",null,"C:"),a("，Linux："),i("code",null,"~/.cache/..."),a("）创建虚拟环境。这不利于使用，特别是当在 vscode 中选择 python 解释器时。明明抄的 npm，为什么不像 npm 那样把依赖都放在项目下呢？")]),i("li",null,"poetry windows 默认在 C 盘缓存。空间吃紧的话可以把缓存转到其他盘。")],-1),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," virtualenvs.in-project"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," true")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," cache-dir"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Z:"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("h6",{id:"换源",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#换源"},[i("span",null,"换源")])],-1),i("p",null,[a("身在中国，换源是很重要的（python 不走代理"),i("sup",{class:"footnote-ref"},[i("a",{href:"#footnote1"},"[1:1]"),i("a",{class:"footnote-anchor",id:"footnote-ref1:1"})]),a("）。最好每次创建项目都换源，这样一起协作的其他人都无需手动换源。参考"),i("a",{href:"https://python-poetry.org/docs/repositories#project-configuration",target:"_blank",rel:"noopener noreferrer"},"文档"),a("。")],-1),i("ul",null,[i("li",null,[a("命令行换源"),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," source"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," tsinghua-pypi"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://pypi.tuna.tsinghua.edu.cn/simple")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])])]),i("li",null,[a("手动换源：编辑 "),i("code",null,"pyproject.toml"),i("div",{class:"language-toml line-numbers-mode","data-highlighter":"shiki","data-ext":"toml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[["),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"tool"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"source"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]]")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"name"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"tsinghua-pypi"')]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"url"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"https://pypi.tuna.tsinghua.edu.cn/simple"')]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"priority"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"default"')])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])])],-1),i("h5",{id:"基本命令",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#基本命令"},[i("span",null,"基本命令")])],-1),i("ul",null,[i("li",null,[a("新建项目："),i("code",null,"poetry new <package name>"),i("ul",null,[i("li",null,[a("创建 .toml 文件："),i("code",null,"poetry init"),a("，然后跟着提示填入信息")])])]),i("li",null,[a("包管理 "),i("ul",null,[i("li",null,[a("添加包："),i("code",null,"poetry add <package name>")]),i("li",null,[a("移除包："),i("code",null,"poetry remove <package name>")]),i("li",null,[a("列出可用包："),i("code",null,"poetry show")])])]),i("li",null,[a("安装依赖 "),i("ul",null,[i("li",null,[a("从现有 "),i("code",null,"pyproject.toml"),a(" 安装："),i("code",null,"poetry install"),a("，会自动新建虚拟环境")]),i("li",null,[a("从 "),i("code",null,"requirements.txt"),a(" 安装（不够完善）："),i("code",null,`cat requirements.txt | xargs -I % sh -c 'poetry add "%"'`),a(" ("),i("a",{href:"https://stackoverflow.com/questions/62764148/#comment125542108_62787881",target:"_blank",rel:"noopener noreferrer"},"ref"),a(")")])])]),i("li",null,[a("虚拟环境 "),i("ul",null,[i("li",null,[a("激活："),i("code",null,"poetry shell"),a("（或在虚拟环境目录执行 "),i("code",null,"call activate.bat"),a("）")]),i("li",null,[a("删除："),i("code",null,"poetry env remove --all")])])]),i("li",null,[a("运行："),i("code",null,"poetry run python <filename>.py")])],-1)])),tab3:l(({value:e,isActive:t})=>[s[34]||(s[34]=i("h4",{id:"miniconda",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#miniconda"},[i("span",null,"miniconda")])],-1)),s[35]||(s[35]=i("p",null,"提供 python 包管理与虚拟环境。我已弃用 miniconda。",-1)),i("p",null,[s[20]||(s[20]=a("Anaconda 体积过于庞大（6G+），")),s[21]||(s[21]=i("strong",null,[a("强烈建议"),i("a",{href:"https://docs.conda.io/en/latest/miniconda.html",target:"_blank",rel:"noopener noreferrer"},"安装 miniconda")],-1)),s[22]||(s[22]=a("。")),s[23]||(s[23]=i("span",{class:"heimu",title:"你知道的太多了"},"Anaconda 捆绑祸害了多少编程新人！（包括我）",-1)),s[24]||(s[24]=a(" windows 可以使用 ")),n(k,{to:"/farraginous/recommend_packages.html#scoop"},{default:l(()=>s[19]||(s[19]=[a("scoop")])),_:1}),s[25]||(s[25]=a(" 一行搞定。"))]),s[36]||(s[36]=i("h5",{id:"基本命令-1",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#基本命令-1"},[i("span",null,"基本命令")])],-1)),s[37]||(s[37]=i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," create"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -n"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"nam"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"e> "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"python="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"versio"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"n> "),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 创建环境")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," create"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -n"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"nam"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"e> "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"--clone"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"FromEnv"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"<"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"nam"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"e>>    "),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 迁移环境")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," info"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -e"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"   # 查看环境")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," activate"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"nam"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"e> "),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 唤醒环境")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," deactivate"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"    # 关闭环境")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," remove"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -n"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"nam"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"e> "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"--all"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"  # 删除环境，也可进入 conda 安装目录下的 /envs/ 删除文件夹")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," list"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"  # 查看环境内工具包")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)),s[38]||(s[38]=i("h5",{id:"高级技巧",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#高级技巧"},[i("span",null,"高级技巧")])],-1)),i("ul",null,[s[33]||(s[33]=i("li",null,[a("bat 文件中调用 conda 指令：调用前加入"),i("code",null,"call activate.bat"),a("指令")],-1)),i("li",null,[s[26]||(s[26]=a("创建纯净环境：我们使用")),s[27]||(s[27]=i("a",{href:"#%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4"},"上述指令",-1)),s[28]||(s[28]=a("创建环境后，可以看到，conda 帮我们预装了很多实际上没什么用的包，这无疑会让打包出的程序增加不必要的体积。")),n(d,{alt:"anaconda_list",src:"/images/coding/python/anaconda_1.png",scale:"65%"}),s[29]||(s[29]=a("这里给出一个解决方法： ")),s[30]||(s[30]=i("ol",null,[i("li",null,[a("在任意目录下新建文件，输入以下内容并保存为 "),i("code",null,"env.txt"),a("（名字不重要）。")])],-1)),s[31]||(s[31]=i("div",{class:"language-batch line-numbers-mode","data-highlighter":"shiki","data-ext":"batch",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"@EXPLICIT")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/win-64/python-3.9.7-h6244533_1.tar.bz2")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/win-64/pip-21.2.4-py39haa95532_0.tar.bz2")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/win-64/setuptools-58.0.4-py39haa95532_0.tar.bz2")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)),s[32]||(s[32]=i("ol",{start:"2"},[i("li",null,[a("该目录下执行"),i("code",null,"conda create --name <name> --file env.txt"),i("img",{src:B,alt:"anaconda_pureenv",loading:"lazy"}),a(" 这样，一个纯净环境就创建好了，你可以"),i("a",{href:"#pyinstaller"},"安装 Pyinstaller"),a("进行打包前的准备。")])],-1))])])]),tab4:l(({value:e,isActive:t})=>s[39]||(s[39]=[i("h4",{id:"pip",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#pip"},[i("span",null,"pip")])],-1),i("p",null,"python（windows 下）自带的包管理器。其使用一个全局环境，如果需要局部环境，需要与 venv 结合。",-1),i("p",null,[a("pip 使用 "),i("code",null,"requirements.txt"),a(" 用于声明项目依赖，使用时只需 "),i("code",null,"pip install -r requirements.txt"),a(" 即可。该文件可以用 pip 导出，也可以自己写模块。可以不写版本，只写每行一个模块名。")],-1)])),tab5:l(({value:e,isActive:t})=>s[40]||(s[40]=[i("p",null,"还有一些 rewrite to rust 的包管理器，例如 rye, pixi，底层调用的都是 uv。它们也没有更多吸引我的 feature，因此只需要用 uv 就行了。",-1)])),_:1}),s[95]||(s[95]=h(`<h2 id="语言相关" tabindex="-1"><a class="header-anchor" href="#语言相关"><span>语言相关</span></a></h2><h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h3><ul><li>python 函数传参跟其他语言很像，基本类型是值传递，object, list, dict 是引用传递。 <ul><li>不想传引用就有深拷贝和浅拷贝，这个应该是编程基本概念而不是语言基本概念。</li></ul></li><li>python 的类型标注只会报警告，运行时不检查。</li><li>python 不支持重载。</li><li>python 的 OOP 是残缺的，即使可以靠一些<a href="#decorator">装饰器</a>逼近。</li><li>比较偏门的是，<code>else</code> 可以与 <code>try-catch</code> 或 <em>循环</em> 一起使用。</li></ul><h3 id="作用域" tabindex="-1"><a class="header-anchor" href="#作用域"><span>作用域</span></a></h3><p>每个函数自身是一个作用域。python 在作用域内部可以直接读取外部作用域变量，但是无法修改。想要修改外部作用域变量，需要进行“捕获”（非专业用词），使用 <code>global xxx</code> 捕获全局变量，使用 <code>nonlocal xxx</code> 捕获上一级变量。在捕获变量后就可以修改了：<code>xxx = 1</code>，并且可以在其他作用域看到这一次修改。</p><h3 id="错误处理" tabindex="-1"><a class="header-anchor" href="#错误处理"><span>错误处理</span></a></h3><ul><li>py 错误处理偏向传统的异常处理。主要关键字是 <code>try</code>, <code>except</code>, <code>else</code>, <code>finally</code>。</li><li><code>finally</code> 能在 <code>return</code> 和 <code>exit</code> 时执行，但不能在 SYSTERM，<code>os._exit()</code> 时执行。<a href="https://www.youtube.com/watch?v=lmhFLrdGQjo" target="_blank" rel="noopener noreferrer">src</a></li></ul><h3 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h3><p>每个目录 / <code>.py</code> 文件都被视作一个模块。目录模块要添加内容，要写在目录下的 <code>__init__.py</code>。</p><p><code>import xxx</code> 在顶层找模块，<code>import ./xxx</code> 是在当前目录找模块，<code>../</code> 在上一层找。后两者都是相对引用。使用相对引用时，不能直接 <code>python xxx.py</code> 执行代码，需要 <code>python -m &lt;root_module&gt;.&lt;submodule&gt;</code> 当成模块执行。否则报 <code>ImportError: attempted relative import with no known parent package</code>。</p><p><code>import</code> 和 <code>from import</code> 都会导入整个模块，即使只用 <code>from import</code> 导入了一个函数。模块不能循环导入（不能在 A 中 import B，在 B 中 import A），即模块引用结构需要是 DAG。</p><h3 id="print" tabindex="-1"><a class="header-anchor" href="#print"><span>print</span></a></h3><p>打印错误信息的时候记得加 <code>file=sys.stderr</code>，打到 <code>stderr</code>。很容易忘。</p><h3 id="assert" tabindex="-1"><a class="header-anchor" href="#assert"><span>assert</span></a></h3><blockquote><p>都写 py 了，性能已经不敏感了，不如多做点防御性编程。</p></blockquote><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">assert</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> need_be_true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;error message&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>assert 的 error message 不是 &amp; 不能改红色，还会打堆栈，让我很不爽。</p><p>实际上在使用测试时基本上用的都是测试框架自己的 assert，优势是可以打印值。用系统 assert 一般只是拿来防御性编程。</p><h3 id="传参" tabindex="-1"><a class="header-anchor" href="#传参"><span>传参</span></a></h3><ul><li>解耦：<code>*</code> 是解 list，<code>**</code> 是解 dict。<div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(a, b)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">l </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;b&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">fun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(**l)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>但是要注意，使用条件很严格，参数不能多也不能少。我没有找到一个比较好的设置 default 的方法。</li><li>多参：类似的。这个倒是能较为简单地 set default。<div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> **</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    kwargs.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">setdefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;c&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    pass</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">fun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># args: [1, 2]  kwargs: {&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="generator" tabindex="-1"><a class="header-anchor" href="#generator"><span>Generator</span></a></h3><p>Generator 其实是一个跨语言的概念，函数在执行到一半时可以先中断，将值传回，函数本身暂停；等到下次调用时再从中断处继续运行。</p><p>在函数里使用 yield 中断并返回值，函数本身就变成了 Generator，可以通过 <code>next(gen)</code> 推动 generator 执行一次。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    yield</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(b))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>python 的 Generator 还可以传入值。这个用的少，第一次见到也不容易读懂用法。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> yield</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(c))</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(c.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 输出：2 1 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先 Generator 执行到 <code>yield 2</code>，返回 2；接着向其 send 一个 1，Generator 将 <code>(yield 2)</code> 本身作为 1，继续执行，打印出 1，并在下一次 <code>yield 2</code> 返回。相当于一个传值 + next。</p><h3 id="并发" tabindex="-1"><a class="header-anchor" href="#并发"><span>并发</span></a></h3><p>多线程（threading）和多进程（multiprocessing）属于比较重的并发，用于计算密集型，不适用于网络 &amp; IO。一般网络等使用 asyncio 进行协程并发。</p><p>下面是一个用协程的例子。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asyncio</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> xxx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        a.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">xxx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(i))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asyncio.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">gather</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*a)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">asyncio.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打印 1-10，表明 gather 的结果是有序的。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>python 的 async/await 也具有染色性质，导致很多地方同一个代码要写 async 和非 async 两个版本，这是当前版本的一个痛点，<a href="https://www.bilibili.com/video/av113593110502112/" target="_blank" rel="noopener noreferrer">还没有优雅的解决方法</a>。</p><p>也有一些第三方库，例如 anyio 和 trio，可以用于并发，但是我觉得那些 API 的设计都不算太好，asyncio 就够用了。</p><h2 id="语法糖" tabindex="-1"><a class="header-anchor" href="#语法糖"><span>语法糖</span></a></h2><h3 id="format-string" tabindex="-1"><a class="header-anchor" href="#format-string"><span>format string</span></a></h3><p>只要不是对向前兼容性要求非常高的程序，一般都使用 f-string (&gt;=python 3.6)，而不是 <code>%</code> 这种老方法了。<s>你喜欢 cout 还是 printf？</s></p><p>不讲太多格式化，讲一个：</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># a = 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打日志挺方便的。</p><h3 id="map-filter" tabindex="-1"><a class="header-anchor" href="#map-filter"><span>map &amp; filter</span></a></h3><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">**</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># b = [1, 4]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然也有正经的 <code>map()</code> &amp; <code>filter()</code>，不过还要转回 <code>list</code>，还要嵌套一堆括号，看着确实丑。</p><h3 id="supress" tabindex="-1"><a class="header-anchor" href="#supress"><span>supress</span></a></h3><p>“抑制”</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> contextlib </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> suppress</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> suppress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    something_could_go_wrong</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 能少写两行。等价于</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># try:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     something_could_go_wrong()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># except Exception:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#     pass</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="walrus-operator" tabindex="-1"><a class="header-anchor" href="#walrus-operator"><span><a href="https://www.freecodecamp.org/chinese/news/introduction-to-the-walrus-operator-in-python/" target="_blank" rel="noopener noreferrer">walrus operator</a></span></a></h3><p><code>if</code> 和 <code>while</code> 里创建临时变量用的。简单清晰，容易控制生命周期。可惜局限性还是挺大的。</p><h3 id="decorator" tabindex="-1"><a class="header-anchor" href="#decorator"><span>Decorator</span></a></h3><p>装饰器本质上是回调的语法糖。<a href="#external">external 3.</a> 是一篇讲的很好的装饰器文章。<a href="#external">external 9.</a> 介绍了装饰器与 class 混杂使用的技巧。</p><h4 id="builtin-decorators" tabindex="-1"><a class="header-anchor" href="#builtin-decorators"><span>builtin decorators</span></a></h4><p><a href="https://www.geeksforgeeks.org/top-python-built-in-decorators-that-optimize-python-code-significantly/" target="_blank" rel="noopener noreferrer">这篇文章</a>讲了一些常用的自带装饰器，主要是重载，OOP。</p><ul><li><code>functools.lru_cache</code>：当函数入参相同时，重复利用缓存。 <ul><li>也有一个 <code>functools.cache</code>，== <code>lru_cache(maxsize=None)</code> (<a href="https://stackoverflow.com/questions/70301475/" target="_blank" rel="noopener noreferrer">ref</a>)</li></ul></li><li><a href="https://docs.python.org/zh-cn/3/library/dataclasses.html" target="_blank" rel="noopener noreferrer"><code>dataclasses.dataclass</code></a>：自动生成函数，简化开发。</li></ul><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match"><span>match</span></a></h3><p>python 在 3.10 引入了 <code>match</code> 语法，并且可以在 case 中接 if。但是 match 有两个缺点：</p><ol><li>3.10 对保守派是很高的要求。对于一些老库来说，为了兼容性考虑，它们往往不会选择 <code>match</code>。</li><li>match 和 case 需要两个缩进，而 <code>if-elif</code> 链只需要一个缩进。</li></ol><h2 id="自带模块" tabindex="-1"><a class="header-anchor" href="#自带模块"><span>自带模块</span></a></h2><p>这里的模块都不需要额外安装。python 自带。</p><h3 id="pprint" tabindex="-1"><a class="header-anchor" href="#pprint"><span><a href="https://docs.python.org/3/library/pprint.html" target="_blank" rel="noopener noreferrer">pprint</a></span></a></h3><p>pretty-print，打印嵌套数据结构比较好看。<strong>pprint 不能打印 object 信息。</strong></p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pprint </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pprint</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">pprint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># {&#39;a&#39;: 1, &#39;b&#39;: 2}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">pprint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(an_obj)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;__main__.o object at 0x00000234DC0FAF60&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="configparser" tabindex="-1"><a class="header-anchor" href="#configparser"><span>configparser</span></a></h3><p>configparser 做 config 对客户而言比较<strong>新手友好</strong>，至少不会像 json 那样多加或少加尾随逗号 <code>,</code>。</p><p>当然现在用自定义 ini 已经 out 了，否则兼容性非常差。尽可能使用 toml/json/yaml 等通用格式才是正道。特别是 toml 和大部分 ini 长得都挺像的，迁移也方便。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> configparser </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ConfigParser</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">config </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> ConfigParser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">config.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;config.ini&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)                   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 读</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">config.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(section, option, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">fallback</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取（带默认值）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">config[section][option] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> value             </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 新增 / 修改</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;config.ini&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;w&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> configfile:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  config.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(configfile)                  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 写</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>configparser 被设计成尽可能兼容所有 config，因此可以自定义分隔符，注释符等。</p><h3 id="subprocess" tabindex="-1"><a class="header-anchor" href="#subprocess"><span><a href="https://docs.python.org/zh-cn/3/library/subprocess.html" target="_blank" rel="noopener noreferrer">subprocess</a></span></a></h3><p>写脚本必不可少的东西，可以向终端发出信息。代替 <code>os.system()</code>。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> subprocess </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> run  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 官方建议使用 run 代替所有其他低阶函数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ls&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-al&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">check</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># check=True 表示遇到错误则发出异常，= run(..).check_returncode()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ls | grep py&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">shell</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># shell=True 无需拆分命令，如果碰到管道或复杂指令还是不要难为自己</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ls&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-al&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">capture_output</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).stdout </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 以字符串获取输出</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pathlib" tabindex="-1"><a class="header-anchor" href="#pathlib"><span><a href="https://docs.python.org/3/library/pathlib.html" target="_blank" rel="noopener noreferrer">pathlib</a></span></a></h3><p>操作文件的高阶抽象。用过 pathlib 以后就再也回不去 os 了（）</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pathlib </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;123&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 碰到不清楚是 str 还是 Path 的路径，可以无脑转为 Path</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xxx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;asd&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 连接路径（理解为重载了 / 号）</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xxx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">absolute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 返回绝对路径字符串</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a.py&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read_text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;utf-8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 读取，write_text 是写入</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a.db&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read_bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 读取，write_bytes 是写入</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a.py&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">unlink</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a.py&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">rmdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除文件夹</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 也可以做到创建（touch），改权限（chown），链接（hardlink_to）等等，边用边搜。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="timeit" tabindex="-1"><a class="header-anchor" href="#timeit"><span>timeit</span></a></h3><p>benchmark.</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> timeit </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> timeit</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    pass</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">timeit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(a,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">number</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pickle" tabindex="-1"><a class="header-anchor" href="#pickle"><span>pickle</span></a></h3><p>对象序列化极为简单无脑。弱类型语言的大优势。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pickle</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">soup </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> BeautifulSoup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(response.content, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;html.parser&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;soup.test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;wb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    pickle.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">dump</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(soup, f)    </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># serialize</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;soup.test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;rb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    soup </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pickle.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(f)   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># deserialize</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以用 pickle 实现<a href="https://github.com/lxl66566/init-script/blob/py/mycache.py" target="_blank" rel="noopener noreferrer">一个简单的 cache</a>。</p><h3 id="urllib" tabindex="-1"><a class="header-anchor" href="#urllib"><span>urllib</span></a></h3><p>处理 url 请使用 urllib，否则<a href="https://t.me/withabsolutex/1479" target="_blank" rel="noopener noreferrer">怎么死的都不知道</a>。</p><p>构造 url 可以用 <code>posixpath.join()</code> + <code>urllib.parse.join()</code> (<a href="https://stackoverflow.com/questions/8223939" target="_blank" rel="noopener noreferrer">ref</a>)</p><h3 id="tempfile" tabindex="-1"><a class="header-anchor" href="#tempfile"><span>tempfile</span></a></h3><p>跨平台获取临时文件夹。用来测试文件操作比较好用。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tempfile </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> TemporaryDirectory</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> TemporaryDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tmp_dir:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    tmp_dir </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tmp_dir)   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># tmp_dir 是 str</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 离开作用域自动销毁</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pytest 有<a href="https://docs.pytest.org/en/stable/how-to/tmp_path.html" target="_blank" rel="noopener noreferrer">内置 tmp_dir</a>。</p><h2 id="常用外部包" tabindex="-1"><a class="header-anchor" href="#常用外部包"><span>常用外部包</span></a></h2><h3 id="pandas" tabindex="-1"><a class="header-anchor" href="#pandas"><span>pandas</span></a></h3><p>数据表处理库，一般用来处理 ms 那堆玩意。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pandas </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pd</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">ExcelFile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a.xlsx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sheet_names:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    sheet </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pd.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read_excel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">sheet_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">name)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> _, row </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sheet.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">iterrows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(row[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;姓名&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我个人是不喜欢用 pandas 的，因为它的语法过于晦涩诡异<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>。如果需要读取 csv/xlsx，可以查看 <a href="#external">external 5. Fastest Way to Read Excel in Python</a> 选择其他工具。</p><p>一行代码更换 pandas 后端，可以大幅提升读取速度。(<a href="https://datapythonista.me/blog/how-fast-can-we-process-a-csv-file" target="_blank" rel="noopener noreferrer">src</a>)</p><h2 id="第三方包推荐" tabindex="-1"><a class="header-anchor" href="#第三方包推荐"><span>第三方包推荐</span></a></h2><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>log</span></a></h3><p>虽然 python 有自带的 logging，但是用得多了，每次写项目前起手一长串配置确实有点烦人。所以我现在用 <a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener noreferrer">loguru</a>，直接 <code>from loguru import logger</code> 然后正常用就行，自带彩色输出，配置起来也简单。</p><h3 id="网络" tabindex="-1"><a class="header-anchor" href="#网络"><span>网络</span></a></h3><p>python 界最常用的网络库 requests 是不支持 async 的！然而网络不能没有 async，因此建议大家可以直接抛弃 request 换用其他的库，这样也符合解耦论。</p><p>一个选择是大声对标 requests 的 <a href="https://github.com/spyoungtech/grequests" target="_blank" rel="noopener noreferrer">grequests</a>，但是我看了一下 README 里的 API，内部 async 但是不在外部暴露，虽然 99% 的网络需求都能通过 batch process 解决，但是不暴露 async 还是不够解耦不够自由。</p><p>aiohttp 是一个真正的 async 网络库，甚至同时支持 server/client mode。它暴露所有 async 接口，并且与 python 标准的 asyncio 配合，拥有较高的可扩展性，可以实现复杂需求。要我说缺点的话，那就是线程池 session 对用户不是无感知的，比全局 context poll 要差。</p><h3 id="命令行参数" tabindex="-1"><a class="header-anchor" href="#命令行参数"><span>命令行参数</span></a></h3><ul><li>python 自带了一个 argparse 模块用于命令行 parse。虽然由于有官方支持，这个包是命令行参数 parse 中最泛用的一个，但是用起来还是不够顺手，语法也比较丑。<a href="https://github.com/lxl66566/bpm/blob/d4063a31b8132c6ce19263f16d6f8b959a797017/bpm/cli.py" target="_blank" rel="noopener noreferrer">这里</a>是一个例子（我写的 bin-package-manager 用的 argparse），足以看出其不直观之处。</li><li><a href="https://click-docs-zh-cn.readthedocs.io/zh/latest/" target="_blank" rel="noopener noreferrer">click</a> 是一个专门用于命令行参数 parse 的库，它使用装饰器嵌套的方式实现简洁直观的语法。缺点是自由度不高，不适合太大的项目。 <ul><li>如果需要 short command 还需要引入 <a href="https://pypi.org/project/click-aliases/" target="_blank" rel="noopener noreferrer">click-aliases</a>。</li></ul></li><li>此外还有 <a href="https://github.com/dancardin/cappa" target="_blank" rel="noopener noreferrer">cappa</a> 库使用 dataclass 进行命令行 parse，模仿的是 rust 的 clap derived。这个方式同样也非常直观，不过该库在 2025 年还处于开发早期阶段，暂时不建议使用。</li><li><a href="https://github.com/google/python-fire" target="_blank" rel="noopener noreferrer">python-fire</a> 是 Google 官方的命令行工具，它致力于“把任何函数或其他东西变成命令行工具”。但是我认为它的语义设计本来就有问题，主打简单的结果就是扩展性差，很多时候没法清晰地表达我的复杂诉求。</li></ul><h3 id="命令行交互" tabindex="-1"><a class="header-anchor" href="#命令行交互"><span>命令行交互</span></a></h3><p>很多时候我们需要让用户在几个选项中选择一个。自己写 input 的话还需要处理许多边缘情况，不如直接用现成的库。为了用户方便，我们甚至可以使用 TUI 进行引导。我尝试了一些库，在这里做一个总结。</p><ul><li><a href="https://github.com/tmbo/questionary" target="_blank" rel="noopener noreferrer">questionary</a>：完美匹配需求，建议直接用</li><li><a href="https://github.com/IngoMeyer441/simple-term-menu" target="_blank" rel="noopener noreferrer">simple-term-menu</a>：不支持 windows；返回值的 typing 爆炸</li><li><a href="https://github.com/aegirhall/console-menu" target="_blank" rel="noopener noreferrer">console-menu</a>：不支持 interactive，与需求不符</li><li><a href="https://github.com/BaggerFast/PyConsoleMenu" target="_blank" rel="noopener noreferrer">PyConsoleMenu</a>：打包炸了，没法安装；底层的 windows-curses 有 bug <ul><li><a href="https://github.com/lxl66566/PyConsoleMenu2" target="_blank" rel="noopener noreferrer">PyConsoleMenu2</a>：我自己 fork 了一个，解决打包问题，但是 windows-curses bug 还没解决，就是使用中文做标题/选项时在 windows 上会有奇怪的缩进。</li></ul></li><li><a href="https://github.com/luanws/pymenu" target="_blank" rel="noopener noreferrer">pymenu</a>：极简 + full typing，但是只有颜色区分，不支持 prefix arrow，不直观</li></ul><h3 id="tui" tabindex="-1"><a class="header-anchor" href="#tui"><span>TUI</span></a></h3><ul><li><a href="https://github.com/Textualize/rich" target="_blank" rel="noopener noreferrer">rich</a> 一家独大。不过都用 python 了，为什么不直接上 GUI 呢？好用的 GUI 也很多。</li></ul><h3 id="gui" tabindex="-1"><a class="header-anchor" href="#gui"><span>GUI</span></a></h3><p>一些 GUI 框架。（大部分都没用过）</p><ul><li><a href="https://github.com/TomSchimansky/CustomTkinter" target="_blank" rel="noopener noreferrer">CustomTkinter</a></li><li><a href="https://github.com/PySimpleGUI/PySimpleGUI" target="_blank" rel="noopener noreferrer">PySimpleGUI</a>：真的很简单 / 简陋，but it works</li><li><a href="https://github.com/zauberzeug/nicegui" target="_blank" rel="noopener noreferrer">nicegui</a>：基于 web 的</li><li><a href="https://github.com/ParthJadhav/Tkinter-Designer" target="_blank" rel="noopener noreferrer">Tkinter-Designer</a></li><li><a href="https://github.com/flet-dev/flet" target="_blank" rel="noopener noreferrer">Flet</a>：跨平台 Flutter 应用</li><li><a href="https://beeware.org/" target="_blank" rel="noopener noreferrer">BeeWare</a>（toga）：原生跨平台</li></ul><h4 id="customtkinter" tabindex="-1"><a class="header-anchor" href="#customtkinter"><span>CustomTkinter</span></a></h4><p>用过，文档没搜索功能，该有回调的地方不给回调，关联变量只能 get 不能 set。。。</p><p>系统需要有 tkinter，例如 archlinux 需要安装 <code>tk</code>。</p><h3 id="爬虫与自动化" tabindex="-1"><a class="header-anchor" href="#爬虫与自动化"><span>爬虫与自动化</span></a></h3><p>我其实只会一点简单的爬虫。简单的就 <code>request</code> + <code>fake-useragent</code> + <code>BeautifulSoup4</code> html 解析，复杂一点的话直接模拟浏览器。</p><h4 id="模拟浏览器" tabindex="-1"><a class="header-anchor" href="#模拟浏览器"><span>模拟浏览器</span></a></h4><p>之前用过 <code>playright</code> 做一些疫情时的健康打卡相关（学长的项目），感觉一般。</p><p>然后寻找其他框架，发现一个国人写的 <a href="https://github.com/g1879/DrissionPage" target="_blank" rel="noopener noreferrer">DrissionPage</a>，虽然比较青涩，但是做一些简单的自动化非常简单。顺带提了个微小改进使用体验的 pr。</p><p>DrissionPage 用的是自创的元素选择器，需要看<a href="http://g1879.gitee.io/drissionpagedocs/SessionPge/find_elements" target="_blank" rel="noopener noreferrer">文档</a>。</p><p>以下是一个简单的样例。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> DrissionPage </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ChromiumPage</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">page </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> ChromiumPage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">page.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://public.ecustpt.eu.org/mybonus.php&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">buttons </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> page.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">eles</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tag:input&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> buttons[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">attr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    i.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图表绘制" tabindex="-1"><a class="header-anchor" href="#图表绘制"><span>图表绘制</span></a></h3><p>用得最多的肯定是 matplotlib，但是它是从 matlab 过来的，而 matlab 的 API 设计是真的捞，写起来难受。所以有一些新的库可以尝试：</p><ul><li><a href="https://github.com/plotly/plotly.py" target="_blank" rel="noopener noreferrer">plotly</a>：star 数比 seaborn 高，API 看着还行。但是这玩意是基于前端的，图片导出麻烦。</li><li><a href="https://seaborn.pydata.org/tutorial.html" target="_blank" rel="noopener noreferrer">seaborn</a>：基于 matplotlib 包装的高级 API。</li></ul><h2 id="图像相关" tabindex="-1"><a class="header-anchor" href="#图像相关"><span>图像相关</span></a></h2><p>图像相关基本就是 PIL 和 opencv 的天下了。不过能用 PIL 的我都不会用 opencv，因为 opencv binding API 本来就抽象，typing 一坨大便，打包还麻烦。把 PIL 的 Image 当成是标准的图像对象是一个符合工程实践的操作。</p>`,124)),n(r,{id:"951",data:[{id:"从网站获取图片"},{id:"截屏"},{id:"多图片转 pdf"},{id:"Image 对象转为 bytes"},{id:"高斯模糊"}]},{title0:l(({value:e,isActive:t})=>s[41]||(s[41]=[a("从网站获取图片")])),title1:l(({value:e,isActive:t})=>s[42]||(s[42]=[a("截屏")])),title2:l(({value:e,isActive:t})=>s[43]||(s[43]=[a("多图片转 pdf")])),title3:l(({value:e,isActive:t})=>s[44]||(s[44]=[a("Image 对象转为 bytes")])),title4:l(({value:e,isActive:t})=>s[45]||(s[45]=[a("高斯模糊")])),tab0:l(({value:e,isActive:t})=>s[46]||(s[46]=[i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," requests")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"from"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#D19A66"}}," PIL"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," Image")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"from"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," io "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," BytesIO")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"response "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," requests."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"get"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(src)")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"image "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," Image."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"open"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"BytesIO"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(response.content))")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"image."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"show"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:l(({value:e,isActive:t})=>s[47]||(s[47]=[i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"from"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#D19A66"}}," PIL"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ImageGrab")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"img "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ImageGrab."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"grab"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#E06C75","--shiki-dark-font-style":"italic"}},"bbox"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1920"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1080"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"))   "),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 注意改为你需要截屏的分辨率")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab2:l(({value:e,isActive:t})=>[i("p",null,[s[49]||(s[49]=a("我现在使用 ")),n(k,{to:"/learning/typst.html"},{default:l(()=>s[48]||(s[48]=[a("typst")])),_:1}),s[50]||(s[50]=a("，这个代码还是作废吧。"))]),s[51]||(s[51]=i("div",{class:"language-py line-numbers-mode","data-highlighter":"shiki","data-ext":"py",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," img2pdf")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"temp "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ["),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"BytesIO"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#D19A66"}},"..."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"), "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"BytesIO"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#D19A66"}},"..."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")]")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# temp 也可以是字符串数组，包含本地图片路径")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"with"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," open"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'第二册答案.pdf'"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"wb"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},") "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"as"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," f:")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    write_content "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," img2pdf."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"convert"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(temp)")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    f."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"write"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(write_content)")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1))]),tab3:l(({value:e,isActive:t})=>s[52]||(s[52]=[i("p",null,"有时候需要对图片对象转为字节码以在不同函数间流通。（不统一对象的坏处）",-1),i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," io")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"def"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," img2Byte"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#D19A66","--shiki-dark-font-style":"italic"}},"img"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#ABB2BF"}},"Image"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},") -> "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"bytes"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    imgByte"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"io."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"BytesIO"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    img."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"save"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(imgByte,"),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#E06C75","--shiki-dark-font-style":"italic"}},"format"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'JPEG'"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"    byte_res"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"imgByte."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"getvalue"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"    return"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," byte_res")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab4:l(({value:e,isActive:t})=>s[53]||(s[53]=[i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"from"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#D19A66"}}," PIL"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," Image,ImageFilter")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"img "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," img."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"filter"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"(ImageFilter."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"GaussianBlur"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#E06C75","--shiki-dark-font-style":"italic"}},"radius"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1.5"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"))")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,"使用此内置函数进行高斯模糊将无法改变 sigma 的值。",-1)])),_:1}),s[96]||(s[96]=h(`<h2 id="orm" tabindex="-1"><a class="header-anchor" href="#orm"><span>ORM</span></a></h2><p>ORM (Object-relational mapping)，数据关系映射。此处特指 python 实现的数据库 ORM。</p><p>最出名的 python ORM 应该是 sqlalchemy 吧。但是其文档比较烂，我觉得其设计并不哲学。所以我个人不喜欢这个。</p><p>然后是 django 的基于 model 的内置 ORM，由于使用 django 的人较多，因此也比较有影响力。我在下面有<a href="#%E6%95%B0%E6%8D%AE%E5%BA%93">提到这个</a>。</p><p>读过 <a href="https://docs.ponyorm.org/" target="_blank" rel="noopener noreferrer">pony</a> 的文档与 tutorial 后，我觉得这个设计不错。</p><blockquote><p>这些文章 (<a href="https://nelsonslog.wordpress.com/2022/07/04/very-simple-python-orms/" target="_blank" rel="noopener noreferrer">1</a> <a href="https://stackoverflow.com/questions/53428/what-are-some-good-python-orm-solutions" target="_blank" rel="noopener noreferrer">2</a>) 也介绍了一些其他 ORM。</p></blockquote><h2 id="后端框架" tabindex="-1"><a class="header-anchor" href="#后端框架"><span>后端框架</span></a></h2><h3 id="django" tabindex="-1"><a class="header-anchor" href="#django"><span>django</span></a></h3><p>django 能够快速搭建一个网站。</p><p>django 的前后端是深度耦合的，前端大概只能使用传统三件套（但是据说可以用 GraphQL 做中间层与框架式前端进行交互，没试过），后端自然就是 python 了。</p><h4 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库"><span>数据库</span></a></h4><blockquote><p>由于我平常接触的不是 django 开发而是运维，所以这里主要讲讲数据库内容。</p></blockquote><p>django 做了自己的基于模型的 ORM。django 官方支持<a href="https://docs.djangoproject.com/en/4.2/ref/databases/#databases" target="_blank" rel="noopener noreferrer">这些数据库</a>。</p><p>首先进行数据库操作前需要选择 model（可以理解为选表）。具体看 <code>models.py</code> 的实现。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Djangoxxx.models </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">module_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后根据需求选出 object 或者 queryset.</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">module_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.objects.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">all</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">obj </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">module_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.objects.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;xxx&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">module_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.objects.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">FinishTime__range</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">datetime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2023</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">datetime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2023</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)])  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 区间筛选 datetime</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再进行进一步处理。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> qs.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">values_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;price&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">flat</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取某一列(colume)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(c[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])             </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 然后类似 list 形式操作取值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">obj </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> qs.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;xxx&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可以从 queryset 中取 object</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(obj.id)           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 然后从 object 中取值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>取了值就可以爱干啥干啥了。我不太习惯高层次的抽象，因此类似求和啥的虽然 django 也提供了 <code>django.db.models.Sum</code>，但有查文档的功夫早都写好了，还是自己做吧。</p><h2 id="调试" tabindex="-1"><a class="header-anchor" href="#调试"><span>调试</span></a></h2><p>python 自带一个 pdb 调试器，非常方便，功能也很强大。Python 3.11 - 3.13 里 pdb 有许多改进。</p><p>使用：在程序中插入一个 <code>breakpoint()</code> 即可进入 pdb。</p><p>常见 pdb 命令：</p>`,24)),y(" prettier-ignore "),s[97]||(s[97]=h(`<table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>c (continue)</td><td>继续运行</td></tr><tr><td>n (next)</td><td>下一步（不进入函数）</td></tr><tr><td>s (step)</td><td>下一步（进入函数）</td></tr><tr><td>l (list)</td><td>打印当前程序代码</td></tr><tr><td>p (print)</td><td>打印</td></tr><tr><td>pp (pprint)</td><td>美观打印</td></tr><tr><td>! (!var=xxx)</td><td>更改变量</td></tr></tbody></table><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><p>python 测试的最佳实践是将测试写在模块外的 <code>tests/</code> 里，但我并不喜欢。</p><h3 id="unittest" tabindex="-1"><a class="header-anchor" href="#unittest"><span>unittest</span></a></h3><p>我比较习惯单元测试，即将 test 函数与本身的定义写在一个文件里。因此可以直接使用最简单的 test 形式：</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test_xxx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        pass</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    test_xxx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，最好用自带的 unittest 包装一下，可以获取测试时间等。unittest 基础使用非常简单，具体的可以看文档用例。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unittest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">**</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.py</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 测试当前文件夹下所有 unittest，类似 \`pytest .\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但是 unittest 有个致命缺陷就是它支持 async function，但是不支持异步执行。。我非常无语。</p><h3 id="pytest" tabindex="-1"><a class="header-anchor" href="#pytest"><span>pytest</span></a></h3><p>这是一个复杂的测试框架。显然其支持异步执行测试用例，还有其他方便的特性。</p><p>使用 pytest 一般需要将测试代码放在其他文件里而不是代码所在文件，因为其对于 test 的文件名与函数名有特殊要求：代码文件名与函数名都需要以 <code>test_</code> 开头或以 <code>_test</code> 结尾才会被默认测试。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Google 中文用户搜 pytest 出来的第一个文档是 <a href="https://learning-pytest.readthedocs.io/zh/latest/doc/test-function/mark.html" target="_blank" rel="noopener noreferrer">learning pytest</a>，但是请不要看这个。比如它关于上述的 函数名/文件名限制 说的就是错的。</p></div><ul><li>测试某个函数：<code>pytest &lt;relative_path&gt;::&lt;function_name&gt;</code></li><li>永远显示 stdout 输出（包括 pass 时）：<code>-s</code></li></ul><h3 id="兼容性测试" tabindex="-1"><a class="header-anchor" href="#兼容性测试"><span>兼容性测试</span></a></h3><p>有时候需要跨 python 版本进行测试，或者找到最小支持的 Python 版本（Minimal supported Python version）。</p><p>首先，最朴素的手动测试要求电脑上安装不同的 python 版本。很多包管理器都不负责管理 python 版本，但是有一些可以：</p>`,17)),n(o,{id:"1173",data:[{id:"uv"},{id:"poetry"}]},{title0:l(({value:e,isActive:t})=>s[54]||(s[54]=[a("uv")])),title1:l(({value:e,isActive:t})=>s[55]||(s[55]=[a("poetry")])),tab0:l(({value:e,isActive:t})=>s[56]||(s[56]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," python"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," pin"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 3.12")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),tab1:l(({value:e,isActive:t})=>s[57]||(s[57]=[i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," env"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," use"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"binar"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"y>")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),_:1}),s[98]||(s[98]=i("p",null,"至于其他非 python 包管理器的工具也可以安装不同版本的 python。有一些是本机。",-1)),n(r,{id:"1184",data:[{id:"scoop"},{id:"pacman"},{id:"pyenv"}]},{title0:l(({value:e,isActive:t})=>s[58]||(s[58]=[a("scoop")])),title1:l(({value:e,isActive:t})=>s[59]||(s[59]=[a("pacman")])),title2:l(({value:e,isActive:t})=>s[60]||(s[60]=[a("pyenv")])),tab0:l(({value:e,isActive:t})=>s[61]||(s[61]=[i("p",null,[a("windows 的 scoop 里有不同版本的 python。（"),i("code",null,"python35"),a(" - "),i("code",null,"python312"),a("）")],-1)])),tab1:l(({value:e,isActive:t})=>s[62]||(s[62]=[i("p",null,[a("archlinux 官方仓库只有最新版 python，但是 archlinuxcn 里有更低的版本。（"),i("code",null,"python37"),a(" - "),i("code",null,"python39"),a("）")],-1)])),tab2:l(({value:e,isActive:t})=>s[63]||(s[63]=[i("p",null,"pyenv 是一个 python 版本管理工具。不算太好用，我不能一键切换，得去找它的安装位置的 python 可执行文件。不过至少能用。",-1)])),_:1}),s[99]||(s[99]=i("p",null,"其次，如果有足够的 testcase，也可以考虑使用 nox，这是一个测试框架，不过我还没试用过。",-1)),s[100]||(s[100]=i("h2",{id:"性能分析",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#性能分析"},[i("span",null,"性能分析")])],-1)),n(r,{id:"1207",data:[{id:"viztracer"},{id:"cProfile"}]},{title0:l(({value:e,isActive:t})=>s[64]||(s[64]=[a("viztracer")])),title1:l(({value:e,isActive:t})=>s[65]||(s[65]=[a("cProfile")])),tab0:l(({value:e,isActive:t})=>s[66]||(s[66]=[i("p",null,[i("a",{href:"https://github.com/gaogaotiantian/viztracer",target:"_blank",rel:"noopener noreferrer"},"viztracer"),a(" 是国人（高天）开发的性能分析工具，类似火焰图，十分简单易用。")],-1),i("ol",null,[i("li",null,"安装 viztracer 和 VizTracer VS Code 插件"),i("li",null,[a("右击代码文件，选择 "),i("code",null,"Trace with VizTracer")]),i("li",null,[a("在当前文件夹根目录找到 "),i("code",null,"result.json"),a("，右击选择 "),i("code",null,"Open in VizTracer")])],-1)])),tab1:l(({value:e,isActive:t})=>s[67]||(s[67]=[i("div",{class:"language-py line-numbers-mode","data-highlighter":"shiki","data-ext":"py",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," pstats")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," cProfile")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"cProfile."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"run"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"my_function()"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"my_func_stats"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"p "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," pstats."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"Stats"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"my_func_stats"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"p."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"sort_stats"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"cumulative"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#61AFEF"}},"print_stats"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),_:1}),s[101]||(s[101]=i("h2",{id:"打包",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#打包"},[i("span",null,"打包")])],-1)),s[102]||(s[102]=i("p",null,[a("实际上 python 写的东西就应该传源码。"),i("s",null,"如果需要打包的话不妨考虑换个语言。")],-1)),n(r,{id:"1240",data:[{id:"nuitka"},{id:"Pyinstaller"},{id:"cx_Freeze"}]},{title0:l(({value:e,isActive:t})=>s[68]||(s[68]=[a("nuitka")])),title1:l(({value:e,isActive:t})=>s[69]||(s[69]=[a("Pyinstaller")])),title2:l(({value:e,isActive:t})=>s[70]||(s[70]=[a("cx_Freeze")])),tab0:l(({value:e,isActive:t})=>[s[81]||(s[81]=i("h3",{id:"nuitka",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#nuitka"},[i("span",null,[i("a",{href:"https://nuitka.net/",target:"_blank",rel:"noopener noreferrer"},"nuitka")])])],-1)),s[82]||(s[82]=i("p",null,[a("这玩意文档只能说一般，甚至没有 "),i("code",null,"--help"),a(" 好用。")],-1)),i("ul",null,[s[79]||(s[79]=i("li",null,[i("p",null,[a("安装（"),i("a",{href:"#poetry"},"poetry"),a("）："),i("code",null,"poetry add --group dev nuitka")])],-1)),i("li",null,[s[77]||(s[77]=i("p",null,"我使用的打包指令：",-1)),s[78]||(s[78]=i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"nuitka3"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --run"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --follow-imports"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --prefer-source-code"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --clang"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --disable-console"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --noinclude-pytest-mode=nofollow"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --noinclude-setuptools-mode=nofollow"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --plugin-enable=upx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main.py")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)),i("ul",null,[s[75]||(s[75]=i("li",null,[i("code",null,"--clang"),a(" 是选择 C 编译器，不用 clang 的话就不指定。")],-1)),s[76]||(s[76]=i("li",null,[i("code",null,"--disable-console"),a("，因为我打包的是 GUI 程序。")],-1)),i("li",null,[s[72]||(s[72]=i("code",null,"--plugin-enable=upx",-1)),s[73]||(s[73]=a(" 使用 ")),n(k,{to:"/articles/minimize_exe.html"},{default:l(()=>s[71]||(s[71]=[a("upx")])),_:1}),s[74]||(s[74]=a(" 插件能够压缩程序大小。需要已安装 upx。"))])])]),s[80]||(s[80]=i("li",null,[i("p",null,[a("其他命令：自行 "),i("code",null,"nuitka3 --help"),a(" 查看")])],-1))])]),tab1:l(({value:e,isActive:t})=>s[83]||(s[83]=[i("p",null,"简单粗暴的传统打包工具。",-1),i("p",null,[a("Pyinstaller 会打包当前环境的所有模块，一般需要隔离出虚拟环境进行打包，参考 "),i("a",{href:"#poetry"},"poetry"),a(" / "),i("a",{href:"#miniconda"},"miniconda"),a("。")],-1),i("p",null,"并且若需要减小打包体积，则需要考虑创建纯净环境。",-1),i("h4",{id:"安装-2",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#安装-2"},[i("span",null,"安装")])],-1),i("p",null,[i("code",null,"pip install pyinstaller -i https://pypi.tuna.tsinghua.edu.cn/simple")],-1),i("h4",{id:"命令",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#命令"},[i("span",null,"命令")])],-1),i("p",null,[a("在.py 目录下，所需环境内执行"),i("code",null,"pyinstaller -D xxxx.py")],-1),i("p",null,"参数解释：",-1),i("ul",null,[i("li",null,[i("code",null,"-D"),a(" 打包为目录文件")]),i("li",null,[i("code",null,"-F"),a(" 打包为单个 exe 文件")]),i("li",null,[i("code",null,"-w"),a(" 运行时不显示命令窗口")]),i("li",null,[i("code",null,"-i <icon.ico>"),a(" 设置图标")])],-1)])),tab2:l(({value:e,isActive:t})=>s[84]||(s[84]=[i("p",null,[i("a",{href:"https://cx-freeze.readthedocs.io/en/latest/installation.html",target:"_blank",rel:"noopener noreferrer"},"cx_Freeze")],-1),i("p",null,"不好用，文档一坨，编译还爆栈了。",-1)])),_:1}),s[103]||(s[103]=i("h2",{id:"发布",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#发布"},[i("span",null,"发布")])],-1)),s[104]||(s[104]=i("p",null,[a("把包发布到 pypi，就能被 "),i("code",null,"pip install"),a(" 了。")],-1)),i("ol",null,[s[90]||(s[90]=i("li",null,[a("注册一个 pypi 账号。 "),i("ul",null,[i("li",null,"需要 2FA，用 github 的肯定不陌生。"),i("li",null,[a("需要申请一个 API token："),i("a",{href:"https://pypi.org/manage/account/",target:"_blank",rel:"noopener noreferrer"},"account"),a(" 向下滑就有。")])])],-1)),i("li",null,[s[89]||(s[89]=a("使用工具构建并发布。")),n(r,{id:"1369",data:[{id:"poetry"},{id:"setuptools"}]},{title0:l(({value:e,isActive:t})=>s[85]||(s[85]=[a("poetry")])),title1:l(({value:e,isActive:t})=>s[86]||(s[86]=[a("setuptools")])),tab0:l(({value:e,isActive:t})=>s[87]||(s[87]=[i("p",null,[a("参考"),i("a",{href:"https://www.digitalocean.com/community/tutorials/how-to-publish-python-packages-to-pypi-using-poetry-on-ubuntu-22-04",target:"_blank",rel:"noopener noreferrer"},"此文"),a("。")],-1),i("ol",null,[i("li",null,[a("写 "),i("code",null,"pyproject.toml"),a("。 "),i("ul",null,[i("li",null,[a("poetry 能够自动推断需要打包的模块。如果 "),i("code",null,"name"),a(" 与 "),i("em",null,"module name"),a(" 不同，需要 "),i("code",null,'packages=[{include="..."}]'),a("。")]),i("li",null,[a("如果目标是一个 binary，需要添加入口点。"),i("div",{class:"language-toml line-numbers-mode","data-highlighter":"shiki","data-ext":"toml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"tool"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"."),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"scripts"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"white","--shiki-dark":"#FFFFFF"}},"<bin name> = '<module>:<function>'")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])])])])]),i("li",null,[a("build & upload"),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," pypi-token.pypi"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," <"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"API"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," toke"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"n>")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," publish"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --build")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])])])],-1)])),tab1:l(({value:e,isActive:t})=>s[88]||(s[88]=[i("ol",null,[i("li",null,[a("写 "),i("code",null,"setup.py"),a("。"),i("s",null,"可以用 GPT 生成，也可以去抄几份。")]),i("li",null,[a("在 "),i("code",null,"$HOME/.pypirc"),a(" 下写入"),i("div",{class:"language-toml line-numbers-mode","data-highlighter":"shiki","data-ext":"toml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"["),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pypi"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"username"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = _"),i("span",{style:{"--shiki-light":"white","--shiki-dark":"#FFFFFF"}},"_token__")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"password"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = <"),i("span",{style:{"--shiki-light":"white","--shiki-dark":"#FFFFFF"}},"API token>")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])]),i("li",null,[a("打包上传，工具任选。 "),i("ul",null,[i("li",null,[a("twine:"),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pipx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," twine")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"python3"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," setup.py"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," sdist"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," bdist_wheel")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"twine"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," upload"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," dist/"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E5C07B"}},"*"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --verbose")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])]),i("li",null,[a("setuptools"),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"python3"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," setup.py"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," sdist"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," upload")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])])])])])],-1)])),_:1})])]),s[105]||(s[105]=h(`<h2 id="其他工具" tabindex="-1"><a class="header-anchor" href="#其他工具"><span>其他工具</span></a></h2><ul><li>混淆： <ul><li><a href="https://kingname.info/2024/07/29/pyarmor/" target="_blank" rel="noopener noreferrer">pyarmor</a></li><li><a href="https://pyob.oxyry.com/" target="_blank" rel="noopener noreferrer">Oxyry Python Obfuscator</a></li></ul></li></ul><h2 id="一些问题" tabindex="-1"><a class="header-anchor" href="#一些问题"><span>一些问题</span></a></h2><h3 id="为什么不该使用-pipx" tabindex="-1"><a class="header-anchor" href="#为什么不该使用-pipx"><span>为什么不该使用 pipx</span></a></h3><details class="hint-container details"><summary>历史事件</summary><p>在一次迁移 python 的过程后，我再次使用 pipx 及其安装的软件，报错 <em>python not found</em>（指向我原先的 python 位置）。</p><p>我纳闷了，我直接 <code>python</code> 能用，也把所有环境变量全改成了新 python 的位置，检查了好几次，为啥还是不能用？</p><p>然后重装 pipx：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --upgrade</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --force-reinstall</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pipx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://pypi.tuna.tsinghua.edu.cn/simple</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>仍然不行。后来在 <code>~/.local/pipx/shared/pyvenv.cfg</code> 找到了没改过的 python 路径。</p><p>原来你 TM 重装是不动配置文件的啊，卸了卸了。</p><p>后话：</p><ul><li>正常的包管理器，例如 <em>pacman</em>，卸载时会将配置存为 <code>*.pacsave</code></li><li>路径不用环境变量存，就已经够奇怪了，更别说还保留 python 的绝对路径。。明明 python 自己有环境变量。</li></ul></details><ul><li>pipx 安装甚至没有进度条。虽然说责任在 setuptools。</li><li>pipx 只会为当前用户安装，而不是全局。</li><li>实际上对于全局用 pip，虚拟环境开 poetry 的我来说，pipx 确实是一个没必要存在的东西 <ul><li>但是在 linux 上不允许全局使用 pip，除非 <code>--break-system-packages</code>。所以 pipx 还是有用武之地的。</li></ul></li></ul><h3 id="找不到-pip" tabindex="-1"><a class="header-anchor" href="#找不到-pip"><span>找不到 pip</span></a></h3><p>执行 <code>python -m pip install --upgrade pip</code> 后报错：</p><blockquote><p>ERROR: Could not install packages due to an OSError: [WinError 5] 拒绝访问。: &#39;c:\\python310\\scripts\\pip.exe&#39;</p></blockquote><p>之后再使用 <code>pip</code> 命令时，就会不断报错，找不到 pip。我觉得很怪。<code>C:\\Python310\\Scripts</code> 路径下也能找得到 pip.exe，环境变量也没改。我在当前路径下打开 cmd ，执行 pip，然而还是不能正常使用。 <s>（忘了报什么错了）</s> 鼓捣了一会儿，试图使用离线安装，提示找不到 wheel.exe.</p><p>最终解决方法：在<a href="https://pypi.org/project/pip/#files" target="_blank" rel="noopener noreferrer">此处</a>下载 <code>.tar.gz</code>，解压后在目录下执行：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setup.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --upgrade</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pip</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --user</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="external" tabindex="-1"><a class="header-anchor" href="#external"><span>external</span></a></h2><ol><li><a href="https://martinheinz.dev/blog/98" target="_blank" rel="noopener noreferrer">The Right Way to Run Shell Commands From Python</a></li><li><a href="https://tryanswer.github.io/2018/05/17/py-int-confusing/" target="_blank" rel="noopener noreferrer">Python 小整数与大整数的处理机制以及整体解释与逐行解释的区别</a></li><li><a href="https://coolshell.cn/articles/11265.html" target="_blank" rel="noopener noreferrer">Python 修饰器的函数式编程</a></li><li><a href="https://zhuanlan.zhihu.com/p/464979921" target="_blank" rel="noopener noreferrer">Python Type Hints 简明教程（基于 Python 3.12）</a></li><li><a href="https://hakibenita.com/fast-excel-python" target="_blank" rel="noopener noreferrer">Fastest Way to Read Excel in Python</a></li><li><a href="https://github.com/robertparley/wtfpython-cn" target="_blank" rel="noopener noreferrer">What the f*ck Python! 🐍 一些有趣且鲜为人知的 Python 特性.</a></li><li><a href="https://andrewwegner.com/python-gotcha-strip-functions-unexpected-behavior.html" target="_blank" rel="noopener noreferrer">Python Gotcha: strip, lstrip, rstrip can remove more than expected</a></li><li><a href="https://outlore.dev/blog/python-dev-2024/" target="_blank" rel="noopener noreferrer">How I manage Python in 2024</a></li><li><a href="https://www.youtube.com/watch?v=srSA-aiHf8Y" target="_blank" rel="noopener noreferrer">如何在 class 内部定义一个装饰器？</a></li><li><a href="https://github.com/Chang-LeHung/dive-into-cpython" target="_blank" rel="noopener noreferrer">Dive-into-cpython</a></li><li><a href="https://frostming.com/2025/singleton/" target="_blank" rel="noopener noreferrer">再也别问 Singleton 了好吗？</a></li><li><a href="https://blog.edward-li.com/tech/advanced-python-features/" target="_blank" rel="noopener noreferrer">14 Advanced Python Features - Edward Li&#39;s Blog</a></li><li><a href="https://fstrings.wtf/" target="_blank" rel="noopener noreferrer">fstrings.wtf</a>：python fstring quiz</li></ol><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p><a href="https://t.me/withabsolutex/1304" target="_blank" rel="noopener noreferrer">不读系统代理，不能配置代理，不做错误处理，不具有可读性</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a> <a href="#footnote-ref1:1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p><a href="https://t.me/withabsolutex/1530" target="_blank" rel="noopener noreferrer">我的一些抱怨</a>；如果要看优美的表处理语法，建议看看 <a href="https://ponyorm.org/" target="_blank" rel="noopener noreferrer">Pony ORM</a>。 <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>`,16))])}const f=g(F,[["render",b],["__file","python.html.vue"]]),C=JSON.parse('{"path":"/coding/python.html","title":"Python","lang":"zh-CN","frontmatter":{"date":"2022-05-04T00:00:00.000Z","icon":"brands fa-python","category":["编程"],"tag":["编程语言"],"description":"Python python 实际上并不简单，只不过生态比较好。 我被 python 坑了太多次，甚至做了个 python-quiz讲述我的经历。 学习 python 入门非常快，简单看点 w3school 即可。进阶可以看一点 码农高天 的视频，虽然有一点炒作，但是不可否认他确实很强（为数不多的华人 python core dev）。 最后，不管学习什...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python\\",\\"image\\":[\\"https://absx.pages.dev/images/coding/python/set_vscode_environment1.png\\",\\"https://absx.pages.dev/images/coding/python/anaconda_2.png\\"],\\"datePublished\\":\\"2022-05-04T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-04T15:58:43.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://absx.pages.dev/coding/python.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"Python"}],["meta",{"property":"og:description","content":"Python python 实际上并不简单，只不过生态比较好。 我被 python 坑了太多次，甚至做了个 python-quiz讲述我的经历。 学习 python 入门非常快，简单看点 w3school 即可。进阶可以看一点 码农高天 的视频，虽然有一点炒作，但是不可否认他确实很强（为数不多的华人 python core dev）。 最后，不管学习什..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://absx.pages.dev/images/coding/python/set_vscode_environment1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-04T15:58:43.000Z"}],["meta",{"property":"article:tag","content":"编程语言"}],["meta",{"property":"article:published_time","content":"2022-05-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-04T15:58:43.000Z"}]]},"git":{"createdTime":1651820768000,"updatedTime":1754323123000,"contributors":[{"name":"lxl66566","username":"lxl66566","email":"1421962366@qq.com","commits":112,"url":"https://github.com/lxl66566"}]},"readingTime":{"minutes":27.84,"words":8351},"filePathRelative":"coding/python.md","localizedDate":"2022年5月4日","excerpt":"\\n","autoDesc":true}');export{f as comp,C as data};
