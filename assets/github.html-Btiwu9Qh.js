import{_ as d,e as o,g as i,f as a,k as g,i as l,h as e,j as t,r as p,o as u}from"./app-BszC_RE5.js";const b="/images/coding/github/releases.png",m="/images/coding/github/assets.png",y="/images/coding/github/packages.png",c={},A={class:"hint-container details"};function B(v,s){const n=p("RouteLink"),k=p("Tabs");return u(),o("div",null,[s[49]||(s[49]=i("h1",null,"Github",-1)),s[50]||(s[50]=i("p",null,[i("a",{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"},"跳转官网")],-1)),s[51]||(s[51]=i("p",null,[e("Github 是全球最大的"),i("s",null,"同性交友平台"),e(" 源代码托管服务平台，拥有良好的开源生态，是开发者的圣地。"),i("span",{class:"heimu",title:"你知道的太多了"},"（我乱写的）")],-1)),s[52]||(s[52]=i("h2",null,"给新人",-1)),i("details",A,[s[24]||(s[24]=i("summary",null,"如果你没听说过 Github，或者知道它但却不会下载，请看完此条目",-1)),i("ul",null,[i("li",null,[s[7]||(s[7]=e("首先，github 服务器在国外，国内访问速度慢且有几率连接不上。请： ")),i("ul",null,[s[4]||(s[4]=i("li",null,"使用校园网访问",-1)),i("li",null,[s[1]||(s[1]=e("使用加速器访问，如 ")),l(n,{to:"/farraginous/recommend_packages.html#steam"},{default:t(()=>s[0]||(s[0]=[e("steam++")])),_:1}),s[2]||(s[2]=e(" 或 ")),s[3]||(s[3]=i("a",{href:"https://github.com/docmirror/dev-sidecar",target:"_blank",rel:"noopener noreferrer"},"dev-sidecar",-1))]),s[5]||(s[5]=i("li",null,"科学上网",-1)),s[6]||(s[6]=i("li",null,"更换访问时间段",-1))])])]),s[25]||(s[25]=a('<blockquote><p>顺带一提，本博客也部署在 Github 上（如果域名是 lxl66566.github.io 的话），所以想在此博客获得更好的阅读体验，请同样采纳上述建议。</p></blockquote><ul><li>其次，你需要一定英语能力，或者会使用机翻。</li></ul><h2>下载文件</h2><p>打开仓库后，点击 releases（发行版）。</p><figure><img src="'+b+'" alt="下载文件" tabindex="0" loading="lazy"><figcaption>下载文件</figcaption></figure><p>在最底下找到 Assets，下载你需要的条目。</p><figure><img src="'+m+'" alt="下载文件" tabindex="0" loading="lazy"><figcaption>下载文件</figcaption></figure><ul><li>Q: Releases 栏显示 No releases published ？</li></ul><p>A: 开发者并未发布 release.</p><ol><li>请查看仓库页面下的 README.md 对该仓库的解释。</li><li>可能源码就是文件本身，请点击 Code -&gt; Download ZIP 下载源码。</li></ol><ul><li>Q: 这么多文件到底要下载哪一个？ <img src="'+y+'" alt="下载文件" loading="lazy"></li></ul><p>A: 此处我假设会看此条目的都是 Windows&amp;Android 用户。</p>',12)),i("ol",null,[s[13]||(s[13]=i("li",null,"排除源码与大小明显不正常的文件（如图中的 sha256sum）。",-1)),s[14]||(s[14]=i("li",null,[e("按照后缀选择，排除后缀"),i("strong",null,"不是"),e("以下格式的： "),i("ul",null,[i("li",null,"Windows 压缩包格式（.7z/.zip/.rar）"),i("li",null,"可执行文件格式（.exe）"),i("li",null,"Android 安装包（.apk）")])],-1)),s[15]||(s[15]=i("li",null,"然后根据你的喜好选择安装版（可执行文件）或者免安装版（压缩包）。建议新人下载安装版。",-1)),i("li",null,[s[12]||(s[12]=e("关于 apk 文件： ")),i("ul",null,[i("li",null,[s[9]||(s[9]=e("如果文件名带有 v7a,v8a 的：请")),l(n,{to:"/articles/mobile/Android_ISA.html"},{default:t(()=>s[8]||(s[8]=[e("查看手机指令集")])),_:1}),s[10]||(s[10]=e("，然后按结果选择。"))]),s[11]||(s[11]=i("li",null,"如果实在无法判断，优先选择更上方的。",-1))])])]),s[26]||(s[26]=i("h2",null,"上传文件",-1)),s[27]||(s[27]=i("p",null,"在此之前，你需要有一个 Github 账号，创建一个属于你自己的仓库。",-1)),i("p",null,[s[17]||(s[17]=e("Github 只支持 Git 作为唯一的版本库格式进行托管。相关内容请跳转")),l(n,{to:"/coding/Git.html"},{default:t(()=>s[16]||(s[16]=[e("编程-工具-Git")])),_:1}),s[18]||(s[18]=e("。"))]),s[28]||(s[28]=i("h2",null,"下载仓库",-1)),s[29]||(s[29]=i("p",null,[e("直接点击 "),i("em",null,"Download ZIP"),e(" 仅下载仓库文件，不包含 "),i("code",null,".git"),e(" 仓库。可以使用 CDN 加速："),i("code",null,"https://codeload.github.com/<your name>/<repo name>/zip/<branch name>")],-1)),i("p",null,[s[20]||(s[20]=e("在需要拉取 ")),s[21]||(s[21]=i("code",null,".git",-1)),s[22]||(s[22]=e(" 仓库时，可以用 clone, pull, fetch 等拉取指令，一般使用 ")),l(n,{to:"/coding/Git.html#%E4%B8%8B%E8%BD%BD"},{default:t(()=>s[19]||(s[19]=[e("clone")])),_:1}),s[23]||(s[23]=e("。"))])]),s[53]||(s[53]=a('<h2>小工具</h2><p>有一些小工具可以增强 Github 的使用体验。</p><ul><li><a href="https://github.com/refined-github/refined-github" target="_blank" rel="noopener noreferrer">Refined-github</a>：一些大杂烩功能。</li><li><a href="https://chromewebstore.google.com/detail/github-pinned-repos/abbhjbdacmekbbpflglmmbhfjgclobfh" target="_blank" rel="noopener noreferrer">Github Pinned Repos</a>：将仓库 pin 到首页</li></ul><h2>markdown 增强</h2><p>冷知识，Github 的 markdown 也可以用提示块，<a href="https://github.com/orgs/community/discussions/16925" target="_blank" rel="noopener noreferrer">src</a>。</p><h2>合并 Pull Request</h2><p>你是一个仓库 owner，有人对仓库发起了 pr。如果你愿意全盘接受改动，可以简单地在网页上点击 merge 即可。如果需要修改细节而对方没开写权限<span class="heimu" title="你知道的太多了">OR 不想亲自动手</span>，那就在网页上提出 review 叫对方改，改到满意为止<span class="heimu" title="你知道的太多了"><s>堪比黑心资本家</s></span>。而这里讲的是第三种情形，即需要修改细节而对方提供写权限，owner 亲自进行修改并 merge 的方法。</p><blockquote><p>为什么不使用 codespace 呢？因为它确实难用（</p></blockquote>',8)),i("ol",null,[s[35]||(s[35]=i("li",null,[e("拉取到本地：可以使用 Github CLI 完成。 "),i("ul",null,[i("li",null,[e("在 pull request 界面右上角点击 "),i("em",null,"Code - Local - Checkout with GitHub CLI"),e("，复制指令。")]),i("li",null,[e("安装 "),i("a",{href:"https://cli.github.com/",target:"_blank",rel:"noopener noreferrer"},"Github CLI"),e("，运行指令。")])])],-1)),i("li",null,[s[31]||(s[31]=e("将提交树上的 HEAD 设为最新的，属于 Contributor 的远程分支：")),s[32]||(s[32]=i("code",null,"git checkout <branch>",-1)),s[33]||(s[33]=e("（")),l(n,{to:"/coding/Git.html"},{default:t(()=>s[30]||(s[30]=[e("参考 Git")])),_:1}),s[34]||(s[34]=e("）"))]),s[36]||(s[36]=i("li",null,"修改",-1)),s[37]||(s[37]=i("li",null,"提交",-1)),s[38]||(s[38]=i("li",null,[e("rebase 一下，想干啥干啥，"),i("s",null,"注释稀烂就删注释，提交没压就 squash 一下"),e("。")],-1)),s[39]||(s[39]=i("li",null,"push 到自己的 remote 即可。",-1))]),s[54]||(s[54]=i("p",null,[e("此时进入 Github pull request 界面一看，发现已经是 "),i("em",null,"Merged"),e(" 的状态了。")],-1)),s[55]||(s[55]=i("h2",null,"搜索技巧",-1)),s[56]||(s[56]=i("p",null,[e("搜索格式与你的关键词使用空格隔开。你也可以使用 "),i("a",{href:"https://github.com/search/advanced",target:"_blank",rel:"noopener noreferrer"},"Github 官方提供的高级搜索"),e("界面。")],-1)),g(" prettier-ignore "),s[57]||(s[57]=a('<table><thead><tr><th style="text-align:center;">格式</th><th style="text-align:center;">作用</th><th style="text-align:center;">样例</th></tr></thead><tbody><tr><td style="text-align:center;">in:name</td><td style="text-align:center;">指定搜索仓库名称</td><td style="text-align:center;"><code>in:name words english</code></td></tr><tr><td style="text-align:center;">in:description</td><td style="text-align:center;">指定搜索摘要</td><td style="text-align:center;">类比</td></tr><tr><td style="text-align:center;">in:readme</td><td style="text-align:center;">指定搜索readme文档</td><td style="text-align:center;">类比</td></tr><tr><td style="text-align:center;">stars:</td><td style="text-align:center;">指定星数范围</td><td style="text-align:center;"><code>stars:&lt;50</code><br><code>stars:&gt;100</code><br><code>stars:50..100</code></td></tr><tr><td style="text-align:center;">fork:</td><td style="text-align:center;">指定fork数范围</td><td style="text-align:center;">类比</td></tr><tr><td style="text-align:center;">language:</td><td style="text-align:center;">指定程序语言</td><td style="text-align:center;"><code>language:c#</code></td></tr><tr><td style="text-align:center;">pushed:</td><td style="text-align:center;">指定最近更新时间范围</td><td style="text-align:center;"><code>pushed:&gt;2022-01-01</code></td></tr><tr><td style="text-align:center;">path:</td><td style="text-align:center;">指定匹配文件名，例如 path:*.toml</td><td style="text-align:center;"></td></tr></tbody></table><p>在这里查看<a href="https://docs.github.com/zh/search-github/github-code-search/understanding-github-code-search-syntax" target="_blank" rel="noopener noreferrer">代码搜索</a>的详细信息。</p><ul><li>fork 项目默认不出现在搜索页面。而 <code>fork:only</code> 仅搜索其 fork 项目，非常好用。 <ul><li>也可以用第三方的工具：<a href="https://techgaun.github.io/active-forks/index.html" target="_blank" rel="noopener noreferrer">active-forks</a> 进行搜索。</li></ul></li><li>如何查看最新的一次提交记录？(<a href="https://www.cnblogs.com/saysmy/p/7292177.html" target="_blank" rel="noopener noreferrer">src</a>)（github 的翻页做的真的垃圾。）</li></ul><h3>其他搜索工具</h3><ul><li><a href="https://grep.app/" target="_blank" rel="noopener noreferrer">grep app</a>，号称是最快的 Github 搜索工具，搜源码比较好用</li><li><a href="https://githubhunt.top/" target="_blank" rel="noopener noreferrer">Githubhunt</a>，AI github search engine，自然语言搜索</li></ul><h2>批量下载 Release</h2><p>我需要批量下载某个 Release 中的所有文件。首先，<strong>需要保证这个仓库是 Public 的</strong>。<span class="heimu" title="你知道的太多了">被坑了，我是傻杯</span></p>',7)),i("ul",null,[i("li",null,[s[41]||(s[41]=e("一个方法是手动复制所有链接，然后用 ")),l(n,{to:"/farraginous/recommend_packages.html#ditto"},{default:t(()=>s[40]||(s[40]=[e("Ditto")])),_:1}),s[42]||(s[42]=e(" 批量粘贴到 AriaNgGUI/IDM 等下载器下载。 ")),s[43]||(s[43]=i("ul",null,[i("li",null,"由于我使用 XDM 而批量下载抽风了，于是只好使用 aria2 下载。")],-1))]),s[44]||(s[44]=a(`<li>另一个方法是用命令行下载(<a href="https://www.bilibili.com/read/cv21459907" target="_blank" rel="noopener noreferrer">ref</a>)。例如在 Archlinux 上：<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pacman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aria2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jq</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://api.github.com/repos/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">USERNAM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">E&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">REPONAM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">E&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/releases/latest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jq</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;.assets[].browser_download_url&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">aria2c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1M</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1))]),s[58]||(s[58]=a(`<h2>Github Workflow</h2><p>Github 工作流，极为强大。可以理解为一个性能强悍的虚拟机帮你跑任务。<a href="https://docs.github.com/cn/actions/using-workflows/about-workflows" target="_blank" rel="noopener noreferrer">官方文档</a></p><p>使用方法：在项目根目录下，新建 <code>.github/workflows/&lt;name&gt;.yml</code>.</p><h3>Trigger</h3><p>ex.</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  workflow_dispatch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  schedule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cron</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;30 00 * * *&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定时任务: 使用 cron 表达式。<a href="https://crontab.guru/" target="_blank" rel="noopener noreferrer">此处</a>可在线计算表达式。</p><blockquote><p>注意，定时任务时间为中时区（UTC），并且会出现 0-60+ min 的延时，若有精确执行需求请使用其他服务商提供的云函数</p></blockquote><p>手动任务：使用 <code>workflow_dispatch</code>；建议每个 workflow 都加一个方便调试。不要再使用 <code>on:push</code> 进行<strong>手动运行控制</strong>。</p><h3>心得</h3><ul><li>if 的外面会自动包 <code>\${{ }}</code>，不需要手动包，否则会出现预料之外的行为。</li><li>前端项目部署到 github pages 注意事项 <ul><li>setup pnpm 要在 setup node 之前。</li><li>注意要在 vite config 里设 base！</li></ul></li></ul><h3>调试</h3><ul><li><a href="https://github.com/mxschmitt/action-tmate" target="_blank" rel="noopener noreferrer">action-tmate</a> 提供了 ssh 进入 action 环境里调试的方法，不过这是违反使用协定的，有被封号的风险。</li><li><a href="https://github.com/nektos/act" target="_blank" rel="noopener noreferrer">act</a> 提供了 github action docker，可以在本地模拟 action 环境。</li></ul><h2>Powerful CI</h2><p>这里列出一些我常用的 CI。顺带一提，CI 就是 Continuous Integration，在每次代码操作后自动进行一系列检查或服务更新部署，简化操作流程。</p><p>写在这里的 CI 理论上应该是语言无关的。如果需要特定编程语言的 CI，可以去对应语言页面查看。</p><p>学习写 CI？不用学习，多看多抄，会用 template 就懂了。</p><h3><a href="https://github.com/crate-ci/typos" target="_blank" rel="noopener noreferrer">typos</a></h3><p>检查你的英文水平（检查代码拼写错误）。rust 写的，速度极快，即使不用 CI 也可以在本地用，方便修复。</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Check Spelling</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">crate-ci/typos@v1.23.3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>本地用就</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> binstall</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> typos-cli</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">typos</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # 检查</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">typos</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 纠正</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3><a href="https://github.com/actions/cache" target="_blank" rel="noopener noreferrer">cache</a></h3><p>缓存构建中的依赖项，加速 CI。比较适合大型项目，依赖很多，经常跑 CI 的那种。个人的小仓库就有点鸡肋了，不如不开 cahce，多花 10 秒钟构建省 300MB 空间，不为 Github 想想也得为 SSD 想想吧~~（虽然不是我的，但爱是平等的）~~。</p><p>每个仓库免费 10 GB 的存储空间，应该是 Github 官方提供的(?)，真富啊。</p><p>有问题去看官方文档，他这个写的还是不差的。这里随手举一个 rust 项目的例子。</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Cache dependencies installed with cargo</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/cache@v4</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      ~/.cargo/bin/</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      ~/.cargo/registry/index/</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      ~/.cargo/registry/cache/</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      ~/.cargo/git/db/</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      target/</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ runner.os }}-cargo-\${{ hashFiles(&#39;**/Cargo.lock&#39;) }}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    restore-keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ runner.os }}-cargo-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3><a href="https://github.com/Mozilla-Actions/sccache-action" target="_blank" rel="noopener noreferrer">sccache-action</a></h3><p>方便地使用 <a href="https://github.com/mozilla/sccache/" target="_blank" rel="noopener noreferrer">sccache</a> 的 CI。这个和上面的 cache 不太一样，sccache 提供更智能的 cache 而不是暴力缓存 <code>./target</code>。</p><p>使用也非常简单，对 rust 来说，设置两个 env，编译前 use 一下就行。编译后还可以打印。</p><h2>Powerful APPs</h2><p>Github APPs 是不同于 CI 的一种自动化功能，它们可以更加自由、更加灵活地帮你操作存储库。当然，并不是所有 APP 都是免费的（毕竟是 APP 提供的服务），你也只能使用 APP 本身有的功能，而不像 CI 那样可以自己写任意指令。</p><h3>自动更新依赖</h3><p>Github 仓库一多，就免不了自动升级依赖。Github 有一些 APP 可以帮你做到这一点。一般来说，项目还需要有测试能跑，并且测试覆盖率越高越好，这样才不会在自动依赖更新时炸掉项目，自己还不知道。</p><p>我的要求是自动更新依赖 + 自动跑测试 + 自动合并，并且只有在测试通过时才能合并。</p>`,35)),l(k,{id:"557",data:[{id:"renovate bot"},{id:"dependabot"}]},{title0:t(({value:r,isActive:h})=>s[45]||(s[45]=[e("renovate bot")])),title1:t(({value:r,isActive:h})=>s[46]||(s[46]=[e("dependabot")])),tab0:t(({value:r,isActive:h})=>s[47]||(s[47]=[i("p",null,"renovate bot 是一个更加强大的依赖管理 APP。据说是因为 dependabot 非常保守，不肯支持新的语言，它才出现的。renovate bot 自身就支持多语言的依赖升级 + 自动合并。",-1),i("p",null,"但是 renovate bot 的文档简直就是一坨大便，我摸索了很久才得以一窥门道。",-1),i("ol",null,[i("li",null,[e("renovate bot "),i("a",{href:"https://docs.renovatebot.com/config-presets/",target:"_blank",rel:"noopener noreferrer"},"支持引用其他配置文件"),e("。也就是我可以在一个单独的 Github 存储库里放一个通用配置，就可以在各个库里引用这同一份配置，这样比较好统一更改。")]),i("li",null,[e("renovate bot 的配置项 Reference 在"),i("a",{href:"https://docs.renovatebot.com/configuration-options",target:"_blank",rel:"noopener noreferrer"},"这里"),e("。当然这么多不可能每个都看一遍，只能去网上抄其他人的。这里是我的一个模板样例："),i("div",{class:"language-json line-numbers-mode","data-highlighter":"shiki","data-ext":"json",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"{")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "$schema"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"https://docs.renovatebot.com/renovate-schema.json"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "extends"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": ["),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"config:base"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"],")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "timezone"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"Asia/Shanghai"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "semanticCommits"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"enabled"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "schedule"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": ["),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"on the first day of the week"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"],")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "commitMessagePrefix"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"chore(deps): "'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "automerge"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#D19A66"}},"true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "automergeStrategy"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"rebase"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "platformAutomerge"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#D19A66"}},"true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'  "vulnerabilityAlerts"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": {")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'    "enabled"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#D19A66"}},"true"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},",")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},'    "automerge"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#D19A66"}},"true")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  }")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])])],-1)])),tab1:t(({value:r,isActive:h})=>s[48]||(s[48]=[i("p",null,"dependabot 是老牌的自动更新 APP 了，Github 官方推出的，还不错。",-1),i("p",null,[e("以 rust 项目为例，只需要在 "),i("code",null,".github/dependabot.yml"),e(" 写：")],-1),i("div",{class:"language-yml line-numbers-mode","data-highlighter":"shiki","data-ext":"yml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"version"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"updates"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  - "),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"package-ecosystem"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"cargo"')]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    directory"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"/"')]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    schedule"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),e(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"      interval"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"weekly"')])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,"即可。首次启用记得在 Security 里开启 dependabot。",-1),i("p",null,[e("至于 auto merge，我试过了 "),i("a",{href:"https://github.com/marketplace/dependabot-auto-merger",target:"_blank",rel:"noopener noreferrer"},"dependabot-auto-merger"),e("，但是其并不能正常合并。即使我已经设置了 branch protect rules 也不行。")],-1),i("h2",null,"external",-1),i("ol",null,[i("li",null,[i("a",{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"},"约定式提交")]),i("li",null,[i("a",{href:"https://xuanwo.io/reports/2022-45/",target:"_blank",rel:"noopener noreferrer"},"使用 sccache 加快 Rust 编译速度")])],-1)])),_:1})])}const f=d(c,[["render",B],["__file","github.html.vue"]]),C=JSON.parse('{"path":"/coding/github.html","title":"Github","lang":"zh-CN","frontmatter":{"date":"2022-09-06T00:00:00.000Z","icon":"brands fa-github","category":["编程","教程"],"tag":["工具"],"description":"Github 跳转官网 Github 是全球最大的 源代码托管服务平台，拥有良好的开源生态，是开发者的圣地。（我乱写的） 给新人 如果你没听说过 Github，或者知道它但却不会下载，请看完此条目 首先，github 服务器在国外，国内访问速度慢且有几率连接不上。请： 使用校园网访问 使用加速器访问，如 或 dev-sidecar 科学上网 更换访问时...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Github\\",\\"image\\":[\\"https://absx.pages.dev/images/coding/github/releases.png\\",\\"https://absx.pages.dev/images/coding/github/assets.png\\",\\"https://absx.pages.dev/images/coding/github/packages.png\\"],\\"datePublished\\":\\"2022-09-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-30T17:45:51.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://absx.pages.dev/coding/github.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"Github"}],["meta",{"property":"og:description","content":"Github 跳转官网 Github 是全球最大的 源代码托管服务平台，拥有良好的开源生态，是开发者的圣地。（我乱写的） 给新人 如果你没听说过 Github，或者知道它但却不会下载，请看完此条目 首先，github 服务器在国外，国内访问速度慢且有几率连接不上。请： 使用校园网访问 使用加速器访问，如 或 dev-sidecar 科学上网 更换访问时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://absx.pages.dev/images/coding/github/releases.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-30T17:45:51.000Z"}],["meta",{"property":"article:tag","content":"工具"}],["meta",{"property":"article:published_time","content":"2022-09-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-30T17:45:51.000Z"}]]},"git":{"createdTime":1662444810000,"updatedTime":1746035151000,"contributors":[{"name":"lxl66566","username":"lxl66566","email":"18259734087@163.com","commits":39,"url":"https://github.com/lxl66566"}]},"readingTime":{"minutes":9.02,"words":2705},"filePathRelative":"coding/github.md","localizedDate":"2022年9月6日","excerpt":"\\n","autoDesc":true}');export{f as comp,C as data};
