import{_ as d,e as m,g as e,f as i,k as f,i as o,h as t,j as n,r,o as g}from"./app-CXrVvxuj.js";const h={};function x(b,l){const a=r("RouteLink"),p=r("Badge"),u=r("heimu"),s=r("dated");return g(),m("div",null,[l[15]||(l[15]=e("h1",{id:"对-xxx-的希望",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#对-xxx-的希望"},[e("span",null,"对 xxx 的希望")])],-1)),l[16]||(l[16]=e("p",null,"你可以从此处看到我的事物观念。",-1)),e("p",null,[l[1]||(l[1]=t("查看政治性内容请前往")),o(a,{to:"/gossip/wish.html"},{default:n(()=>l[0]||(l[0]=[t("愿景")])),_:1}),l[2]||(l[2]=t("。"))]),l[17]||(l[17]=e("h2",{id:"对移动端剪贴板的希望",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#对移动端剪贴板的希望"},[e("span",null,"对移动端剪贴板的希望")])],-1)),e("blockquote",null,[e("p",null,[l[4]||(l[4]=t("桌面端剪贴板有 ")),o(a,{to:"/farraginous/recommend_packages.html#ditto"},{default:n(()=>l[3]||(l[3]=[t("ditto")])),_:1})])]),l[18]||(l[18]=e("p",null,"无论是国内输入法的长时间保存剪贴板，还是谷歌输入法的一小时后删除的剪贴板，都有其取舍与不便之处。我选择折中说——",-1)),e("ul",null,[e("li",null,[l[5]||(l[5]=t("剪贴板数据永久保存")),o(p,{type:"tip",text:"仅文本数据"}),l[6]||(l[6]=t("，可手动访问，而应用对剪贴板的访问通过条数来限制。（例：仅能访问最近一条）"))])]),l[19]||(l[19]=i('<h2 id="对浏览器的希望" tabindex="-1"><a class="header-anchor" href="#对浏览器的希望"><span>对浏览器的希望</span></a></h2><ul><li>原生支持 ts when</li><li>参考一下人家 <a href="https://type.cyhsu.xyz/2022/08/arc/" target="_blank" rel="noopener noreferrer">Arc</a> 的设计理念</li></ul><h2 id="对编程语言的希望" tabindex="-1"><a class="header-anchor" href="#对编程语言的希望"><span>对编程语言的希望</span></a></h2><ul><li>完整的 oop (class + interface / trait) <ul><li><em>interface</em> / <em>trait</em> 提供了自由组合，在泛型中具有极为强大的作用。只依赖虚函数继承的纯 class 不够完备。</li></ul></li><li>充分的内置数据类型 (dict, tree and map)</li><li>清晰的所有权机制 (rust, <s>我们不要学 c++</s>) <ul><li>并且可以选择是否使用 gc (<code>import gc</code>)</li></ul></li><li>完善的包管理与二进制编译 (cargo, minimize release bin)</li><li>提供最高的自由度 (可以直接操作 pointer)</li><li>所有错误均为可恢复错误 (python) <ul><li><blockquote><p>例如，linux rust 内核尽量避免 panic</p></blockquote></li><li><s>尽可能减少 undefined behaviour</s>。ub 可以增加性能</li></ul></li><li><s>通过 io 暂存变量</s> 便捷的 serialization 支持</li><li>高度模块化</li><li>支持对函数式编程的优化，例如热更新 (hot-reloading) <ul><li>区别函数 (function) 与闭包 (closure)，推荐使用链式调用</li></ul></li><li>自由选择静态类型与动态类型 (ts, any)</li><li>充足的语法糖 (js, kt)</li></ul><p>可能算是各语言优点的融合怪。。不过确实不是很现实捏~</p><h2 id="对算法竞赛-oj-contest-的希望" tabindex="-1"><a class="header-anchor" href="#对算法竞赛-oj-contest-的希望"><span>对算法竞赛 &amp; OJ contest 的希望</span></a></h2><ul><li>支持所有主流语言的所有主要版本。（主流语言至少得包括 15 个吧，版本得支持最新标准，C++ 得支持多编译器吧）</li><li>提交后即时出结果。（I love IOI，这个是根据赛制决定的。然而我不喜欢非实时的赛制。）</li><li>样例必需具有典型性与足够的数量级。<s>（出题人，您也不想您的母亲被人问候吧，）</s></li><li>需要对至少不止一个样例作出样例解释。</li><li>提供快读模版，否则请留出充足的 io 时间。</li><li>检查点不包含样例数据。</li><li>对于 online 的非正式比赛，在任何时候（赛前、中、后）都应能够参加比赛做题。</li></ul><h2 id="对聊天软件-协议的希望" tabindex="-1"><a class="header-anchor" href="#对聊天软件-协议的希望"><span>对聊天软件/协议的希望</span></a></h2><p>用了一堆聊天软件，脑子里已经有了许多清晰的认知。</p><p>首先这里解释一些概念：</p><ul><li><p>Organization(org)：最基本的管理单位</p></li><li><p>会话：Organization 下属的一个管理单位，可以是 simple processer multiple comsumer（频道/公告），oneshot（私聊），mpmc（群组）等。</p></li><li><p>基础设置都分为：全局设置，org 内设置，会话内设置。</p></li><li><p>分组！打 tag！</p><ul><li>分组是一种抽象，但是细分不能层次超过两层，即用户最多点击两次就能进入任何会话。目前的聊天软件基本都如此设计。</li><li>以 Organization 为核心，单个 org 内能够创建不同的会话，并进行细致的权限管理。</li><li>普通成员可以在 org 中创建任意个私密会话，并加入 org 中的成员，私密会话对未加入成员不可见。也就是将所谓的“拉小群”功能集成到 org 本身。</li></ul></li><li><p>多取一功能：对 org 内的一部分人@，而其中的任一一人回复，就会取消这个@对其他人的高亮提醒。</p></li><li><p>能够创建单条消息引用链接和多条。</p></li><li><p>需要<strong>完美的</strong>上下文定位功能。（这点现有聊天软件都做的很差）</p></li><li><p>支持较好的全局搜索功能（CJK）。</p></li><li><p>永久云端保存<strong>文本</strong>聊天记录，本机保存媒体。</p><ul><li>或者，静态文件以 hash 标识，唯一来源激励，人工响应判重系统，有效转发延时。</li></ul></li><li><p>支持类正则式 pattern 屏蔽，按成员屏蔽。</p></li><li><p>完整地支持 markdown。（telegram 差了点）</p></li><li><p>支持自定义排版样式，html 或自定义排版语言。</p></li><li><p>设置是否允许其他人看到已读状态</p></li><li><p>提供 bot api</p></li><li><p>端到端加密压缩，节省存储空间与流量</p><ul><li>org 内分发公钥</li></ul></li></ul><h2 id="对推荐算法的希望" tabindex="-1"><a class="header-anchor" href="#对推荐算法的希望"><span>对推荐算法的希望</span></a></h2><div class="subtitle">——如果人无法控制自己的喜好，那么这个推荐算法还是赶紧死掉比较好。</div><p>点名<a href="https://www.bilibili.com" target="_blank" rel="noopener noreferrer">B 站</a>。</p><ul><li><strong>开源透明，任何人可管理自己的喜好。</strong></li><li>提供喜好管理面板，可随时添加或删除。</li><li>算法以 tag 而不是某一类型视频作为推荐依据。</li><li>在面对一个被推荐的 tag 时，用户可选择： <ol><li>封禁此 tag 半年 / 一个月 / 永久</li><li>减少此 tag 出现频率半年 / 一个月 / 永久</li><li>增加此 tag 推荐频率半年 / 一个月 / 永久</li><li>大幅增加此 tag 推荐频率 15 天</li></ol></li></ul>',15)),f(` ## 对登录验证的希望
类似*以 Google 账号登录* 这种模式是非常好的，免去了繁琐的注册过程。但是 Google 会禁止不符合 Google 安全标准的网站使用它们的 API？ `),l[20]||(l[20]=i('<h2 id="对翻译协作平台的希望" tabindex="-1"><a class="header-anchor" href="#对翻译协作平台的希望"><span>对翻译协作平台的希望</span></a></h2><p>翻译平台我只用过 <a href="https://crowdin.com/" target="_blank" rel="noopener noreferrer">Crowdin</a> 和 <a href="https://weblate.org/zh-hans/" target="_blank" rel="noopener noreferrer">WEBLATE</a>，当时已经有了一些想法。最近我和 Asuka Minato 被 <a href="https://gitlocalize.com/" target="_blank" rel="noopener noreferrer">GitLocalize</a> 恶心到了<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>，于是我开始深入思考一个好的翻译平台需要做到哪些东西。</p>',2)),e("ul",null,[l[12]||(l[12]=i("<li>接入机翻预翻译支持，人工润色，可以轻松很多。 <ul><li>机翻本身质量不要太差。Google, deepl 都行，其他的得具体分析。</li><li>Crowdin 的机翻就不太够。</li></ul></li><li>细粒度的协作，特别是志愿翻译更需要做到这一点。能够将翻译精确到句子，即可以只翻译这一句话，而不是整个文档。通过分散目标，能够充分调动译者的积极性，并且容易让更多的人参与。 <ul><li>我本来是想为某项目翻两句的，然而它用的 GitLocalize 不支持细粒度，导致我没有动力而直接放弃。（毕竟是个我自己都不用的项目）</li></ul></li><li>对他人的翻译做出修改与评价（评分）。 <ul><li>对于大众翻译，译者的水平不尽相同。</li><li>在不同场景下有不同的翻译需求。文档一般没有太多翻译空间，但是对于文学作品来说，听取不同的翻译意见是很重要的。</li><li>评价当然也需要是细粒度的（针对某句翻译评价）。</li></ul></li>",3)),e("li",null,[l[11]||(l[11]=t("统一专有名词与关键词的译法。 ")),e("ul",null,[e("li",null,[l[8]||(l[8]=t("我最近在看的 ")),l[9]||(l[9]=e("a",{href:"https://github.com/re-zero-khis/re0-web",target:"_blank",rel:"noopener noreferrer"},"Re0",-1)),l[10]||(l[10]=t(" 文库版，里面的人名都不统一。")),o(u,null,{default:n(()=>l[7]||(l[7]=[t("特别是前面译 "),e("code",null,"巴鲁斯",-1),t("，后面直接变成 "),e("code",null,"864",-1),t("，我真的没绷住，太野鸡了")])),_:1})])])]),l[13]||(l[13]=e("li",null,"容易与项目集成/接入。这是开发者要考虑的选项，也是一个翻译平台被选择的大前提。如果为了 i18n 而要手动将文档内容（例如 md）转成平台的支持格式（例如 yaml 或 binary），我肯定会觉得痛苦然后放弃的。",-1)),l[14]||(l[14]=e("li",null,[t("翻译内容安全性。由于内容全部存在云上，这对云服务商提出了一些要求（实际上也是最基本的需求）。反应速度先不说，至少翻译的东西不能丢吧。 "),e("ul",null,[e("li",null,[t("记得本地留备份。"),e("sup",{class:"footnote-ref"},[e("a",{href:"#footnote2"},"[2]"),e("a",{class:"footnote-anchor",id:"footnote-ref2"})])])])],-1))]),o(s,{date:"20240327"}),l[21]||(l[21]=e("h2",{id:"对-rss-阅读器的希望",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#对-rss-阅读器的希望"},[e("span",null,"对 RSS 阅读器的希望")])],-1)),l[22]||(l[22]=e("ul",null,[e("li",null,"不要太大，不要 electron 那样内置浏览器。"),e("li",null,"具有浏览器扩展或者类似功能，可以选中网页元素，自动推断订阅源。例如 RSSHub 和 ireader。"),e("li",null,"订阅源分组/分 tag，高维度控制。"),e("li",null,"集成社交媒体的 bot（例：telegram），可以通过其发送 RSS 消息。"),e("li",null,"自动 AI 总结。")],-1)),o(s,{date:"20241116"}),l[23]||(l[23]=i('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>严格意义上说，我还没开始用，所以还好（） <a href="https://t.me/withabsolutex/1532" target="_blank" rel="noopener noreferrer">我的评价</a> <a href="https://t.me/absxsgroup/6316" target="_blank" rel="noopener noreferrer">排版问题</a> <a href="https://t.me/absxsgroup/6331" target="_blank" rel="noopener noreferrer">东西丢了</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><blockquote><p>对东西都上云的朋友劝一句：不能自己掌控的数据，一个 bit 都不是你的。这句话我已经验证过至少 3 次了。——<a href="https://t.me/c/1969322282/14" target="_blank" rel="noopener noreferrer">Jeff Ng</a></p></blockquote><a href="#footnote-ref2" class="footnote-backref">↩︎</a></li></ol></section>',2))])}const k=d(h,[["render",x],["__file","hope.html.vue"]]),y=JSON.parse('{"path":"/gossip/hope.html","title":"对 xxx 的希望","lang":"zh-CN","frontmatter":{"date":"2022-06-11T00:00:00.000Z","icon":"face-grin-stars","category":["主张","评价"],"tag":["希望"],"description":"对 xxx 的希望 你可以从此处看到我的事物观念。 查看政治性内容请前往。 对移动端剪贴板的希望 桌面端剪贴板有 无论是国内输入法的长时间保存剪贴板，还是谷歌输入法的一小时后删除的剪贴板，都有其取舍与不便之处。我选择折中说—— 剪贴板数据永久保存 对浏览器的希望 原生支持 ts when 参考一下人家 Arc 的设计理念 对编程语言的希望 完整的 oo...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对 xxx 的希望\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-16T16:53:02.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://absx.pages.dev/gossip/hope.html"}],["meta",{"property":"og:site_name","content":"绝对值_x 的博客"}],["meta",{"property":"og:title","content":"对 xxx 的希望"}],["meta",{"property":"og:description","content":"对 xxx 的希望 你可以从此处看到我的事物观念。 查看政治性内容请前往。 对移动端剪贴板的希望 桌面端剪贴板有 无论是国内输入法的长时间保存剪贴板，还是谷歌输入法的一小时后删除的剪贴板，都有其取舍与不便之处。我选择折中说—— 剪贴板数据永久保存 对浏览器的希望 原生支持 ts when 参考一下人家 Arc 的设计理念 对编程语言的希望 完整的 oo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-16T16:53:02.000Z"}],["meta",{"property":"article:tag","content":"希望"}],["meta",{"property":"article:published_time","content":"2022-06-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-16T16:53:02.000Z"}]]},"git":{"createdTime":1667124414000,"updatedTime":1731775982000,"contributors":[{"name":"lxl66566","username":"lxl66566","email":"18259734087@163.com","commits":25,"url":"https://github.com/lxl66566"}]},"readingTime":{"minutes":6.99,"words":2098},"filePathRelative":"gossip/hope.md","localizedDate":"2022年6月11日","excerpt":"\\n","autoDesc":true}');export{k as comp,y as data};
